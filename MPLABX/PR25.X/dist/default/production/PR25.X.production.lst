

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Jul 13 13:02:13 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  000E                     	;# 
    37  000F                     	;# 
    38  0010                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0013                     	;# 
    42  0014                     	;# 
    43  0015                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001D                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0087                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0098                     	;# 
    68  0099                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  010F                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79                           
    80                           	psect	idataBANK0
    81  00A4                     __pidataBANK0:	
    82                           
    83                           ;initializer for main@F1017
    84  00A4  34B1               	retlw	177
    85  00A5  3457               	retlw	87
    86  00A6  3400               	retlw	0
    87  00A7  3400               	retlw	0
    88                           
    89                           ;initializer for main@F1015
    90  00A8  347F               	retlw	127
    91  00A9  3400               	retlw	0
    92  0006                     _PORTB	set	6
    93  0028                     _RA0	set	40
    94  0029                     _RA1	set	41
    95  002C                     _RA4	set	44
    96  0039                     _RC1	set	57
    97  003A                     _RC2	set	58
    98  003B                     _RC3	set	59
    99  003C                     _RC4	set	60
   100  003D                     _RC5	set	61
   101  009F                     _ADCON1	set	159
   102  0085                     _TRISA	set	133
   103  0086                     _TRISB	set	134
   104  0087                     _TRISC	set	135
   105                           
   106                           	psect	strings
   107  0003                     __pstrings:	
   108  0003                     stringtab:	
   109  0003                     __stringtab:	
   110  0003                     stringcode:	
   111                           ;	String table - string pointers are 1 byte each
   112                           
   113  0003                     stringdir:	
   114  0003  3000               	movlw	high stringdir
   115  0004  008A               	movwf	10
   116  0005  0804               	movf	4,w
   117  0006  0A84               	incf	4,f
   118  0007  0782               	addwf	2,f
   119  0008                     __stringbase:	
   120  0008  3400               	retlw	0
   121  0009                     __end_of__stringtab:	
   122  0009                     STR_8:	
   123  0009  3455               	retlw	85	;'U'
   124  000A  3473               	retlw	115	;'s'
   125  000B  3465               	retlw	101	;'e'
   126  000C  3472               	retlw	114	;'r'
   127  000D  3420               	retlw	32	;' '
   128  000E  3469               	retlw	105	;'i'
   129  000F  3464               	retlw	100	;'d'
   130  0010  3465               	retlw	101	;'e'
   131  0011  346E               	retlw	110	;'n'
   132  0012  3474               	retlw	116	;'t'
   133  0013  3469               	retlw	105	;'i'
   134  0014  3466               	retlw	102	;'f'
   135  0015  3469               	retlw	105	;'i'
   136  0016  3465               	retlw	101	;'e'
   137  0017  3464               	retlw	100	;'d'
   138  0018  342E               	retlw	46	;'.'
   139  0019  3420               	retlw	32	;' '
   140  001A  3400               	retlw	0
   141  001B                     STR_5:	
   142  001B  3420               	retlw	32	;' '
   143  001C  3420               	retlw	32	;' '
   144  001D  3420               	retlw	32	;' '
   145  001E  3420               	retlw	32	;' '
   146  001F  3453               	retlw	83	;'S'
   147  0020  3461               	retlw	97	;'a'
   148  0021  3476               	retlw	118	;'v'
   149  0022  3465               	retlw	101	;'e'
   150  0023  3420               	retlw	32	;' '
   151  0024  346D               	retlw	109	;'m'
   152  0025  346F               	retlw	111	;'o'
   153  0026  3464               	retlw	100	;'d'
   154  0027  3465               	retlw	101	;'e'
   155  0028  3420               	retlw	32	;' '
   156  0029  3420               	retlw	32	;' '
   157  002A  3420               	retlw	32	;' '
   158  002B  3400               	retlw	0
   159  002C                     STR_14:	
   160  002C  3455               	retlw	85	;'U'
   161  002D  3473               	retlw	115	;'s'
   162  002E  3465               	retlw	101	;'e'
   163  002F  3472               	retlw	114	;'r'
   164  0030  3420               	retlw	32	;' '
   165  0031  346E               	retlw	110	;'n'
   166  0032  346F               	retlw	111	;'o'
   167  0033  3474               	retlw	116	;'t'
   168  0034  3420               	retlw	32	;' '
   169  0035  3466               	retlw	102	;'f'
   170  0036  346F               	retlw	111	;'o'
   171  0037  3475               	retlw	117	;'u'
   172  0038  346E               	retlw	110	;'n'
   173  0039  3464               	retlw	100	;'d'
   174  003A  342E               	retlw	46	;'.'
   175  003B  3400               	retlw	0
   176  003C                     STR_6:	
   177  003C  3420               	retlw	32	;' '
   178  003D  3450               	retlw	80	;'P'
   179  003E  346C               	retlw	108	;'l'
   180  003F  3461               	retlw	97	;'a'
   181  0040  3463               	retlw	99	;'c'
   182  0041  3465               	retlw	101	;'e'
   183  0042  3420               	retlw	32	;' '
   184  0043  3479               	retlw	121	;'y'
   185  0044  346F               	retlw	111	;'o'
   186  0045  3475               	retlw	117	;'u'
   187  0046  3472               	retlw	114	;'r'
   188  0047  3420               	retlw	32	;' '
   189  0048  3474               	retlw	116	;'t'
   190  0049  3461               	retlw	97	;'a'
   191  004A  3467               	retlw	103	;'g'
   192  004B  3400               	retlw	0
   193  004C                     STR_12:	
   194  004C  3455               	retlw	85	;'U'
   195  004D  3473               	retlw	115	;'s'
   196  004E  3465               	retlw	101	;'e'
   197  004F  3472               	retlw	114	;'r'
   198  0050  3420               	retlw	32	;' '
   199  0051  3449               	retlw	73	;'I'
   200  0052  3444               	retlw	68	;'D'
   201  0053  3420               	retlw	32	;' '
   202  0054  3473               	retlw	115	;'s'
   203  0055  3461               	retlw	97	;'a'
   204  0056  3476               	retlw	118	;'v'
   205  0057  3465               	retlw	101	;'e'
   206  0058  3464               	retlw	100	;'d'
   207  0059  342E               	retlw	46	;'.'
   208  005A  3400               	retlw	0
   209  005B                     STR_9:	
   210  005B  3444               	retlw	68	;'D'
   211  005C  346F               	retlw	111	;'o'
   212  005D  346F               	retlw	111	;'o'
   213  005E  3472               	retlw	114	;'r'
   214  005F  3420               	retlw	32	;' '
   215  0060  346C               	retlw	108	;'l'
   216  0061  346F               	retlw	111	;'o'
   217  0062  3463               	retlw	99	;'c'
   218  0063  346B               	retlw	107	;'k'
   219  0064  3420               	retlw	32	;' '
   220  0065  3477               	retlw	119	;'w'
   221  0066  3469               	retlw	105	;'i'
   222  0067  346C               	retlw	108	;'l'
   223  0068  346C               	retlw	108	;'l'
   224  0069  3400               	retlw	0
   225  006A                     STR_10:	
   226  006A  3462               	retlw	98	;'b'
   227  006B  3465               	retlw	101	;'e'
   228  006C  3420               	retlw	32	;' '
   229  006D  346C               	retlw	108	;'l'
   230  006E  346F               	retlw	111	;'o'
   231  006F  3463               	retlw	99	;'c'
   232  0070  346B               	retlw	107	;'k'
   233  0071  3465               	retlw	101	;'e'
   234  0072  3464               	retlw	100	;'d'
   235  0073  3420               	retlw	32	;' '
   236  0074  3469               	retlw	105	;'i'
   237  0075  346E               	retlw	110	;'n'
   238  0076  3420               	retlw	32	;' '
   239  0077  3400               	retlw	0
   240  0078                     STR_4:	
   241  0078  346F               	retlw	111	;'o'
   242  0079  346E               	retlw	110	;'n'
   243  007A  3420               	retlw	32	;' '
   244  007B  3474               	retlw	116	;'t'
   245  007C  3468               	retlw	104	;'h'
   246  007D  3465               	retlw	101	;'e'
   247  007E  3420               	retlw	32	;' '
   248  007F  3472               	retlw	114	;'r'
   249  0080  3465               	retlw	101	;'e'
   250  0081  3461               	retlw	97	;'a'
   251  0082  3464               	retlw	100	;'d'
   252  0083  3465               	retlw	101	;'e'
   253  0084  3472               	retlw	114	;'r'
   254  0085  3400               	retlw	0
   255  0086                     STR_1:	
   256  0086  3420               	retlw	32	;' '
   257  0087  3452               	retlw	82	;'R'
   258  0088  3446               	retlw	70	;'F'
   259  0089  3449               	retlw	73	;'I'
   260  008A  3444               	retlw	68	;'D'
   261  008B  3420               	retlw	32	;' '
   262  008C  3464               	retlw	100	;'d'
   263  008D  346F               	retlw	111	;'o'
   264  008E  346F               	retlw	111	;'o'
   265  008F  3472               	retlw	114	;'r'
   266  0090  3400               	retlw	0
   267  0091                     STR_2:	
   268  0091  3420               	retlw	32	;' '
   269  0092  3473               	retlw	115	;'s'
   270  0093  3465               	retlw	101	;'e'
   271  0094  3463               	retlw	99	;'c'
   272  0095  3475               	retlw	117	;'u'
   273  0096  3472               	retlw	114	;'r'
   274  0097  3469               	retlw	105	;'i'
   275  0098  3474               	retlw	116	;'t'
   276  0099  3479               	retlw	121	;'y'
   277  009A  3400               	retlw	0
   278  009B                     STR_7:	
   279  009B  3449               	retlw	73	;'I'
   280  009C  3444               	retlw	68	;'D'
   281  009D  3420               	retlw	32	;' '
   282  009E  346E               	retlw	110	;'n'
   283  009F  346F               	retlw	111	;'o'
   284  00A0  343A               	retlw	58	;':'
   285  00A1  3420               	retlw	32	;' '
   286  00A2  3400               	retlw	0
   287  009B                     
   288                           ; #config settings
   289  0000                     
   290                           	psect	cinit
   291  07D8                     start_initialization:	
   292  07D8                     __initialization:	
   293                           
   294                           ; Initialize objects allocated to BANK0
   295  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   296  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   297  07DA  120A  118A  20A4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   298  07DF  00D3               	movwf	__pdataBANK0& (0+127)
   299  07E0  120A  118A  20A5  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   300  07E5  00D4               	movwf	(__pdataBANK0+1)& (0+127)
   301  07E6  120A  118A  20A6  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   302  07EB  00D5               	movwf	(__pdataBANK0+2)& (0+127)
   303  07EC  120A  118A  20A7  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   304  07F1  00D6               	movwf	(__pdataBANK0+3)& (0+127)
   305  07F2  120A  118A  20A8  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   306  07F7  00D7               	movwf	(__pdataBANK0+4)& (0+127)
   307  07F8  120A  118A  20A9   	fcall	__pidataBANK0+5	;fetch initializer
   308  07FB  00D8               	movwf	(__pdataBANK0+5)& (0+127)
   309  07FC                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  07FC                     __end_of__initialization:	
   313  07FC  0183               	clrf	3
   314  07FD  120A  118A  2C6D   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	dataBANK0
   317  0053                     __pdataBANK0:	
   318  0053                     main@F1017:	
   319  0053                     	ds	4
   320  0057                     main@F1015:	
   321  0057                     	ds	2
   322                           
   323                           	psect	cstackCOMMON
   324  0070                     __pcstackCOMMON:	
   325  0070                     ?_init:	
   326  0070                     ?_lcd_clr:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_lcd_goto:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_send_string:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_delay:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_send_config:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_e_pulse:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_main:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ?_send_char:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0070                     ?___lldiv:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0070                     ?___llmod:	
   354                           ; 4 bytes @ 0x0
   355                           
   356  0070                     delay@data:	
   357                           ; 4 bytes @ 0x0
   358                           
   359  0070                     ___lldiv@divisor:	
   360                           ; 4 bytes @ 0x0
   361                           
   362  0070                     ___llmod@divisor:	
   363                           ; 4 bytes @ 0x0
   364                           
   365                           
   366                           ; 4 bytes @ 0x0
   367  0070                     	ds	4
   368  0074                     ??_delay:	
   369  0074                     delay@i:	
   370                           ; 0 bytes @ 0x4
   371                           
   372  0074                     ___lldiv@dividend:	
   373                           ; 2 bytes @ 0x4
   374                           
   375  0074                     ___llmod@dividend:	
   376                           ; 4 bytes @ 0x4
   377                           
   378                           
   379                           ; 4 bytes @ 0x4
   380  0074                     	ds	2
   381  0076                     ??_send_config:	
   382  0076                     ??_e_pulse:	
   383                           ; 0 bytes @ 0x6
   384                           
   385  0076                     ??_send_char:	
   386                           ; 0 bytes @ 0x6
   387                           
   388  0076                     send_config@data:	
   389                           ; 0 bytes @ 0x6
   390                           
   391  0076                     send_char@data:	
   392                           ; 1 bytes @ 0x6
   393                           
   394                           
   395                           ; 1 bytes @ 0x6
   396  0076                     	ds	1
   397  0077                     ??_init:	
   398  0077                     ??_lcd_clr:	
   399                           ; 0 bytes @ 0x7
   400                           
   401  0077                     ??_lcd_goto:	
   402                           ; 0 bytes @ 0x7
   403                           
   404  0077                     ??_send_string:	
   405                           ; 0 bytes @ 0x7
   406                           
   407                           
   408                           ; 0 bytes @ 0x7
   409  0077                     	ds	1
   410  0078                     ??___lldiv:	
   411  0078                     ??___llmod:	
   412                           ; 0 bytes @ 0x8
   413                           
   414  0078                     lcd_goto@data:	
   415                           ; 0 bytes @ 0x8
   416                           
   417  0078                     send_string@s:	
   418                           ; 1 bytes @ 0x8
   419                           
   420                           
   421                           ; 1 bytes @ 0x8
   422  0078                     	ds	1
   423  0079                     ___llmod@counter:	
   424  0079                     ___lldiv@quotient:	
   425                           ; 1 bytes @ 0x9
   426                           
   427                           
   428                           ; 4 bytes @ 0x9
   429  0079                     	ds	4
   430  007D                     ___lldiv@counter:	
   431                           
   432                           ; 1 bytes @ 0xD
   433  007D                     	ds	1
   434  007E                     ??_send_dec:	
   435                           
   436                           	psect	cstackBANK0
   437  0020                     __pcstackBANK0:	
   438                           ; 0 bytes @ 0xE
   439                           
   440  0020                     ?_send_dec:	
   441  0020                     send_dec@data:	
   442                           ; 0 bytes @ 0x0
   443                           
   444                           
   445                           ; 4 bytes @ 0x0
   446  0020                     	ds	4
   447  0024                     send_dec@num_dig:	
   448                           
   449                           ; 1 bytes @ 0x4
   450  0024                     	ds	1
   451  0025                     ??_main:	
   452                           
   453                           ; 0 bytes @ 0x5
   454  0025                     	ds	5
   455  002A                     main@data:	
   456                           
   457                           ; 26 bytes @ 0xA
   458  002A                     	ds	26
   459  0044                     main@database:	
   460                           
   461                           ; 1 bytes @ 0x24
   462  0044                     	ds	1
   463  0045                     main@id2:	
   464                           
   465                           ; 4 bytes @ 0x25
   466  0045                     	ds	4
   467  0049                     main@id1:	
   468                           
   469                           ; 2 bytes @ 0x29
   470  0049                     	ds	2
   471  004B                     main@a:	
   472                           
   473                           ; 1 bytes @ 0x2B
   474  004B                     	ds	1
   475  004C                     main@mode:	
   476                           
   477                           ; 1 bytes @ 0x2C
   478  004C                     	ds	1
   479  004D                     main@b:	
   480                           
   481                           ; 1 bytes @ 0x2D
   482  004D                     	ds	1
   483  004E                     main@convert2:	
   484                           
   485                           ; 2 bytes @ 0x2E
   486  004E                     	ds	2
   487  0050                     main@convert1:	
   488                           
   489                           ; 1 bytes @ 0x30
   490  0050                     	ds	1
   491  0051                     main@repeat:	
   492                           
   493                           ; 1 bytes @ 0x31
   494  0051                     	ds	1
   495  0052                     main@i:	
   496                           
   497                           ; 1 bytes @ 0x32
   498  0052                     	ds	1
   499                           
   500                           	psect	maintext
   501  046D                     __pmaintext:	
   502 ;;
   503 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   504 ;;
   505 ;; *************** function _main *****************
   506 ;; Defined at:
   507 ;;		line 64 in file "../../Source file/PR25.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  data           26   10[BANK0 ] unsigned char [26]
   512 ;;  id2             4   37[BANK0 ] unsigned int [2]
   513 ;;  convert2        2   46[BANK0 ] unsigned int 
   514 ;;  id1             2   41[BANK0 ] unsigned char [2]
   515 ;;  i               1   50[BANK0 ] unsigned char 
   516 ;;  repeat          1   49[BANK0 ] unsigned char 
   517 ;;  convert1        1   48[BANK0 ] unsigned char 
   518 ;;  b               1   45[BANK0 ] unsigned char 
   519 ;;  mode            1   44[BANK0 ] unsigned char 
   520 ;;  a               1   43[BANK0 ] unsigned char 
   521 ;;  database        1   36[BANK0 ] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;		None               void
   524 ;; Registers used:
   525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : B00/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         0       0       0       0       0
   532 ;;      Locals:         0      41       0       0       0
   533 ;;      Temps:          0       5       0       0       0
   534 ;;      Totals:         0      46       0       0       0
   535 ;;Total ram usage:       46 bytes
   536 ;; Hardware stack levels required when called:    4
   537 ;; This function calls:
   538 ;;		_delay
   539 ;;		_init
   540 ;;		_lcd_clr
   541 ;;		_lcd_goto
   542 ;;		_send_dec
   543 ;;		_send_string
   544 ;; This function is called by:
   545 ;;		Startup code after reset
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _main
   551  046D                     _main:	
   552                           
   553                           ;PR25.c: 66: unsigned char i, repeat, a, b, database;
   554                           ;PR25.c: 67: unsigned char data[26];
   555                           ;PR25.c: 68: unsigned char convert1=0;
   556                           
   557                           ;incstack = 0
   558                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   559  046D  1283               	bcf	3,5	;RP0=0, select bank0
   560  046E  1303               	bcf	3,6	;RP1=0, select bank0
   561  046F  01D0               	clrf	main@convert1
   562                           
   563                           ;PR25.c: 69: unsigned int convert2=0;
   564  0470  01CE               	clrf	main@convert2
   565  0471  01CF               	clrf	main@convert2+1
   566                           
   567                           ;PR25.c: 70: unsigned char mode=0;
   568  0472  01CC               	clrf	main@mode
   569                           
   570                           ;PR25.c: 71: unsigned char id1[2]={127,0};
   571  0473  0858               	movf	main@F1015+1,w
   572  0474  00CA               	movwf	main@id1+1
   573  0475  0857               	movf	main@F1015,w
   574  0476  00C9               	movwf	main@id1
   575                           
   576                           ;PR25.c: 72: unsigned int id2[2]={22449,0};
   577  0477  0856               	movf	main@F1017+3,w
   578  0478  00C8               	movwf	main@id2+3
   579  0479  0855               	movf	main@F1017+2,w
   580  047A  00C7               	movwf	main@id2+2
   581  047B  0854               	movf	main@F1017+1,w
   582  047C  00C6               	movwf	main@id2+1
   583  047D  0853               	movf	main@F1017,w
   584  047E  00C5               	movwf	main@id2
   585                           
   586                           ;PR25.c: 74: init();
   587  047F  120A  118A  2116  120A  118A  	fcall	_init
   588                           
   589                           ;PR25.c: 75: lcd_clr();
   590  0484  120A  158A  27C2  120A  118A  	fcall	_lcd_clr
   591                           
   592                           ;PR25.c: 76: id1[1]=0;
   593  0489  1283               	bcf	3,5	;RP0=0, select bank0
   594  048A  1303               	bcf	3,6	;RP1=0, select bank0
   595  048B  01CA               	clrf	main@id1+1
   596                           
   597                           ;PR25.c: 77: id2[1]=0;
   598  048C  01C7               	clrf	main@id2+2
   599  048D  01C8               	clrf	main@id2+3
   600                           
   601                           ;PR25.c: 78: RC4=1;
   602  048E  1607               	bsf	7,4	;volatile
   603                           
   604                           ;PR25.c: 79: lcd_goto(0);
   605  048F  3000               	movlw	0
   606  0490  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
   607                           
   608                           ;PR25.c: 80: send_string (" RFID door");
   609  0495  307E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   610  0496  120A  118A  20F7  120A  118A  	fcall	_send_string
   611                           
   612                           ;PR25.c: 81: lcd_goto(20);
   613  049B  3014               	movlw	20
   614  049C  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
   615                           
   616                           ;PR25.c: 82: send_string (" security");
   617  04A1  3089               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   618  04A2  120A  118A  20F7  120A  118A  	fcall	_send_string
   619                           
   620                           ;PR25.c: 84: for(repeat=12; repeat>0; repeat--)
   621  04A7  300C               	movlw	12
   622  04A8  1283               	bcf	3,5	;RP0=0, select bank0
   623  04A9  1303               	bcf	3,6	;RP1=0, select bank0
   624  04AA  00A5               	movwf	??_main
   625  04AB  0825               	movf	??_main,w
   626  04AC  00D1               	movwf	main@repeat
   627  04AD  0851               	movf	main@repeat,w
   628  04AE  1903               	btfsc	3,2
   629  04AF  2CC4               	goto	l1310
   630  04B0                     l1304:	
   631                           
   632                           ;PR25.c: 85: {
   633                           ;PR25.c: 86: delay(1000000);
   634  04B0  3000               	movlw	0
   635  04B1  00F3               	movwf	delay@data+3
   636  04B2  300F               	movlw	15
   637  04B3  00F2               	movwf	delay@data+2
   638  04B4  3042               	movlw	66
   639  04B5  00F1               	movwf	delay@data+1
   640  04B6  3040               	movlw	64
   641  04B7  00F0               	movwf	delay@data
   642  04B8  120A  158A  27D4  120A  118A  	fcall	_delay
   643  04BD  3001               	movlw	1
   644  04BE  1283               	bcf	3,5	;RP0=0, select bank0
   645  04BF  1303               	bcf	3,6	;RP1=0, select bank0
   646  04C0  02D1               	subwf	main@repeat,f
   647  04C1  0851               	movf	main@repeat,w
   648  04C2  1D03               	btfss	3,2
   649  04C3  2CB0               	goto	l1304
   650  04C4                     l1310:	
   651                           ;PR25.c: 87: }
   652                           ;PR25.c: 89: while(1)
   653                           
   654                           
   655                           ;PR25.c: 90: {
   656                           ;PR25.c: 91: convert1=0;
   657  04C4  01D0               	clrf	main@convert1
   658                           
   659                           ;PR25.c: 92: convert2=0;
   660  04C5  01CE               	clrf	main@convert2
   661  04C6  01CF               	clrf	main@convert2+1
   662                           
   663                           ;PR25.c: 94: lcd_clr();
   664  04C7  120A  158A  27C2  120A  118A  	fcall	_lcd_clr
   665                           
   666                           ;PR25.c: 95: lcd_goto(0);
   667  04CC  3000               	movlw	0
   668  04CD  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
   669                           
   670                           ;PR25.c: 96: send_string ("Place your tag");
   671  04D2  3035               	movlw	(low (((STR_6+1)-__stringbase)| (0+32768)))& (0+255)
   672  04D3  120A  118A  20F7  120A  118A  	fcall	_send_string
   673                           
   674                           ;PR25.c: 97: lcd_goto(20);
   675  04D8  3014               	movlw	20
   676  04D9  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
   677                           
   678                           ;PR25.c: 98: send_string ("on the reader");
   679  04DE  3070               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   680  04DF  120A  118A  20F7  120A  118A  	fcall	_send_string
   681  04E4                     l1326:	
   682                           ;PR25.c: 100: while(mode==0)
   683                           
   684  04E4  1283               	bcf	3,5	;RP0=0, select bank0
   685  04E5  1303               	bcf	3,6	;RP1=0, select bank0
   686  04E6  084C               	movf	main@mode,w
   687  04E7  1D03               	btfss	3,2
   688  04E8  2D8E               	goto	l1392
   689                           
   690                           ;PR25.c: 101: {
   691                           ;PR25.c: 102: if((RC1 ==0)||(RC2==0)) mode=1;
   692  04E9  1C87               	btfss	7,1	;volatile
   693  04EA  2CED               	goto	l56
   694  04EB  1907               	btfsc	7,2	;volatile
   695  04EC  2CF0               	goto	l54
   696  04ED                     l56:	
   697  04ED  01CC               	clrf	main@mode
   698  04EE  0ACC               	incf	main@mode,f
   699  04EF  2CE4               	goto	l1326
   700  04F0                     l54:	
   701                           
   702                           ;PR25.c: 103: else if(RA4==0) mode=2;
   703  04F0  1A05               	btfsc	5,4	;volatile
   704  04F1  2CE4               	goto	l1326
   705  04F2  3002               	movlw	2
   706  04F3  00A5               	movwf	??_main
   707  04F4  0825               	movf	??_main,w
   708  04F5  00CC               	movwf	main@mode
   709  04F6  2CE4               	goto	l1326
   710  04F7                     l1328:	
   711                           ;PR25.c: 108: {
   712                           ;PR25.c: 109: while(i<26)
   713                           
   714                           ;PR25.c: 104: }
   715                           ;PR25.c: 107: while(mode==1)
   716                           
   717  04F7  1D07               	btfss	7,2	;volatile
   718  04F8  2CFB               	goto	l68
   719  04F9                     l64:	
   720                           ;PR25.c: 110: {
   721                           ;PR25.c: 111: while((RC1==1)&&(RC2==1));
   722                           
   723  04F9  1887               	btfsc	7,1	;volatile
   724  04FA  2CF7               	goto	l1328
   725  04FB                     l68:	
   726                           
   727                           ;PR25.c: 112: if((RC1==0)&&(RC2==1))
   728  04FB  1C87               	btfss	7,1	;volatile
   729  04FC  1D07               	btfss	7,2	;volatile
   730  04FD  2D07               	goto	l69
   731                           
   732                           ;PR25.c: 113: {
   733                           ;PR25.c: 114: data[i]=0;
   734  04FE  0852               	movf	main@i,w
   735  04FF  3E2A               	addlw	(low (main@data| 0))& (0+255)
   736  0500  0084               	movwf	4
   737  0501  1383               	bcf	3,7	;select IRP bank0
   738  0502  0180               	clrf	0
   739  0503                     l70:	
   740                           ;PR25.c: 115: while((RC1==0)&&(RC2==1));
   741                           
   742  0503  1C87               	btfss	7,1	;volatile
   743  0504  1D07               	btfss	7,2	;volatile
   744  0505  2D14               	goto	l1342
   745  0506  2D03               	goto	l70
   746  0507                     l69:	
   747                           ;PR25.c: 116: }
   748                           
   749                           
   750                           ;PR25.c: 117: else if ((RC1==1)&&(RC2==0))
   751  0507  1887               	btfsc	7,1	;volatile
   752  0508  1907               	btfsc	7,2	;volatile
   753  0509  2D14               	goto	l1342
   754                           
   755                           ;PR25.c: 118: {
   756                           ;PR25.c: 119: data[i]=1;
   757  050A  0852               	movf	main@i,w
   758  050B  3E2A               	addlw	(low (main@data| 0))& (0+255)
   759  050C  0084               	movwf	4
   760  050D  1383               	bcf	3,7	;select IRP bank0
   761  050E  0180               	clrf	0
   762  050F  0A80               	incf	0,f
   763  0510                     l77:	
   764                           ;PR25.c: 120: while((RC1==1)&&(RC2==0));
   765                           
   766  0510  1C87               	btfss	7,1	;volatile
   767  0511  2D14               	goto	l1342
   768  0512  1D07               	btfss	7,2	;volatile
   769  0513  2D10               	goto	l77
   770  0514                     l1342:	
   771                           
   772                           ;PR25.c: 121: }
   773                           ;PR25.c: 122: i+=1;
   774  0514  3001               	movlw	1
   775  0515  00A5               	movwf	??_main
   776  0516  0825               	movf	??_main,w
   777  0517  07D2               	addwf	main@i,f
   778  0518                     l1344:	
   779  0518  301A               	movlw	26
   780  0519  0252               	subwf	main@i,w
   781  051A  1C03               	skipc
   782  051B  2CF9               	goto	l64
   783                           
   784                           ;PR25.c: 123: }
   785                           ;PR25.c: 125: mode=0;
   786  051C  01CC               	clrf	main@mode
   787                           
   788                           ;PR25.c: 127: i=0;
   789  051D  01D2               	clrf	main@i
   790                           
   791                           ;PR25.c: 128: lcd_clr();
   792  051E  120A  158A  27C2  120A  118A  	fcall	_lcd_clr
   793                           
   794                           ;PR25.c: 130: for(i=0;i<8;i++)
   795  0523  1283               	bcf	3,5	;RP0=0, select bank0
   796  0524  1303               	bcf	3,6	;RP1=0, select bank0
   797  0525  01D2               	clrf	main@i
   798  0526  3008               	movlw	8
   799  0527  0252               	subwf	main@i,w
   800  0528  1803               	btfsc	3,0
   801  0529  2D3E               	goto	l1362
   802  052A                     l1356:	
   803                           
   804                           ;PR25.c: 131: {
   805                           ;PR25.c: 132: convert1=(convert1<<1)|data[i+1];
   806  052A  0852               	movf	main@i,w
   807  052B  3E01               	addlw	1
   808  052C  3E2A               	addlw	(low (main@data| 0))& (0+255)
   809  052D  0084               	movwf	4
   810  052E  0850               	movf	main@convert1,w
   811  052F  00A5               	movwf	??_main
   812  0530  0725               	addwf	??_main,w
   813  0531  1383               	bcf	3,7	;select IRP bank0
   814  0532  0400               	iorwf	0,w
   815  0533  00A6               	movwf	??_main+1
   816  0534  0826               	movf	??_main+1,w
   817  0535  00D0               	movwf	main@convert1
   818  0536  3001               	movlw	1
   819  0537  00A5               	movwf	??_main
   820  0538  0825               	movf	??_main,w
   821  0539  07D2               	addwf	main@i,f
   822  053A  3008               	movlw	8
   823  053B  0252               	subwf	main@i,w
   824  053C  1C03               	skipc
   825  053D  2D2A               	goto	l1356
   826  053E                     l1362:	
   827                           
   828                           ;PR25.c: 133: }
   829                           ;PR25.c: 134: for(i=0;i<16;i++)
   830  053E  01D2               	clrf	main@i
   831  053F  3010               	movlw	16
   832  0540  0252               	subwf	main@i,w
   833  0541  1803               	btfsc	3,0
   834  0542  2D60               	goto	l1374
   835  0543                     l1368:	
   836                           
   837                           ;PR25.c: 135: {
   838                           ;PR25.c: 136: convert2=(convert2<<1)|data[i+9];
   839  0543  0852               	movf	main@i,w
   840  0544  3E09               	addlw	9
   841  0545  3E2A               	addlw	(low (main@data| 0))& (0+255)
   842  0546  0084               	movwf	4
   843  0547  1383               	bcf	3,7	;select IRP bank0
   844  0548  0800               	movf	0,w
   845  0549  00A5               	movwf	??_main
   846  054A  01A6               	clrf	??_main+1
   847  054B  084F               	movf	main@convert2+1,w
   848  054C  00A8               	movwf	??_main+3
   849  054D  084E               	movf	main@convert2,w
   850  054E  00A7               	movwf	??_main+2
   851  054F  1003               	clrc
   852  0550  0DA7               	rlf	??_main+2,f
   853  0551  0DA8               	rlf	??_main+3,f
   854  0552  0825               	movf	??_main,w
   855  0553  0427               	iorwf	??_main+2,w
   856  0554  00CE               	movwf	main@convert2
   857  0555  0826               	movf	??_main+1,w
   858  0556  0428               	iorwf	??_main+3,w
   859  0557  00CF               	movwf	main@convert2+1
   860  0558  3001               	movlw	1
   861  0559  00A5               	movwf	??_main
   862  055A  0825               	movf	??_main,w
   863  055B  07D2               	addwf	main@i,f
   864  055C  3010               	movlw	16
   865  055D  0252               	subwf	main@i,w
   866  055E  1C03               	skipc
   867  055F  2D43               	goto	l1368
   868  0560                     l1374:	
   869                           
   870                           ;PR25.c: 137: }
   871                           ;PR25.c: 139: for(b=0;b<2;b++)
   872  0560  01CD               	clrf	main@b
   873  0561  3002               	movlw	2
   874  0562  024D               	subwf	main@b,w
   875  0563  1803               	btfsc	3,0
   876  0564  2D89               	goto	l1390
   877  0565                     l1380:	
   878                           
   879                           ;PR25.c: 140: {
   880                           ;PR25.c: 141: if((convert1==id1[b])&&(convert2==id2[b])) database=1;
   881  0565  084D               	movf	main@b,w
   882  0566  3E49               	addlw	(low (main@id1| 0))& (0+255)
   883  0567  0084               	movwf	4
   884  0568  1383               	bcf	3,7	;select IRP bank0
   885  0569  0800               	movf	0,w
   886  056A  0650               	xorwf	main@convert1,w
   887  056B  1D03               	skipz
   888  056C  2D81               	goto	l1386
   889  056D  084D               	movf	main@b,w
   890  056E  00A5               	movwf	??_main
   891  056F  0725               	addwf	??_main,w
   892  0570  3E45               	addlw	(low (main@id2| 0))& (0+255)
   893  0571  0084               	movwf	4
   894  0572  0800               	movf	0,w
   895  0573  00A6               	movwf	??_main+1
   896  0574  0A84               	incf	4,f
   897  0575  0800               	movf	0,w
   898  0576  00A7               	movwf	??_main+2
   899  0577  084F               	movf	main@convert2+1,w
   900  0578  0627               	xorwf	??_main+2,w
   901  0579  1D03               	skipz
   902  057A  2D7D               	goto	u1305
   903  057B  084E               	movf	main@convert2,w
   904  057C  0626               	xorwf	??_main+1,w
   905  057D                     u1305:	
   906  057D  1D03               	skipz
   907  057E  2D81               	goto	l1386
   908  057F  01C4               	clrf	main@database
   909  0580  0AC4               	incf	main@database,f
   910  0581                     l1386:	
   911  0581  3001               	movlw	1
   912  0582  00A5               	movwf	??_main
   913  0583  0825               	movf	??_main,w
   914  0584  07CD               	addwf	main@b,f
   915  0585  3002               	movlw	2
   916  0586  024D               	subwf	main@b,w
   917  0587  1C03               	skipc
   918  0588  2D65               	goto	l1380
   919  0589                     l1390:	
   920                           
   921                           ;PR25.c: 142: }
   922                           ;PR25.c: 143: lcd_clr();
   923  0589  120A  158A  27C2  120A  118A  	fcall	_lcd_clr
   924  058E                     l1392:	
   925  058E  1283               	bcf	3,5	;RP0=0, select bank0
   926  058F  1303               	bcf	3,6	;RP1=0, select bank0
   927  0590  034C               	decf	main@mode,w
   928  0591  1D03               	btfss	3,2
   929  0592  2E30               	goto	l1450
   930  0593  2D18               	goto	l1344
   931  0594                     l1394:	
   932                           ;PR25.c: 144: }
   933                           ;PR25.c: 147: while(mode==2)
   934                           
   935                           
   936                           ;PR25.c: 148: {
   937                           ;PR25.c: 149: lcd_clr();
   938  0594  120A  158A  27C2  120A  118A  	fcall	_lcd_clr
   939                           
   940                           ;PR25.c: 150: lcd_goto(0);
   941  0599  3000               	movlw	0
   942  059A  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
   943                           
   944                           ;PR25.c: 151: send_string ("    Save mode   ");
   945  059F  3013               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   946  05A0  120A  118A  20F7  120A  118A  	fcall	_send_string
   947                           
   948                           ;PR25.c: 152: lcd_goto(20);
   949  05A5  3014               	movlw	20
   950  05A6  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
   951                           
   952                           ;PR25.c: 153: send_string (" Place your tag");
   953  05AB  3034               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   954  05AC  120A  118A  20F7  120A  118A  	fcall	_send_string
   955                           
   956                           ;PR25.c: 155: while(i<26)
   957  05B1  2DD5               	goto	l1416
   958  05B2                     l1400:	
   959  05B2  1D07               	btfss	7,2	;volatile
   960  05B3  2DB8               	goto	l99
   961  05B4                     l95:	
   962                           ;PR25.c: 156: {
   963                           ;PR25.c: 157: while((RC1==1)&&(RC2==1));
   964                           
   965  05B4  1283               	bcf	3,5	;RP0=0, select bank0
   966  05B5  1303               	bcf	3,6	;RP1=0, select bank0
   967  05B6  1887               	btfsc	7,1	;volatile
   968  05B7  2DB2               	goto	l1400
   969  05B8                     l99:	
   970                           
   971                           ;PR25.c: 158: if((RC1==0)&&(RC2==1))
   972  05B8  1C87               	btfss	7,1	;volatile
   973  05B9  1D07               	btfss	7,2	;volatile
   974  05BA  2DC4               	goto	l100
   975                           
   976                           ;PR25.c: 159: {
   977                           ;PR25.c: 160: data[i]=0;
   978  05BB  0852               	movf	main@i,w
   979  05BC  3E2A               	addlw	(low (main@data| 0))& (0+255)
   980  05BD  0084               	movwf	4
   981  05BE  1383               	bcf	3,7	;select IRP bank0
   982  05BF  0180               	clrf	0
   983  05C0                     l101:	
   984                           ;PR25.c: 161: while((RC1==0)&&(RC2==1));
   985                           
   986  05C0  1C87               	btfss	7,1	;volatile
   987  05C1  1D07               	btfss	7,2	;volatile
   988  05C2  2DD1               	goto	l1414
   989  05C3  2DC0               	goto	l101
   990  05C4                     l100:	
   991                           ;PR25.c: 162: }
   992                           
   993                           
   994                           ;PR25.c: 163: else if ((RC1==1)&&(RC2==0))
   995  05C4  1887               	btfsc	7,1	;volatile
   996  05C5  1907               	btfsc	7,2	;volatile
   997  05C6  2DD1               	goto	l1414
   998                           
   999                           ;PR25.c: 164: {
  1000                           ;PR25.c: 165: data[i]=1;
  1001  05C7  0852               	movf	main@i,w
  1002  05C8  3E2A               	addlw	(low (main@data| 0))& (0+255)
  1003  05C9  0084               	movwf	4
  1004  05CA  1383               	bcf	3,7	;select IRP bank0
  1005  05CB  0180               	clrf	0
  1006  05CC  0A80               	incf	0,f
  1007  05CD                     l108:	
  1008                           ;PR25.c: 166: while((RC1==1)&&(RC2==0));
  1009                           
  1010  05CD  1C87               	btfss	7,1	;volatile
  1011  05CE  2DD1               	goto	l1414
  1012  05CF  1D07               	btfss	7,2	;volatile
  1013  05D0  2DCD               	goto	l108
  1014  05D1                     l1414:	
  1015                           
  1016                           ;PR25.c: 167: }
  1017                           ;PR25.c: 168: i+=1;
  1018  05D1  3001               	movlw	1
  1019  05D2  00A5               	movwf	??_main
  1020  05D3  0825               	movf	??_main,w
  1021  05D4  07D2               	addwf	main@i,f
  1022  05D5                     l1416:	
  1023  05D5  301A               	movlw	26
  1024  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1025  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1026  05D8  0252               	subwf	main@i,w
  1027  05D9  1C03               	skipc
  1028  05DA  2DB4               	goto	l95
  1029                           
  1030                           ;PR25.c: 169: }
  1031                           ;PR25.c: 171: mode=0;
  1032  05DB  01CC               	clrf	main@mode
  1033                           
  1034                           ;PR25.c: 172: i=0;
  1035  05DC  01D2               	clrf	main@i
  1036                           
  1037                           ;PR25.c: 173: lcd_clr();
  1038  05DD  120A  158A  27C2  120A  118A  	fcall	_lcd_clr
  1039                           
  1040                           ;PR25.c: 175: for(i=0;i<8;i++)
  1041  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1042  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1043  05E4  01D2               	clrf	main@i
  1044  05E5  3008               	movlw	8
  1045  05E6  0252               	subwf	main@i,w
  1046  05E7  1803               	btfsc	3,0
  1047  05E8  2DFD               	goto	l1434
  1048  05E9                     l1428:	
  1049                           
  1050                           ;PR25.c: 176: {
  1051                           ;PR25.c: 177: convert1=(convert1<<1)|data[i+1];
  1052  05E9  0852               	movf	main@i,w
  1053  05EA  3E01               	addlw	1
  1054  05EB  3E2A               	addlw	(low (main@data| 0))& (0+255)
  1055  05EC  0084               	movwf	4
  1056  05ED  0850               	movf	main@convert1,w
  1057  05EE  00A5               	movwf	??_main
  1058  05EF  0725               	addwf	??_main,w
  1059  05F0  1383               	bcf	3,7	;select IRP bank0
  1060  05F1  0400               	iorwf	0,w
  1061  05F2  00A6               	movwf	??_main+1
  1062  05F3  0826               	movf	??_main+1,w
  1063  05F4  00D0               	movwf	main@convert1
  1064  05F5  3001               	movlw	1
  1065  05F6  00A5               	movwf	??_main
  1066  05F7  0825               	movf	??_main,w
  1067  05F8  07D2               	addwf	main@i,f
  1068  05F9  3008               	movlw	8
  1069  05FA  0252               	subwf	main@i,w
  1070  05FB  1C03               	skipc
  1071  05FC  2DE9               	goto	l1428
  1072  05FD                     l1434:	
  1073                           
  1074                           ;PR25.c: 178: }
  1075                           ;PR25.c: 179: for(i=0;i<16;i++)
  1076  05FD  01D2               	clrf	main@i
  1077  05FE  3010               	movlw	16
  1078  05FF  0252               	subwf	main@i,w
  1079  0600  1803               	btfsc	3,0
  1080  0601  2E1F               	goto	l1446
  1081  0602                     l1440:	
  1082                           
  1083                           ;PR25.c: 180: {
  1084                           ;PR25.c: 181: convert2=(convert2<<1)|data[i+9];
  1085  0602  0852               	movf	main@i,w
  1086  0603  3E09               	addlw	9
  1087  0604  3E2A               	addlw	(low (main@data| 0))& (0+255)
  1088  0605  0084               	movwf	4
  1089  0606  1383               	bcf	3,7	;select IRP bank0
  1090  0607  0800               	movf	0,w
  1091  0608  00A5               	movwf	??_main
  1092  0609  01A6               	clrf	??_main+1
  1093  060A  084F               	movf	main@convert2+1,w
  1094  060B  00A8               	movwf	??_main+3
  1095  060C  084E               	movf	main@convert2,w
  1096  060D  00A7               	movwf	??_main+2
  1097  060E  1003               	clrc
  1098  060F  0DA7               	rlf	??_main+2,f
  1099  0610  0DA8               	rlf	??_main+3,f
  1100  0611  0825               	movf	??_main,w
  1101  0612  0427               	iorwf	??_main+2,w
  1102  0613  00CE               	movwf	main@convert2
  1103  0614  0826               	movf	??_main+1,w
  1104  0615  0428               	iorwf	??_main+3,w
  1105  0616  00CF               	movwf	main@convert2+1
  1106  0617  3001               	movlw	1
  1107  0618  00A5               	movwf	??_main
  1108  0619  0825               	movf	??_main,w
  1109  061A  07D2               	addwf	main@i,f
  1110  061B  3010               	movlw	16
  1111  061C  0252               	subwf	main@i,w
  1112  061D  1C03               	skipc
  1113  061E  2E02               	goto	l1440
  1114  061F                     l1446:	
  1115                           
  1116                           ;PR25.c: 182: }
  1117                           ;PR25.c: 184: id1[1]=convert1;
  1118  061F  0850               	movf	main@convert1,w
  1119  0620  00A5               	movwf	??_main
  1120  0621  0825               	movf	??_main,w
  1121  0622  00CA               	movwf	main@id1+1
  1122                           
  1123                           ;PR25.c: 185: id2[1]=convert2;
  1124  0623  084F               	movf	main@convert2+1,w
  1125  0624  00C8               	movwf	main@id2+3
  1126  0625  084E               	movf	main@convert2,w
  1127  0626  00C7               	movwf	main@id2+2
  1128                           
  1129                           ;PR25.c: 187: database=2;
  1130  0627  3002               	movlw	2
  1131  0628  00A5               	movwf	??_main
  1132  0629  0825               	movf	??_main,w
  1133  062A  00C4               	movwf	main@database
  1134                           
  1135                           ;PR25.c: 188: lcd_clr();
  1136  062B  120A  158A  27C2  120A  118A  	fcall	_lcd_clr
  1137  0630                     l1450:	
  1138  0630  3002               	movlw	2
  1139  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0633  064C               	xorwf	main@mode,w
  1142  0634  1D03               	btfss	3,2
  1143  0635  2FA9               	goto	l1536
  1144  0636  2D94               	goto	l1394
  1145  0637                     l120:	
  1146                           ;PR25.c: 192: {
  1147                           ;PR25.c: 193: case 1:
  1148                           
  1149                           ;PR25.c: 189: }
  1150                           ;PR25.c: 191: switch(database)
  1151                           
  1152                           
  1153                           ;PR25.c: 194: RA1=1;
  1154  0637  1485               	bsf	5,1	;volatile
  1155                           
  1156                           ;PR25.c: 195: RC3=0;
  1157  0638  1187               	bcf	7,3	;volatile
  1158                           
  1159                           ;PR25.c: 196: lcd_goto(0);
  1160  0639  3000               	movlw	0
  1161  063A  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1162                           
  1163                           ;PR25.c: 197: send_string("ID no: ");
  1164  063F  3093               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1165  0640  120A  118A  20F7  120A  118A  	fcall	_send_string
  1166                           
  1167                           ;PR25.c: 198: lcd_goto(7);
  1168  0645  3007               	movlw	7
  1169  0646  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1170                           
  1171                           ;PR25.c: 199: send_dec(convert1,3);
  1172  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1173  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1174  064D  0850               	movf	main@convert1,w
  1175  064E  00A5               	movwf	??_main
  1176  064F  01A6               	clrf	??_main+1
  1177  0650  01A7               	clrf	??_main+2
  1178  0651  01A8               	clrf	??_main+3
  1179  0652  0828               	movf	??_main+3,w
  1180  0653  00A3               	movwf	send_dec@data+3
  1181  0654  0827               	movf	??_main+2,w
  1182  0655  00A2               	movwf	send_dec@data+2
  1183  0656  0826               	movf	??_main+1,w
  1184  0657  00A1               	movwf	send_dec@data+1
  1185  0658  0825               	movf	??_main,w
  1186  0659  00A0               	movwf	send_dec@data
  1187  065A  3003               	movlw	3
  1188  065B  00A9               	movwf	??_main+4
  1189  065C  0829               	movf	??_main+4,w
  1190  065D  00A4               	movwf	send_dec@num_dig
  1191  065E  120A  118A  21FA  120A  118A  	fcall	_send_dec
  1192                           
  1193                           ;PR25.c: 200: lcd_goto(10);
  1194  0663  300A               	movlw	10
  1195  0664  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1196                           
  1197                           ;PR25.c: 201: send_dec(convert2,5);
  1198  0669  1283               	bcf	3,5	;RP0=0, select bank0
  1199  066A  1303               	bcf	3,6	;RP1=0, select bank0
  1200  066B  084E               	movf	main@convert2,w
  1201  066C  00A0               	movwf	send_dec@data
  1202  066D  084F               	movf	main@convert2+1,w
  1203  066E  00A1               	movwf	send_dec@data+1
  1204  066F  01A2               	clrf	send_dec@data+2
  1205  0670  01A3               	clrf	send_dec@data+3
  1206  0671  3005               	movlw	5
  1207  0672  00A5               	movwf	??_main
  1208  0673  0825               	movf	??_main,w
  1209  0674  00A4               	movwf	send_dec@num_dig
  1210  0675  120A  118A  21FA  120A  118A  	fcall	_send_dec
  1211                           
  1212                           ;PR25.c: 202: lcd_goto(20);
  1213  067A  3014               	movlw	20
  1214  067B  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1215                           
  1216                           ;PR25.c: 203: send_string("User identified. ");
  1217  0680  3001               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1218  0681  120A  118A  20F7  120A  118A  	fcall	_send_string
  1219                           
  1220                           ;PR25.c: 204: for(repeat=12; repeat>0; repeat--)
  1221  0686  300C               	movlw	12
  1222  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0689  00A5               	movwf	??_main
  1225  068A  0825               	movf	??_main,w
  1226  068B  00D1               	movwf	main@repeat
  1227  068C  0851               	movf	main@repeat,w
  1228  068D  1903               	btfsc	3,2
  1229  068E  2EA3               	goto	l1478
  1230  068F                     l1472:	
  1231                           
  1232                           ;PR25.c: 205: {
  1233                           ;PR25.c: 206: delay(1000000);
  1234  068F  3000               	movlw	0
  1235  0690  00F3               	movwf	delay@data+3
  1236  0691  300F               	movlw	15
  1237  0692  00F2               	movwf	delay@data+2
  1238  0693  3042               	movlw	66
  1239  0694  00F1               	movwf	delay@data+1
  1240  0695  3040               	movlw	64
  1241  0696  00F0               	movwf	delay@data
  1242  0697  120A  158A  27D4  120A  118A  	fcall	_delay
  1243  069C  3001               	movlw	1
  1244  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1245  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1246  069F  02D1               	subwf	main@repeat,f
  1247  06A0  0851               	movf	main@repeat,w
  1248  06A1  1D03               	btfss	3,2
  1249  06A2  2E8F               	goto	l1472
  1250  06A3                     l1478:	
  1251                           
  1252                           ;PR25.c: 207: }
  1253                           ;PR25.c: 208: lcd_clr();
  1254  06A3  120A  158A  27C2  120A  118A  	fcall	_lcd_clr
  1255                           
  1256                           ;PR25.c: 209: lcd_goto(0);
  1257  06A8  3000               	movlw	0
  1258  06A9  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1259                           
  1260                           ;PR25.c: 210: send_string("Door lock will");
  1261  06AE  3053               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1262  06AF  120A  118A  20F7  120A  118A  	fcall	_send_string
  1263                           
  1264                           ;PR25.c: 211: lcd_goto(20);
  1265  06B4  3014               	movlw	20
  1266  06B5  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1267                           
  1268                           ;PR25.c: 212: send_string("be locked in ");
  1269  06BA  3062               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1270  06BB  120A  118A  20F7  120A  118A  	fcall	_send_string
  1271                           
  1272                           ;PR25.c: 214: for(a=5;a>0;a--)
  1273  06C0  3005               	movlw	5
  1274  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1275  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1276  06C3  00A5               	movwf	??_main
  1277  06C4  0825               	movf	??_main,w
  1278  06C5  00CB               	movwf	main@a
  1279  06C6                     L1:	
  1280  06C6  084B               	movf	main@a,w
  1281  06C7  1903               	btfsc	3,2
  1282  06C8  2FB3               	goto	l1538
  1283                           
  1284                           ;PR25.c: 215: {
  1285                           ;PR25.c: 216: lcd_goto(34);
  1286  06C9  3022               	movlw	34
  1287  06CA  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1288                           
  1289                           ;PR25.c: 217: send_dec(a, 1);
  1290  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1291  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1292  06D1  084B               	movf	main@a,w
  1293  06D2  00A5               	movwf	??_main
  1294  06D3  01A6               	clrf	??_main+1
  1295  06D4  01A7               	clrf	??_main+2
  1296  06D5  01A8               	clrf	??_main+3
  1297  06D6  0828               	movf	??_main+3,w
  1298  06D7  00A3               	movwf	send_dec@data+3
  1299  06D8  0827               	movf	??_main+2,w
  1300  06D9  00A2               	movwf	send_dec@data+2
  1301  06DA  0826               	movf	??_main+1,w
  1302  06DB  00A1               	movwf	send_dec@data+1
  1303  06DC  0825               	movf	??_main,w
  1304  06DD  00A0               	movwf	send_dec@data
  1305  06DE  01A4               	clrf	send_dec@num_dig
  1306  06DF  0AA4               	incf	send_dec@num_dig,f
  1307  06E0  120A  118A  21FA  120A  118A  	fcall	_send_dec
  1308                           
  1309                           ;PR25.c: 218: for(repeat=10; repeat>0; repeat--)
  1310  06E5  300A               	movlw	10
  1311  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1312  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1313  06E8  00A5               	movwf	??_main
  1314  06E9  0825               	movf	??_main,w
  1315  06EA  00D1               	movwf	main@repeat
  1316  06EB  0851               	movf	main@repeat,w
  1317  06EC  1903               	btfsc	3,2
  1318  06ED  2F02               	goto	l1504
  1319  06EE                     l1498:	
  1320                           
  1321                           ;PR25.c: 219: {
  1322                           ;PR25.c: 220: delay(1000000);
  1323  06EE  3000               	movlw	0
  1324  06EF  00F3               	movwf	delay@data+3
  1325  06F0  300F               	movlw	15
  1326  06F1  00F2               	movwf	delay@data+2
  1327  06F2  3042               	movlw	66
  1328  06F3  00F1               	movwf	delay@data+1
  1329  06F4  3040               	movlw	64
  1330  06F5  00F0               	movwf	delay@data
  1331  06F6  120A  158A  27D4  120A  118A  	fcall	_delay
  1332  06FB  3001               	movlw	1
  1333  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1334  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1335  06FE  02D1               	subwf	main@repeat,f
  1336  06FF  0851               	movf	main@repeat,w
  1337  0700  1D03               	btfss	3,2
  1338  0701  2EEE               	goto	l1498
  1339  0702                     l1504:	
  1340  0702  3001               	movlw	1
  1341  0703  02CB               	subwf	main@a,f
  1342  0704  2EC6               	goto	L1
  1343  0705                     l128:	
  1344                           ;PR25.c: 225: case 2:
  1345                           
  1346                           ;PR25.c: 221: }
  1347                           ;PR25.c: 222: }
  1348                           ;PR25.c: 223: break;
  1349                           
  1350                           
  1351                           ;PR25.c: 226: RC3=0;
  1352  0705  1187               	bcf	7,3	;volatile
  1353                           
  1354                           ;PR25.c: 227: lcd_clr();
  1355  0706  120A  158A  27C2  120A  118A  	fcall	_lcd_clr
  1356                           
  1357                           ;PR25.c: 228: lcd_goto(0);
  1358  070B  3000               	movlw	0
  1359  070C  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1360                           
  1361                           ;PR25.c: 229: send_string("ID no: ");
  1362  0711  3093               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1363  0712  120A  118A  20F7  120A  118A  	fcall	_send_string
  1364                           
  1365                           ;PR25.c: 230: lcd_goto(7);
  1366  0717  3007               	movlw	7
  1367  0718  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1368                           
  1369                           ;PR25.c: 231: send_dec(convert1,3);
  1370  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1371  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1372  071F  0850               	movf	main@convert1,w
  1373  0720  00A5               	movwf	??_main
  1374  0721  01A6               	clrf	??_main+1
  1375  0722  01A7               	clrf	??_main+2
  1376  0723  01A8               	clrf	??_main+3
  1377  0724  0828               	movf	??_main+3,w
  1378  0725  00A3               	movwf	send_dec@data+3
  1379  0726  0827               	movf	??_main+2,w
  1380  0727  00A2               	movwf	send_dec@data+2
  1381  0728  0826               	movf	??_main+1,w
  1382  0729  00A1               	movwf	send_dec@data+1
  1383  072A  0825               	movf	??_main,w
  1384  072B  00A0               	movwf	send_dec@data
  1385  072C  3003               	movlw	3
  1386  072D  00A9               	movwf	??_main+4
  1387  072E  0829               	movf	??_main+4,w
  1388  072F  00A4               	movwf	send_dec@num_dig
  1389  0730  120A  118A  21FA  120A  118A  	fcall	_send_dec
  1390                           
  1391                           ;PR25.c: 232: lcd_goto(10);
  1392  0735  300A               	movlw	10
  1393  0736  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1394                           
  1395                           ;PR25.c: 233: send_dec(convert2,5);
  1396  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1397  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1398  073D  084E               	movf	main@convert2,w
  1399  073E  00A0               	movwf	send_dec@data
  1400  073F  084F               	movf	main@convert2+1,w
  1401  0740  00A1               	movwf	send_dec@data+1
  1402  0741  01A2               	clrf	send_dec@data+2
  1403  0742  01A3               	clrf	send_dec@data+3
  1404  0743  3005               	movlw	5
  1405  0744  00A5               	movwf	??_main
  1406  0745  0825               	movf	??_main,w
  1407  0746  00A4               	movwf	send_dec@num_dig
  1408  0747  120A  118A  21FA  120A  118A  	fcall	_send_dec
  1409                           
  1410                           ;PR25.c: 234: lcd_goto(20);
  1411  074C  3014               	movlw	20
  1412  074D  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1413                           
  1414                           ;PR25.c: 235: send_string("User ID saved.");
  1415  0752  3044               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1416  0753  120A  118A  20F7  120A  118A  	fcall	_send_string
  1417                           
  1418                           ;PR25.c: 236: break;
  1419  0758  2FB3               	goto	l1538
  1420  0759                     l129:	
  1421                           ;PR25.c: 238: default:
  1422                           
  1423                           
  1424                           ;PR25.c: 239: RA1=0;
  1425  0759  1085               	bcf	5,1	;volatile
  1426                           
  1427                           ;PR25.c: 240: RC3=1;
  1428  075A  1587               	bsf	7,3	;volatile
  1429                           
  1430                           ;PR25.c: 241: lcd_goto(0);
  1431  075B  3000               	movlw	0
  1432  075C  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1433                           
  1434                           ;PR25.c: 242: send_string("ID no: ");
  1435  0761  3093               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1436  0762  120A  118A  20F7  120A  118A  	fcall	_send_string
  1437                           
  1438                           ;PR25.c: 243: lcd_goto(7);
  1439  0767  3007               	movlw	7
  1440  0768  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1441                           
  1442                           ;PR25.c: 244: send_dec(convert1,3);
  1443  076D  1283               	bcf	3,5	;RP0=0, select bank0
  1444  076E  1303               	bcf	3,6	;RP1=0, select bank0
  1445  076F  0850               	movf	main@convert1,w
  1446  0770  00A5               	movwf	??_main
  1447  0771  01A6               	clrf	??_main+1
  1448  0772  01A7               	clrf	??_main+2
  1449  0773  01A8               	clrf	??_main+3
  1450  0774  0828               	movf	??_main+3,w
  1451  0775  00A3               	movwf	send_dec@data+3
  1452  0776  0827               	movf	??_main+2,w
  1453  0777  00A2               	movwf	send_dec@data+2
  1454  0778  0826               	movf	??_main+1,w
  1455  0779  00A1               	movwf	send_dec@data+1
  1456  077A  0825               	movf	??_main,w
  1457  077B  00A0               	movwf	send_dec@data
  1458  077C  3003               	movlw	3
  1459  077D  00A9               	movwf	??_main+4
  1460  077E  0829               	movf	??_main+4,w
  1461  077F  00A4               	movwf	send_dec@num_dig
  1462  0780  120A  118A  21FA  120A  118A  	fcall	_send_dec
  1463                           
  1464                           ;PR25.c: 245: lcd_goto(10);
  1465  0785  300A               	movlw	10
  1466  0786  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1467                           
  1468                           ;PR25.c: 246: send_dec(convert2,5);
  1469  078B  1283               	bcf	3,5	;RP0=0, select bank0
  1470  078C  1303               	bcf	3,6	;RP1=0, select bank0
  1471  078D  084E               	movf	main@convert2,w
  1472  078E  00A0               	movwf	send_dec@data
  1473  078F  084F               	movf	main@convert2+1,w
  1474  0790  00A1               	movwf	send_dec@data+1
  1475  0791  01A2               	clrf	send_dec@data+2
  1476  0792  01A3               	clrf	send_dec@data+3
  1477  0793  3005               	movlw	5
  1478  0794  00A5               	movwf	??_main
  1479  0795  0825               	movf	??_main,w
  1480  0796  00A4               	movwf	send_dec@num_dig
  1481  0797  120A  118A  21FA  120A  118A  	fcall	_send_dec
  1482                           
  1483                           ;PR25.c: 247: lcd_goto(20);
  1484  079C  3014               	movlw	20
  1485  079D  120A  158A  27EA  120A  118A  	fcall	_lcd_goto
  1486                           
  1487                           ;PR25.c: 248: send_string("User not found.");
  1488  07A2  3024               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1489  07A3  120A  118A  20F7  120A  118A  	fcall	_send_string
  1490                           
  1491                           ;PR25.c: 250: }
  1492                           
  1493                           ;PR25.c: 249: break;
  1494  07A8  2FB3               	goto	l1538
  1495  07A9                     l1536:	
  1496  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1497  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1498  07AB  0844               	movf	main@database,w
  1499                           
  1500                           ; Switch size 1, requested type "space"
  1501                           ; Number of cases is 2, Range of values is 1 to 2
  1502                           ; switch strategies available:
  1503                           ; Name         Instructions Cycles
  1504                           ; simple_byte            7     4 (average)
  1505                           ; direct_byte           17    11 (fixed)
  1506                           ; jumptable            263     9 (fixed)
  1507                           ;	Chosen strategy is simple_byte
  1508  07AC  3A01               	xorlw	1	; case 1
  1509  07AD  1903               	skipnz
  1510  07AE  2E37               	goto	l120
  1511  07AF  3A03               	xorlw	3	; case 2
  1512  07B0  1903               	skipnz
  1513  07B1  2F05               	goto	l128
  1514  07B2  2F59               	goto	l129
  1515  07B3                     l1538:	
  1516                           
  1517                           ;PR25.c: 252: for(repeat=12; repeat>0; repeat--)
  1518  07B3  300C               	movlw	12
  1519  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1520  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1521  07B6  00A5               	movwf	??_main
  1522  07B7  0825               	movf	??_main,w
  1523  07B8  00D1               	movwf	main@repeat
  1524  07B9  0851               	movf	main@repeat,w
  1525  07BA  1903               	btfsc	3,2
  1526  07BB  2FD0               	goto	l1550
  1527  07BC                     l1544:	
  1528                           
  1529                           ;PR25.c: 253: {
  1530                           ;PR25.c: 254: delay(1000000);
  1531  07BC  3000               	movlw	0
  1532  07BD  00F3               	movwf	delay@data+3
  1533  07BE  300F               	movlw	15
  1534  07BF  00F2               	movwf	delay@data+2
  1535  07C0  3042               	movlw	66
  1536  07C1  00F1               	movwf	delay@data+1
  1537  07C2  3040               	movlw	64
  1538  07C3  00F0               	movwf	delay@data
  1539  07C4  120A  158A  27D4  120A  118A  	fcall	_delay
  1540  07C9  3001               	movlw	1
  1541  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1542  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1543  07CC  02D1               	subwf	main@repeat,f
  1544  07CD  0851               	movf	main@repeat,w
  1545  07CE  1D03               	btfss	3,2
  1546  07CF  2FBC               	goto	l1544
  1547  07D0                     l1550:	
  1548                           
  1549                           ;PR25.c: 255: }
  1550                           ;PR25.c: 257: i=0;
  1551  07D0  01D2               	clrf	main@i
  1552                           
  1553                           ;PR25.c: 258: RC3=0;
  1554  07D1  1187               	bcf	7,3	;volatile
  1555                           
  1556                           ;PR25.c: 259: database=0;
  1557  07D2  01C4               	clrf	main@database
  1558                           
  1559                           ;PR25.c: 260: RA1=0;
  1560  07D3  1085               	bcf	5,1	;volatile
  1561                           
  1562                           ;PR25.c: 261: convert1=0;
  1563  07D4  01D0               	clrf	main@convert1
  1564                           
  1565                           ;PR25.c: 262: convert2=0;
  1566  07D5  01CE               	clrf	main@convert2
  1567  07D6  01CF               	clrf	main@convert2+1
  1568  07D7  2CC4               	goto	l1310
  1569  07D8                     __end_of_main:	
  1570                           
  1571                           	psect	text1
  1572  00F7                     __ptext1:	
  1573 ;; *************** function _send_string *****************
  1574 ;; Defined at:
  1575 ;;		line 397 in file "../../Source file/PR25.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  s               1    wreg     PTR const unsigned char 
  1578 ;;		 -> STR_14(16), STR_13(8), STR_12(15), STR_11(8), 
  1579 ;;		 -> STR_10(14), STR_9(15), STR_8(18), STR_7(8), 
  1580 ;;		 -> STR_6(16), STR_5(17), STR_4(14), STR_3(15), 
  1581 ;;		 -> STR_2(10), STR_1(11), 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  s               1    8[COMMON] PTR const unsigned char 
  1584 ;;		 -> STR_14(16), STR_13(8), STR_12(15), STR_11(8), 
  1585 ;;		 -> STR_10(14), STR_9(15), STR_8(18), STR_7(8), 
  1586 ;;		 -> STR_6(16), STR_5(17), STR_4(14), STR_3(15), 
  1587 ;;		 -> STR_2(10), STR_1(11), 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;		None               void
  1590 ;; Registers used:
  1591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         0       0       0       0       0
  1598 ;;      Locals:         1       0       0       0       0
  1599 ;;      Temps:          1       0       0       0       0
  1600 ;;      Totals:         2       0       0       0       0
  1601 ;;Total ram usage:        2 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    3
  1604 ;; This function calls:
  1605 ;;		_send_char
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _send_string
  1613  00F7                     _send_string:	
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1617                           ;send_string@s stored from wreg
  1618  00F7  00F8               	movwf	send_string@s
  1619  00F8                     l1214:	
  1620                           ;PR25.c: 399: while (s && *s)send_char (*s++);
  1621                           
  1622  00F8  0878               	movf	send_string@s,w
  1623  00F9  1903               	btfsc	3,2
  1624  00FA  0008               	return
  1625  00FB  0878               	movf	send_string@s,w
  1626  00FC  0084               	movwf	4
  1627  00FD  120A  118A  2003  120A  118A  	fcall	stringdir
  1628  0102  3A00               	xorlw	0
  1629  0103  1903               	btfsc	3,2
  1630  0104  0008               	return
  1631  0105  0878               	movf	send_string@s,w
  1632  0106  0084               	movwf	4
  1633  0107  120A  118A  2003  120A  118A  	fcall	stringdir
  1634  010C  120A  118A  20C1  120A  118A  	fcall	_send_char
  1635  0111  3001               	movlw	1
  1636  0112  00F7               	movwf	??_send_string
  1637  0113  0877               	movf	??_send_string,w
  1638  0114  07F8               	addwf	send_string@s,f
  1639  0115  28F8               	goto	l1214
  1640  0116                     __end_of_send_string:	
  1641                           
  1642                           	psect	text2
  1643  01FA                     __ptext2:	
  1644 ;; *************** function _send_dec *****************
  1645 ;; Defined at:
  1646 ;;		line 315 in file "../../Source file/PR25.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  data            4    0[BANK0 ] unsigned long 
  1649 ;;  num_dig         1    4[BANK0 ] unsigned char 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;		None               void
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       5       0       0       0
  1662 ;;      Locals:         0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0
  1664 ;;      Totals:         0       5       0       0       0
  1665 ;;Total ram usage:        5 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		___lldiv
  1670 ;;		___llmod
  1671 ;;		_send_char
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _send_dec
  1679  01FA                     _send_dec:	
  1680                           
  1681                           ;PR25.c: 317: if(num_dig>=10)
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _send_dec: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1685  01FA  300A               	movlw	10
  1686  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1687  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1688  01FD  0224               	subwf	send_dec@num_dig,w
  1689  01FE  1C03               	skipc
  1690  01FF  2A3B               	goto	l1224
  1691                           
  1692                           ;PR25.c: 318: {
  1693                           ;PR25.c: 319: data=data%10000000000;
  1694  0200  3054               	movlw	84
  1695  0201  00F3               	movwf	___llmod@divisor+3
  1696  0202  300B               	movlw	11
  1697  0203  00F2               	movwf	___llmod@divisor+2
  1698  0204  30E4               	movlw	228
  1699  0205  00F1               	movwf	___llmod@divisor+1
  1700  0206  3000               	movlw	0
  1701  0207  00F0               	movwf	___llmod@divisor
  1702  0208  0823               	movf	send_dec@data+3,w
  1703  0209  00F7               	movwf	___llmod@dividend+3
  1704  020A  0822               	movf	send_dec@data+2,w
  1705  020B  00F6               	movwf	___llmod@dividend+2
  1706  020C  0821               	movf	send_dec@data+1,w
  1707  020D  00F5               	movwf	___llmod@dividend+1
  1708  020E  0820               	movf	send_dec@data,w
  1709  020F  00F4               	movwf	___llmod@dividend
  1710  0210  120A  118A  2150  120A  118A  	fcall	___llmod
  1711  0215  0873               	movf	?___llmod+3,w
  1712  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0218  00A3               	movwf	send_dec@data+3
  1715  0219  0872               	movf	?___llmod+2,w
  1716  021A  00A2               	movwf	send_dec@data+2
  1717  021B  0871               	movf	?___llmod+1,w
  1718  021C  00A1               	movwf	send_dec@data+1
  1719  021D  0870               	movf	?___llmod,w
  1720  021E  00A0               	movwf	send_dec@data
  1721                           
  1722                           ;PR25.c: 320: send_char(data/1000000000+0x30);
  1723  021F  303B               	movlw	59
  1724  0220  00F3               	movwf	___lldiv@divisor+3
  1725  0221  309A               	movlw	154
  1726  0222  00F2               	movwf	___lldiv@divisor+2
  1727  0223  30CA               	movlw	202
  1728  0224  00F1               	movwf	___lldiv@divisor+1
  1729  0225  3000               	movlw	0
  1730  0226  00F0               	movwf	___lldiv@divisor
  1731  0227  0823               	movf	send_dec@data+3,w
  1732  0228  00F7               	movwf	___lldiv@dividend+3
  1733  0229  0822               	movf	send_dec@data+2,w
  1734  022A  00F6               	movwf	___lldiv@dividend+2
  1735  022B  0821               	movf	send_dec@data+1,w
  1736  022C  00F5               	movwf	___lldiv@dividend+1
  1737  022D  0820               	movf	send_dec@data,w
  1738  022E  00F4               	movwf	___lldiv@dividend
  1739  022F  120A  118A  219C  120A  118A  	fcall	___lldiv
  1740  0234  0870               	movf	?___lldiv,w
  1741  0235  3E30               	addlw	48
  1742  0236  120A  118A  20C1  120A  118A  	fcall	_send_char
  1743  023B                     l1224:	
  1744                           
  1745                           ;PR25.c: 321: }
  1746                           ;PR25.c: 322: if(num_dig>=9)
  1747  023B  3009               	movlw	9
  1748  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1749  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1750  023E  0224               	subwf	send_dec@num_dig,w
  1751  023F  1C03               	skipc
  1752  0240  2A7C               	goto	l1230
  1753                           
  1754                           ;PR25.c: 323: {
  1755                           ;PR25.c: 324: data=data%1000000000;
  1756  0241  303B               	movlw	59
  1757  0242  00F3               	movwf	___llmod@divisor+3
  1758  0243  309A               	movlw	154
  1759  0244  00F2               	movwf	___llmod@divisor+2
  1760  0245  30CA               	movlw	202
  1761  0246  00F1               	movwf	___llmod@divisor+1
  1762  0247  3000               	movlw	0
  1763  0248  00F0               	movwf	___llmod@divisor
  1764  0249  0823               	movf	send_dec@data+3,w
  1765  024A  00F7               	movwf	___llmod@dividend+3
  1766  024B  0822               	movf	send_dec@data+2,w
  1767  024C  00F6               	movwf	___llmod@dividend+2
  1768  024D  0821               	movf	send_dec@data+1,w
  1769  024E  00F5               	movwf	___llmod@dividend+1
  1770  024F  0820               	movf	send_dec@data,w
  1771  0250  00F4               	movwf	___llmod@dividend
  1772  0251  120A  118A  2150  120A  118A  	fcall	___llmod
  1773  0256  0873               	movf	?___llmod+3,w
  1774  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0259  00A3               	movwf	send_dec@data+3
  1777  025A  0872               	movf	?___llmod+2,w
  1778  025B  00A2               	movwf	send_dec@data+2
  1779  025C  0871               	movf	?___llmod+1,w
  1780  025D  00A1               	movwf	send_dec@data+1
  1781  025E  0870               	movf	?___llmod,w
  1782  025F  00A0               	movwf	send_dec@data
  1783                           
  1784                           ;PR25.c: 325: send_char(data/100000000+0x30);
  1785  0260  3005               	movlw	5
  1786  0261  00F3               	movwf	___lldiv@divisor+3
  1787  0262  30F5               	movlw	245
  1788  0263  00F2               	movwf	___lldiv@divisor+2
  1789  0264  30E1               	movlw	225
  1790  0265  00F1               	movwf	___lldiv@divisor+1
  1791  0266  3000               	movlw	0
  1792  0267  00F0               	movwf	___lldiv@divisor
  1793  0268  0823               	movf	send_dec@data+3,w
  1794  0269  00F7               	movwf	___lldiv@dividend+3
  1795  026A  0822               	movf	send_dec@data+2,w
  1796  026B  00F6               	movwf	___lldiv@dividend+2
  1797  026C  0821               	movf	send_dec@data+1,w
  1798  026D  00F5               	movwf	___lldiv@dividend+1
  1799  026E  0820               	movf	send_dec@data,w
  1800  026F  00F4               	movwf	___lldiv@dividend
  1801  0270  120A  118A  219C  120A  118A  	fcall	___lldiv
  1802  0275  0870               	movf	?___lldiv,w
  1803  0276  3E30               	addlw	48
  1804  0277  120A  118A  20C1  120A  118A  	fcall	_send_char
  1805  027C                     l1230:	
  1806                           
  1807                           ;PR25.c: 326: }
  1808                           ;PR25.c: 327: if(num_dig>=8)
  1809  027C  3008               	movlw	8
  1810  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1811  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1812  027F  0224               	subwf	send_dec@num_dig,w
  1813  0280  1C03               	skipc
  1814  0281  2ABD               	goto	l1236
  1815                           
  1816                           ;PR25.c: 328: {
  1817                           ;PR25.c: 329: data=data%100000000;
  1818  0282  3005               	movlw	5
  1819  0283  00F3               	movwf	___llmod@divisor+3
  1820  0284  30F5               	movlw	245
  1821  0285  00F2               	movwf	___llmod@divisor+2
  1822  0286  30E1               	movlw	225
  1823  0287  00F1               	movwf	___llmod@divisor+1
  1824  0288  3000               	movlw	0
  1825  0289  00F0               	movwf	___llmod@divisor
  1826  028A  0823               	movf	send_dec@data+3,w
  1827  028B  00F7               	movwf	___llmod@dividend+3
  1828  028C  0822               	movf	send_dec@data+2,w
  1829  028D  00F6               	movwf	___llmod@dividend+2
  1830  028E  0821               	movf	send_dec@data+1,w
  1831  028F  00F5               	movwf	___llmod@dividend+1
  1832  0290  0820               	movf	send_dec@data,w
  1833  0291  00F4               	movwf	___llmod@dividend
  1834  0292  120A  118A  2150  120A  118A  	fcall	___llmod
  1835  0297  0873               	movf	?___llmod+3,w
  1836  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1838  029A  00A3               	movwf	send_dec@data+3
  1839  029B  0872               	movf	?___llmod+2,w
  1840  029C  00A2               	movwf	send_dec@data+2
  1841  029D  0871               	movf	?___llmod+1,w
  1842  029E  00A1               	movwf	send_dec@data+1
  1843  029F  0870               	movf	?___llmod,w
  1844  02A0  00A0               	movwf	send_dec@data
  1845                           
  1846                           ;PR25.c: 330: send_char(data/10000000+0x30);
  1847  02A1  3000               	movlw	0
  1848  02A2  00F3               	movwf	___lldiv@divisor+3
  1849  02A3  3098               	movlw	152
  1850  02A4  00F2               	movwf	___lldiv@divisor+2
  1851  02A5  3096               	movlw	150
  1852  02A6  00F1               	movwf	___lldiv@divisor+1
  1853  02A7  3080               	movlw	128
  1854  02A8  00F0               	movwf	___lldiv@divisor
  1855  02A9  0823               	movf	send_dec@data+3,w
  1856  02AA  00F7               	movwf	___lldiv@dividend+3
  1857  02AB  0822               	movf	send_dec@data+2,w
  1858  02AC  00F6               	movwf	___lldiv@dividend+2
  1859  02AD  0821               	movf	send_dec@data+1,w
  1860  02AE  00F5               	movwf	___lldiv@dividend+1
  1861  02AF  0820               	movf	send_dec@data,w
  1862  02B0  00F4               	movwf	___lldiv@dividend
  1863  02B1  120A  118A  219C  120A  118A  	fcall	___lldiv
  1864  02B6  0870               	movf	?___lldiv,w
  1865  02B7  3E30               	addlw	48
  1866  02B8  120A  118A  20C1  120A  118A  	fcall	_send_char
  1867  02BD                     l1236:	
  1868                           
  1869                           ;PR25.c: 331: }
  1870                           ;PR25.c: 332: if(num_dig>=7)
  1871  02BD  3007               	movlw	7
  1872  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1873  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1874  02C0  0224               	subwf	send_dec@num_dig,w
  1875  02C1  1C03               	skipc
  1876  02C2  2AFE               	goto	l1242
  1877                           
  1878                           ;PR25.c: 333: {
  1879                           ;PR25.c: 334: data=data%10000000;
  1880  02C3  3000               	movlw	0
  1881  02C4  00F3               	movwf	___llmod@divisor+3
  1882  02C5  3098               	movlw	152
  1883  02C6  00F2               	movwf	___llmod@divisor+2
  1884  02C7  3096               	movlw	150
  1885  02C8  00F1               	movwf	___llmod@divisor+1
  1886  02C9  3080               	movlw	128
  1887  02CA  00F0               	movwf	___llmod@divisor
  1888  02CB  0823               	movf	send_dec@data+3,w
  1889  02CC  00F7               	movwf	___llmod@dividend+3
  1890  02CD  0822               	movf	send_dec@data+2,w
  1891  02CE  00F6               	movwf	___llmod@dividend+2
  1892  02CF  0821               	movf	send_dec@data+1,w
  1893  02D0  00F5               	movwf	___llmod@dividend+1
  1894  02D1  0820               	movf	send_dec@data,w
  1895  02D2  00F4               	movwf	___llmod@dividend
  1896  02D3  120A  118A  2150  120A  118A  	fcall	___llmod
  1897  02D8  0873               	movf	?___llmod+3,w
  1898  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1899  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1900  02DB  00A3               	movwf	send_dec@data+3
  1901  02DC  0872               	movf	?___llmod+2,w
  1902  02DD  00A2               	movwf	send_dec@data+2
  1903  02DE  0871               	movf	?___llmod+1,w
  1904  02DF  00A1               	movwf	send_dec@data+1
  1905  02E0  0870               	movf	?___llmod,w
  1906  02E1  00A0               	movwf	send_dec@data
  1907                           
  1908                           ;PR25.c: 335: send_char(data/1000000+0x30);
  1909  02E2  3000               	movlw	0
  1910  02E3  00F3               	movwf	___lldiv@divisor+3
  1911  02E4  300F               	movlw	15
  1912  02E5  00F2               	movwf	___lldiv@divisor+2
  1913  02E6  3042               	movlw	66
  1914  02E7  00F1               	movwf	___lldiv@divisor+1
  1915  02E8  3040               	movlw	64
  1916  02E9  00F0               	movwf	___lldiv@divisor
  1917  02EA  0823               	movf	send_dec@data+3,w
  1918  02EB  00F7               	movwf	___lldiv@dividend+3
  1919  02EC  0822               	movf	send_dec@data+2,w
  1920  02ED  00F6               	movwf	___lldiv@dividend+2
  1921  02EE  0821               	movf	send_dec@data+1,w
  1922  02EF  00F5               	movwf	___lldiv@dividend+1
  1923  02F0  0820               	movf	send_dec@data,w
  1924  02F1  00F4               	movwf	___lldiv@dividend
  1925  02F2  120A  118A  219C  120A  118A  	fcall	___lldiv
  1926  02F7  0870               	movf	?___lldiv,w
  1927  02F8  3E30               	addlw	48
  1928  02F9  120A  118A  20C1  120A  118A  	fcall	_send_char
  1929  02FE                     l1242:	
  1930                           
  1931                           ;PR25.c: 336: }
  1932                           ;PR25.c: 337: if(num_dig>=6)
  1933  02FE  3006               	movlw	6
  1934  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0300  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0301  0224               	subwf	send_dec@num_dig,w
  1937  0302  1C03               	skipc
  1938  0303  2B3F               	goto	l1248
  1939                           
  1940                           ;PR25.c: 338: {
  1941                           ;PR25.c: 339: data=data%1000000;
  1942  0304  3000               	movlw	0
  1943  0305  00F3               	movwf	___llmod@divisor+3
  1944  0306  300F               	movlw	15
  1945  0307  00F2               	movwf	___llmod@divisor+2
  1946  0308  3042               	movlw	66
  1947  0309  00F1               	movwf	___llmod@divisor+1
  1948  030A  3040               	movlw	64
  1949  030B  00F0               	movwf	___llmod@divisor
  1950  030C  0823               	movf	send_dec@data+3,w
  1951  030D  00F7               	movwf	___llmod@dividend+3
  1952  030E  0822               	movf	send_dec@data+2,w
  1953  030F  00F6               	movwf	___llmod@dividend+2
  1954  0310  0821               	movf	send_dec@data+1,w
  1955  0311  00F5               	movwf	___llmod@dividend+1
  1956  0312  0820               	movf	send_dec@data,w
  1957  0313  00F4               	movwf	___llmod@dividend
  1958  0314  120A  118A  2150  120A  118A  	fcall	___llmod
  1959  0319  0873               	movf	?___llmod+3,w
  1960  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1961  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1962  031C  00A3               	movwf	send_dec@data+3
  1963  031D  0872               	movf	?___llmod+2,w
  1964  031E  00A2               	movwf	send_dec@data+2
  1965  031F  0871               	movf	?___llmod+1,w
  1966  0320  00A1               	movwf	send_dec@data+1
  1967  0321  0870               	movf	?___llmod,w
  1968  0322  00A0               	movwf	send_dec@data
  1969                           
  1970                           ;PR25.c: 340: send_char(data/100000+0x30);
  1971  0323  3000               	movlw	0
  1972  0324  00F3               	movwf	___lldiv@divisor+3
  1973  0325  3001               	movlw	1
  1974  0326  00F2               	movwf	___lldiv@divisor+2
  1975  0327  3086               	movlw	134
  1976  0328  00F1               	movwf	___lldiv@divisor+1
  1977  0329  30A0               	movlw	160
  1978  032A  00F0               	movwf	___lldiv@divisor
  1979  032B  0823               	movf	send_dec@data+3,w
  1980  032C  00F7               	movwf	___lldiv@dividend+3
  1981  032D  0822               	movf	send_dec@data+2,w
  1982  032E  00F6               	movwf	___lldiv@dividend+2
  1983  032F  0821               	movf	send_dec@data+1,w
  1984  0330  00F5               	movwf	___lldiv@dividend+1
  1985  0331  0820               	movf	send_dec@data,w
  1986  0332  00F4               	movwf	___lldiv@dividend
  1987  0333  120A  118A  219C  120A  118A  	fcall	___lldiv
  1988  0338  0870               	movf	?___lldiv,w
  1989  0339  3E30               	addlw	48
  1990  033A  120A  118A  20C1  120A  118A  	fcall	_send_char
  1991  033F                     l1248:	
  1992                           
  1993                           ;PR25.c: 341: }
  1994                           ;PR25.c: 342: if(num_dig>=5)
  1995  033F  3005               	movlw	5
  1996  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1998  0342  0224               	subwf	send_dec@num_dig,w
  1999  0343  1C03               	skipc
  2000  0344  2B80               	goto	l1254
  2001                           
  2002                           ;PR25.c: 343: {
  2003                           ;PR25.c: 344: data=data%100000;
  2004  0345  3000               	movlw	0
  2005  0346  00F3               	movwf	___llmod@divisor+3
  2006  0347  3001               	movlw	1
  2007  0348  00F2               	movwf	___llmod@divisor+2
  2008  0349  3086               	movlw	134
  2009  034A  00F1               	movwf	___llmod@divisor+1
  2010  034B  30A0               	movlw	160
  2011  034C  00F0               	movwf	___llmod@divisor
  2012  034D  0823               	movf	send_dec@data+3,w
  2013  034E  00F7               	movwf	___llmod@dividend+3
  2014  034F  0822               	movf	send_dec@data+2,w
  2015  0350  00F6               	movwf	___llmod@dividend+2
  2016  0351  0821               	movf	send_dec@data+1,w
  2017  0352  00F5               	movwf	___llmod@dividend+1
  2018  0353  0820               	movf	send_dec@data,w
  2019  0354  00F4               	movwf	___llmod@dividend
  2020  0355  120A  118A  2150  120A  118A  	fcall	___llmod
  2021  035A  0873               	movf	?___llmod+3,w
  2022  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2023  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2024  035D  00A3               	movwf	send_dec@data+3
  2025  035E  0872               	movf	?___llmod+2,w
  2026  035F  00A2               	movwf	send_dec@data+2
  2027  0360  0871               	movf	?___llmod+1,w
  2028  0361  00A1               	movwf	send_dec@data+1
  2029  0362  0870               	movf	?___llmod,w
  2030  0363  00A0               	movwf	send_dec@data
  2031                           
  2032                           ;PR25.c: 345: send_char(data/10000+0x30);
  2033  0364  3000               	movlw	0
  2034  0365  00F3               	movwf	___lldiv@divisor+3
  2035  0366  3000               	movlw	0
  2036  0367  00F2               	movwf	___lldiv@divisor+2
  2037  0368  3027               	movlw	39
  2038  0369  00F1               	movwf	___lldiv@divisor+1
  2039  036A  3010               	movlw	16
  2040  036B  00F0               	movwf	___lldiv@divisor
  2041  036C  0823               	movf	send_dec@data+3,w
  2042  036D  00F7               	movwf	___lldiv@dividend+3
  2043  036E  0822               	movf	send_dec@data+2,w
  2044  036F  00F6               	movwf	___lldiv@dividend+2
  2045  0370  0821               	movf	send_dec@data+1,w
  2046  0371  00F5               	movwf	___lldiv@dividend+1
  2047  0372  0820               	movf	send_dec@data,w
  2048  0373  00F4               	movwf	___lldiv@dividend
  2049  0374  120A  118A  219C  120A  118A  	fcall	___lldiv
  2050  0379  0870               	movf	?___lldiv,w
  2051  037A  3E30               	addlw	48
  2052  037B  120A  118A  20C1  120A  118A  	fcall	_send_char
  2053  0380                     l1254:	
  2054                           
  2055                           ;PR25.c: 346: }
  2056                           ;PR25.c: 347: if(num_dig>=4)
  2057  0380  3004               	movlw	4
  2058  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0383  0224               	subwf	send_dec@num_dig,w
  2061  0384  1C03               	skipc
  2062  0385  2BC1               	goto	l1260
  2063                           
  2064                           ;PR25.c: 348: {
  2065                           ;PR25.c: 349: data=data%10000;
  2066  0386  3000               	movlw	0
  2067  0387  00F3               	movwf	___llmod@divisor+3
  2068  0388  3000               	movlw	0
  2069  0389  00F2               	movwf	___llmod@divisor+2
  2070  038A  3027               	movlw	39
  2071  038B  00F1               	movwf	___llmod@divisor+1
  2072  038C  3010               	movlw	16
  2073  038D  00F0               	movwf	___llmod@divisor
  2074  038E  0823               	movf	send_dec@data+3,w
  2075  038F  00F7               	movwf	___llmod@dividend+3
  2076  0390  0822               	movf	send_dec@data+2,w
  2077  0391  00F6               	movwf	___llmod@dividend+2
  2078  0392  0821               	movf	send_dec@data+1,w
  2079  0393  00F5               	movwf	___llmod@dividend+1
  2080  0394  0820               	movf	send_dec@data,w
  2081  0395  00F4               	movwf	___llmod@dividend
  2082  0396  120A  118A  2150  120A  118A  	fcall	___llmod
  2083  039B  0873               	movf	?___llmod+3,w
  2084  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2085  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2086  039E  00A3               	movwf	send_dec@data+3
  2087  039F  0872               	movf	?___llmod+2,w
  2088  03A0  00A2               	movwf	send_dec@data+2
  2089  03A1  0871               	movf	?___llmod+1,w
  2090  03A2  00A1               	movwf	send_dec@data+1
  2091  03A3  0870               	movf	?___llmod,w
  2092  03A4  00A0               	movwf	send_dec@data
  2093                           
  2094                           ;PR25.c: 350: send_char(data/1000+0x30);
  2095  03A5  3000               	movlw	0
  2096  03A6  00F3               	movwf	___lldiv@divisor+3
  2097  03A7  3000               	movlw	0
  2098  03A8  00F2               	movwf	___lldiv@divisor+2
  2099  03A9  3003               	movlw	3
  2100  03AA  00F1               	movwf	___lldiv@divisor+1
  2101  03AB  30E8               	movlw	232
  2102  03AC  00F0               	movwf	___lldiv@divisor
  2103  03AD  0823               	movf	send_dec@data+3,w
  2104  03AE  00F7               	movwf	___lldiv@dividend+3
  2105  03AF  0822               	movf	send_dec@data+2,w
  2106  03B0  00F6               	movwf	___lldiv@dividend+2
  2107  03B1  0821               	movf	send_dec@data+1,w
  2108  03B2  00F5               	movwf	___lldiv@dividend+1
  2109  03B3  0820               	movf	send_dec@data,w
  2110  03B4  00F4               	movwf	___lldiv@dividend
  2111  03B5  120A  118A  219C  120A  118A  	fcall	___lldiv
  2112  03BA  0870               	movf	?___lldiv,w
  2113  03BB  3E30               	addlw	48
  2114  03BC  120A  118A  20C1  120A  118A  	fcall	_send_char
  2115  03C1                     l1260:	
  2116                           
  2117                           ;PR25.c: 351: }
  2118                           ;PR25.c: 352: if(num_dig>=3)
  2119  03C1  3003               	movlw	3
  2120  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2121  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2122  03C4  0224               	subwf	send_dec@num_dig,w
  2123  03C5  1C03               	skipc
  2124  03C6  2C02               	goto	l1266
  2125                           
  2126                           ;PR25.c: 353: {
  2127                           ;PR25.c: 354: data=data%1000;
  2128  03C7  3000               	movlw	0
  2129  03C8  00F3               	movwf	___llmod@divisor+3
  2130  03C9  3000               	movlw	0
  2131  03CA  00F2               	movwf	___llmod@divisor+2
  2132  03CB  3003               	movlw	3
  2133  03CC  00F1               	movwf	___llmod@divisor+1
  2134  03CD  30E8               	movlw	232
  2135  03CE  00F0               	movwf	___llmod@divisor
  2136  03CF  0823               	movf	send_dec@data+3,w
  2137  03D0  00F7               	movwf	___llmod@dividend+3
  2138  03D1  0822               	movf	send_dec@data+2,w
  2139  03D2  00F6               	movwf	___llmod@dividend+2
  2140  03D3  0821               	movf	send_dec@data+1,w
  2141  03D4  00F5               	movwf	___llmod@dividend+1
  2142  03D5  0820               	movf	send_dec@data,w
  2143  03D6  00F4               	movwf	___llmod@dividend
  2144  03D7  120A  118A  2150  120A  118A  	fcall	___llmod
  2145  03DC  0873               	movf	?___llmod+3,w
  2146  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2147  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2148  03DF  00A3               	movwf	send_dec@data+3
  2149  03E0  0872               	movf	?___llmod+2,w
  2150  03E1  00A2               	movwf	send_dec@data+2
  2151  03E2  0871               	movf	?___llmod+1,w
  2152  03E3  00A1               	movwf	send_dec@data+1
  2153  03E4  0870               	movf	?___llmod,w
  2154  03E5  00A0               	movwf	send_dec@data
  2155                           
  2156                           ;PR25.c: 355: send_char(data/100+0x30);
  2157  03E6  3000               	movlw	0
  2158  03E7  00F3               	movwf	___lldiv@divisor+3
  2159  03E8  3000               	movlw	0
  2160  03E9  00F2               	movwf	___lldiv@divisor+2
  2161  03EA  3000               	movlw	0
  2162  03EB  00F1               	movwf	___lldiv@divisor+1
  2163  03EC  3064               	movlw	100
  2164  03ED  00F0               	movwf	___lldiv@divisor
  2165  03EE  0823               	movf	send_dec@data+3,w
  2166  03EF  00F7               	movwf	___lldiv@dividend+3
  2167  03F0  0822               	movf	send_dec@data+2,w
  2168  03F1  00F6               	movwf	___lldiv@dividend+2
  2169  03F2  0821               	movf	send_dec@data+1,w
  2170  03F3  00F5               	movwf	___lldiv@dividend+1
  2171  03F4  0820               	movf	send_dec@data,w
  2172  03F5  00F4               	movwf	___lldiv@dividend
  2173  03F6  120A  118A  219C  120A  118A  	fcall	___lldiv
  2174  03FB  0870               	movf	?___lldiv,w
  2175  03FC  3E30               	addlw	48
  2176  03FD  120A  118A  20C1  120A  118A  	fcall	_send_char
  2177  0402                     l1266:	
  2178                           
  2179                           ;PR25.c: 356: }
  2180                           ;PR25.c: 357: if(num_dig>=2)
  2181  0402  3002               	movlw	2
  2182  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0405  0224               	subwf	send_dec@num_dig,w
  2185  0406  1C03               	skipc
  2186  0407  2C43               	goto	l1272
  2187                           
  2188                           ;PR25.c: 358: {
  2189                           ;PR25.c: 359: data=data%100;
  2190  0408  3000               	movlw	0
  2191  0409  00F3               	movwf	___llmod@divisor+3
  2192  040A  3000               	movlw	0
  2193  040B  00F2               	movwf	___llmod@divisor+2
  2194  040C  3000               	movlw	0
  2195  040D  00F1               	movwf	___llmod@divisor+1
  2196  040E  3064               	movlw	100
  2197  040F  00F0               	movwf	___llmod@divisor
  2198  0410  0823               	movf	send_dec@data+3,w
  2199  0411  00F7               	movwf	___llmod@dividend+3
  2200  0412  0822               	movf	send_dec@data+2,w
  2201  0413  00F6               	movwf	___llmod@dividend+2
  2202  0414  0821               	movf	send_dec@data+1,w
  2203  0415  00F5               	movwf	___llmod@dividend+1
  2204  0416  0820               	movf	send_dec@data,w
  2205  0417  00F4               	movwf	___llmod@dividend
  2206  0418  120A  118A  2150  120A  118A  	fcall	___llmod
  2207  041D  0873               	movf	?___llmod+3,w
  2208  041E  1283               	bcf	3,5	;RP0=0, select bank0
  2209  041F  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0420  00A3               	movwf	send_dec@data+3
  2211  0421  0872               	movf	?___llmod+2,w
  2212  0422  00A2               	movwf	send_dec@data+2
  2213  0423  0871               	movf	?___llmod+1,w
  2214  0424  00A1               	movwf	send_dec@data+1
  2215  0425  0870               	movf	?___llmod,w
  2216  0426  00A0               	movwf	send_dec@data
  2217                           
  2218                           ;PR25.c: 360: send_char(data/10+0x30);
  2219  0427  3000               	movlw	0
  2220  0428  00F3               	movwf	___lldiv@divisor+3
  2221  0429  3000               	movlw	0
  2222  042A  00F2               	movwf	___lldiv@divisor+2
  2223  042B  3000               	movlw	0
  2224  042C  00F1               	movwf	___lldiv@divisor+1
  2225  042D  300A               	movlw	10
  2226  042E  00F0               	movwf	___lldiv@divisor
  2227  042F  0823               	movf	send_dec@data+3,w
  2228  0430  00F7               	movwf	___lldiv@dividend+3
  2229  0431  0822               	movf	send_dec@data+2,w
  2230  0432  00F6               	movwf	___lldiv@dividend+2
  2231  0433  0821               	movf	send_dec@data+1,w
  2232  0434  00F5               	movwf	___lldiv@dividend+1
  2233  0435  0820               	movf	send_dec@data,w
  2234  0436  00F4               	movwf	___lldiv@dividend
  2235  0437  120A  118A  219C  120A  118A  	fcall	___lldiv
  2236  043C  0870               	movf	?___lldiv,w
  2237  043D  3E30               	addlw	48
  2238  043E  120A  118A  20C1  120A  118A  	fcall	_send_char
  2239  0443                     l1272:	
  2240                           
  2241                           ;PR25.c: 361: }
  2242                           ;PR25.c: 362: if(num_dig>=1)
  2243  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0445  0824               	movf	send_dec@num_dig,w
  2246  0446  1903               	btfsc	3,2
  2247  0447  0008               	return
  2248                           
  2249                           ;PR25.c: 363: {
  2250                           ;PR25.c: 364: data=data%10;
  2251  0448  3000               	movlw	0
  2252  0449  00F3               	movwf	___llmod@divisor+3
  2253  044A  3000               	movlw	0
  2254  044B  00F2               	movwf	___llmod@divisor+2
  2255  044C  3000               	movlw	0
  2256  044D  00F1               	movwf	___llmod@divisor+1
  2257  044E  300A               	movlw	10
  2258  044F  00F0               	movwf	___llmod@divisor
  2259  0450  0823               	movf	send_dec@data+3,w
  2260  0451  00F7               	movwf	___llmod@dividend+3
  2261  0452  0822               	movf	send_dec@data+2,w
  2262  0453  00F6               	movwf	___llmod@dividend+2
  2263  0454  0821               	movf	send_dec@data+1,w
  2264  0455  00F5               	movwf	___llmod@dividend+1
  2265  0456  0820               	movf	send_dec@data,w
  2266  0457  00F4               	movwf	___llmod@dividend
  2267  0458  120A  118A  2150  120A  118A  	fcall	___llmod
  2268  045D  0873               	movf	?___llmod+3,w
  2269  045E  1283               	bcf	3,5	;RP0=0, select bank0
  2270  045F  1303               	bcf	3,6	;RP1=0, select bank0
  2271  0460  00A3               	movwf	send_dec@data+3
  2272  0461  0872               	movf	?___llmod+2,w
  2273  0462  00A2               	movwf	send_dec@data+2
  2274  0463  0871               	movf	?___llmod+1,w
  2275  0464  00A1               	movwf	send_dec@data+1
  2276  0465  0870               	movf	?___llmod,w
  2277  0466  00A0               	movwf	send_dec@data
  2278                           
  2279                           ;PR25.c: 365: send_char(data+0x30);
  2280  0467  0820               	movf	send_dec@data,w
  2281  0468  3E30               	addlw	48
  2282  0469  120A  118A  20C1   	fcall	_send_char
  2283  046C  0008               	return
  2284  046D                     __end_of_send_dec:	
  2285                           
  2286                           	psect	text3
  2287  00C1                     __ptext3:	
  2288 ;; *************** function _send_char *****************
  2289 ;; Defined at:
  2290 ;;		line 307 in file "../../Source file/PR25.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  data            1    wreg     unsigned char 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  data            1    6[COMMON] unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;		None               void
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2304 ;;      Params:         0       0       0       0       0
  2305 ;;      Locals:         1       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0
  2307 ;;      Totals:         1       0       0       0       0
  2308 ;;Total ram usage:        1 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    2
  2311 ;; This function calls:
  2312 ;;		_delay
  2313 ;;		_e_pulse
  2314 ;; This function is called by:
  2315 ;;		_send_dec
  2316 ;;		_send_string
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _send_char
  2322  00C1                     _send_char:	
  2323                           
  2324                           ;incstack = 0
  2325                           ; Regs used in _send_char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2326                           ;send_char@data stored from wreg
  2327  00C1  00F6               	movwf	send_char@data
  2328                           
  2329                           ;PR25.c: 309: RA0=1;
  2330  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  2331  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  2332  00C4  1405               	bsf	5,0	;volatile
  2333                           
  2334                           ;PR25.c: 310: PORTB = data;
  2335  00C5  0876               	movf	send_char@data,w
  2336  00C6  0086               	movwf	6	;volatile
  2337                           
  2338                           ;PR25.c: 311: delay(400);
  2339  00C7  3000               	movlw	0
  2340  00C8  00F3               	movwf	delay@data+3
  2341  00C9  3000               	movlw	0
  2342  00CA  00F2               	movwf	delay@data+2
  2343  00CB  3001               	movlw	1
  2344  00CC  00F1               	movwf	delay@data+1
  2345  00CD  3090               	movlw	144
  2346  00CE  00F0               	movwf	delay@data
  2347  00CF  120A  158A  27D4  120A  118A  	fcall	_delay
  2348                           
  2349                           ;PR25.c: 312: e_pulse();
  2350  00D4  120A  118A  20D8   	fcall	_e_pulse
  2351  00D7  0008               	return
  2352  00D8                     __end_of_send_char:	
  2353                           
  2354                           	psect	text4
  2355  0150                     __ptext4:	
  2356 ;; *************** function ___llmod *****************
  2357 ;; Defined at:
  2358 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  divisor         4    0[COMMON] unsigned long 
  2361 ;;  dividend        4    4[COMMON] unsigned long 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  counter         1    9[COMMON] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  4    0[COMMON] unsigned long 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2373 ;;      Params:         8       0       0       0       0
  2374 ;;      Locals:         1       0       0       0       0
  2375 ;;      Temps:          1       0       0       0       0
  2376 ;;      Totals:        10       0       0       0       0
  2377 ;;Total ram usage:       10 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_send_dec
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function ___llmod
  2388  0150                     ___llmod:	
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2392  0150  0873               	movf	___llmod@divisor+3,w
  2393  0151  0472               	iorwf	___llmod@divisor+2,w
  2394  0152  0471               	iorwf	___llmod@divisor+1,w
  2395  0153  0470               	iorwf	___llmod@divisor,w
  2396  0154  1903               	skipnz
  2397  0155  2993               	goto	l1170
  2398  0156  01F9               	clrf	___llmod@counter
  2399  0157  0AF9               	incf	___llmod@counter,f
  2400  0158                     l1160:	
  2401  0158  1BF3               	btfsc	___llmod@divisor+3,7
  2402  0159  2968               	goto	l1162
  2403  015A  3001               	movlw	1
  2404  015B  00F8               	movwf	??___llmod
  2405  015C                     u895:	
  2406  015C  1003               	clrc
  2407  015D  0DF0               	rlf	___llmod@divisor,f
  2408  015E  0DF1               	rlf	___llmod@divisor+1,f
  2409  015F  0DF2               	rlf	___llmod@divisor+2,f
  2410  0160  0DF3               	rlf	___llmod@divisor+3,f
  2411  0161  0BF8               	decfsz	??___llmod,f
  2412  0162  295C               	goto	u895
  2413  0163  3001               	movlw	1
  2414  0164  00F8               	movwf	??___llmod
  2415  0165  0878               	movf	??___llmod,w
  2416  0166  07F9               	addwf	___llmod@counter,f
  2417  0167  2958               	goto	l1160
  2418  0168                     l1162:	
  2419  0168  0873               	movf	___llmod@divisor+3,w
  2420  0169  0277               	subwf	___llmod@dividend+3,w
  2421  016A  1D03               	skipz
  2422  016B  2976               	goto	u915
  2423  016C  0872               	movf	___llmod@divisor+2,w
  2424  016D  0276               	subwf	___llmod@dividend+2,w
  2425  016E  1D03               	skipz
  2426  016F  2976               	goto	u915
  2427  0170  0871               	movf	___llmod@divisor+1,w
  2428  0171  0275               	subwf	___llmod@dividend+1,w
  2429  0172  1D03               	skipz
  2430  0173  2976               	goto	u915
  2431  0174  0870               	movf	___llmod@divisor,w
  2432  0175  0274               	subwf	___llmod@dividend,w
  2433  0176                     u915:	
  2434  0176  1C03               	skipc
  2435  0177  2986               	goto	l1166
  2436  0178  0870               	movf	___llmod@divisor,w
  2437  0179  02F4               	subwf	___llmod@dividend,f
  2438  017A  0871               	movf	___llmod@divisor+1,w
  2439  017B  1C03               	skipc
  2440  017C  0F71               	incfsz	___llmod@divisor+1,w
  2441  017D  02F5               	subwf	___llmod@dividend+1,f
  2442  017E  0872               	movf	___llmod@divisor+2,w
  2443  017F  1C03               	skipc
  2444  0180  0F72               	incfsz	___llmod@divisor+2,w
  2445  0181  02F6               	subwf	___llmod@dividend+2,f
  2446  0182  0873               	movf	___llmod@divisor+3,w
  2447  0183  1C03               	skipc
  2448  0184  0F73               	incfsz	___llmod@divisor+3,w
  2449  0185  02F7               	subwf	___llmod@dividend+3,f
  2450  0186                     l1166:	
  2451  0186  3001               	movlw	1
  2452  0187                     u925:	
  2453  0187  1003               	clrc
  2454  0188  0CF3               	rrf	___llmod@divisor+3,f
  2455  0189  0CF2               	rrf	___llmod@divisor+2,f
  2456  018A  0CF1               	rrf	___llmod@divisor+1,f
  2457  018B  0CF0               	rrf	___llmod@divisor,f
  2458  018C  3EFF               	addlw	-1
  2459  018D  1D03               	skipz
  2460  018E  2987               	goto	u925
  2461  018F  3001               	movlw	1
  2462  0190  02F9               	subwf	___llmod@counter,f
  2463  0191  1D03               	btfss	3,2
  2464  0192  2968               	goto	l1162
  2465  0193                     l1170:	
  2466  0193  0877               	movf	___llmod@dividend+3,w
  2467  0194  00F3               	movwf	?___llmod+3
  2468  0195  0876               	movf	___llmod@dividend+2,w
  2469  0196  00F2               	movwf	?___llmod+2
  2470  0197  0875               	movf	___llmod@dividend+1,w
  2471  0198  00F1               	movwf	?___llmod+1
  2472  0199  0874               	movf	___llmod@dividend,w
  2473  019A  00F0               	movwf	?___llmod
  2474  019B  0008               	return
  2475  019C                     __end_of___llmod:	
  2476                           
  2477                           	psect	text5
  2478  019C                     __ptext5:	
  2479 ;; *************** function ___lldiv *****************
  2480 ;; Defined at:
  2481 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  divisor         4    0[COMMON] unsigned long 
  2484 ;;  dividend        4    4[COMMON] unsigned long 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  quotient        4    9[COMMON] unsigned long 
  2487 ;;  counter         1   13[COMMON] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  4    0[COMMON] unsigned long 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2497 ;;      Params:         8       0       0       0       0
  2498 ;;      Locals:         5       0       0       0       0
  2499 ;;      Temps:          1       0       0       0       0
  2500 ;;      Totals:        14       0       0       0       0
  2501 ;;Total ram usage:       14 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_send_dec
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function ___lldiv
  2512  019C                     ___lldiv:	
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2516  019C  3000               	movlw	0
  2517  019D  00FC               	movwf	___lldiv@quotient+3
  2518  019E  3000               	movlw	0
  2519  019F  00FB               	movwf	___lldiv@quotient+2
  2520  01A0  3000               	movlw	0
  2521  01A1  00FA               	movwf	___lldiv@quotient+1
  2522  01A2  3000               	movlw	0
  2523  01A3  00F9               	movwf	___lldiv@quotient
  2524  01A4  0873               	movf	___lldiv@divisor+3,w
  2525  01A5  0472               	iorwf	___lldiv@divisor+2,w
  2526  01A6  0471               	iorwf	___lldiv@divisor+1,w
  2527  01A7  0470               	iorwf	___lldiv@divisor,w
  2528  01A8  1903               	skipnz
  2529  01A9  29F1               	goto	l1150
  2530  01AA  01FD               	clrf	___lldiv@counter
  2531  01AB  0AFD               	incf	___lldiv@counter,f
  2532  01AC                     l1136:	
  2533  01AC  1BF3               	btfsc	___lldiv@divisor+3,7
  2534  01AD  29BC               	goto	l1138
  2535  01AE  3001               	movlw	1
  2536  01AF  00F8               	movwf	??___lldiv
  2537  01B0                     u825:	
  2538  01B0  1003               	clrc
  2539  01B1  0DF0               	rlf	___lldiv@divisor,f
  2540  01B2  0DF1               	rlf	___lldiv@divisor+1,f
  2541  01B3  0DF2               	rlf	___lldiv@divisor+2,f
  2542  01B4  0DF3               	rlf	___lldiv@divisor+3,f
  2543  01B5  0BF8               	decfsz	??___lldiv,f
  2544  01B6  29B0               	goto	u825
  2545  01B7  3001               	movlw	1
  2546  01B8  00F8               	movwf	??___lldiv
  2547  01B9  0878               	movf	??___lldiv,w
  2548  01BA  07FD               	addwf	___lldiv@counter,f
  2549  01BB  29AC               	goto	l1136
  2550  01BC                     l1138:	
  2551  01BC  3001               	movlw	1
  2552  01BD  00F8               	movwf	??___lldiv
  2553  01BE                     u845:	
  2554  01BE  1003               	clrc
  2555  01BF  0DF9               	rlf	___lldiv@quotient,f
  2556  01C0  0DFA               	rlf	___lldiv@quotient+1,f
  2557  01C1  0DFB               	rlf	___lldiv@quotient+2,f
  2558  01C2  0DFC               	rlf	___lldiv@quotient+3,f
  2559  01C3  0BF8               	decfsz	??___lldiv,f
  2560  01C4  29BE               	goto	u845
  2561  01C5  0873               	movf	___lldiv@divisor+3,w
  2562  01C6  0277               	subwf	___lldiv@dividend+3,w
  2563  01C7  1D03               	skipz
  2564  01C8  29D3               	goto	u855
  2565  01C9  0872               	movf	___lldiv@divisor+2,w
  2566  01CA  0276               	subwf	___lldiv@dividend+2,w
  2567  01CB  1D03               	skipz
  2568  01CC  29D3               	goto	u855
  2569  01CD  0871               	movf	___lldiv@divisor+1,w
  2570  01CE  0275               	subwf	___lldiv@dividend+1,w
  2571  01CF  1D03               	skipz
  2572  01D0  29D3               	goto	u855
  2573  01D1  0870               	movf	___lldiv@divisor,w
  2574  01D2  0274               	subwf	___lldiv@dividend,w
  2575  01D3                     u855:	
  2576  01D3  1C03               	skipc
  2577  01D4  29E4               	goto	l1146
  2578  01D5  0870               	movf	___lldiv@divisor,w
  2579  01D6  02F4               	subwf	___lldiv@dividend,f
  2580  01D7  0871               	movf	___lldiv@divisor+1,w
  2581  01D8  1C03               	skipc
  2582  01D9  0F71               	incfsz	___lldiv@divisor+1,w
  2583  01DA  02F5               	subwf	___lldiv@dividend+1,f
  2584  01DB  0872               	movf	___lldiv@divisor+2,w
  2585  01DC  1C03               	skipc
  2586  01DD  0F72               	incfsz	___lldiv@divisor+2,w
  2587  01DE  02F6               	subwf	___lldiv@dividend+2,f
  2588  01DF  0873               	movf	___lldiv@divisor+3,w
  2589  01E0  1C03               	skipc
  2590  01E1  0F73               	incfsz	___lldiv@divisor+3,w
  2591  01E2  02F7               	subwf	___lldiv@dividend+3,f
  2592  01E3  1479               	bsf	___lldiv@quotient,0
  2593  01E4                     l1146:	
  2594  01E4  3001               	movlw	1
  2595  01E5                     u865:	
  2596  01E5  1003               	clrc
  2597  01E6  0CF3               	rrf	___lldiv@divisor+3,f
  2598  01E7  0CF2               	rrf	___lldiv@divisor+2,f
  2599  01E8  0CF1               	rrf	___lldiv@divisor+1,f
  2600  01E9  0CF0               	rrf	___lldiv@divisor,f
  2601  01EA  3EFF               	addlw	-1
  2602  01EB  1D03               	skipz
  2603  01EC  29E5               	goto	u865
  2604  01ED  3001               	movlw	1
  2605  01EE  02FD               	subwf	___lldiv@counter,f
  2606  01EF  1D03               	btfss	3,2
  2607  01F0  29BC               	goto	l1138
  2608  01F1                     l1150:	
  2609  01F1  087C               	movf	___lldiv@quotient+3,w
  2610  01F2  00F3               	movwf	?___lldiv+3
  2611  01F3  087B               	movf	___lldiv@quotient+2,w
  2612  01F4  00F2               	movwf	?___lldiv+2
  2613  01F5  087A               	movf	___lldiv@quotient+1,w
  2614  01F6  00F1               	movwf	?___lldiv+1
  2615  01F7  0879               	movf	___lldiv@quotient,w
  2616  01F8  00F0               	movwf	?___lldiv
  2617  01F9  0008               	return
  2618  01FA                     __end_of___lldiv:	
  2619                           
  2620                           	psect	text6
  2621  0FEA                     __ptext6:	
  2622 ;; *************** function _lcd_goto *****************
  2623 ;; Defined at:
  2624 ;;		line 377 in file "../../Source file/PR25.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  data            1    wreg     unsigned char 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  data            1    8[COMMON] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;		None               void
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         0       0       0       0       0
  2639 ;;      Locals:         1       0       0       0       0
  2640 ;;      Temps:          1       0       0       0       0
  2641 ;;      Totals:         2       0       0       0       0
  2642 ;;Total ram usage:        2 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    3
  2645 ;; This function calls:
  2646 ;;		_send_config
  2647 ;; This function is called by:
  2648 ;;		_main
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function _lcd_goto
  2654  0FEA                     _lcd_goto:	
  2655                           
  2656                           ;incstack = 0
  2657                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2658                           ;lcd_goto@data stored from wreg
  2659  0FEA  00F8               	movwf	lcd_goto@data
  2660                           
  2661                           ;PR25.c: 379: if(data<16)
  2662  0FEB  3010               	movlw	16
  2663  0FEC  0278               	subwf	lcd_goto@data,w
  2664  0FED  1803               	skipnc
  2665  0FEE  2FF5               	goto	l1204
  2666                           
  2667                           ;PR25.c: 380: {
  2668                           ;PR25.c: 381: send_config(0x80+data);
  2669  0FEF  0878               	movf	lcd_goto@data,w
  2670  0FF0  3E80               	addlw	128
  2671  0FF1  120A  118A  20AA   	fcall	_send_config
  2672                           
  2673                           ;PR25.c: 382: }
  2674  0FF4  0008               	return
  2675  0FF5                     l1204:	
  2676                           
  2677                           ;PR25.c: 383: else
  2678                           ;PR25.c: 384: {
  2679                           ;PR25.c: 385: data=data-20;
  2680  0FF5  0878               	movf	lcd_goto@data,w
  2681  0FF6  3EEC               	addlw	236
  2682  0FF7  00F7               	movwf	??_lcd_goto
  2683  0FF8  0877               	movf	??_lcd_goto,w
  2684  0FF9  00F8               	movwf	lcd_goto@data
  2685                           
  2686                           ;PR25.c: 386: send_config(0xc0+data);
  2687  0FFA  0878               	movf	lcd_goto@data,w
  2688  0FFB  3EC0               	addlw	192
  2689  0FFC  120A  118A  20AA   	fcall	_send_config
  2690  0FFF  0008               	return
  2691  1000                     __end_of_lcd_goto:	
  2692                           
  2693                           	psect	text7
  2694  0FC2                     __ptext7:	
  2695 ;; *************** function _lcd_clr *****************
  2696 ;; Defined at:
  2697 ;;		line 391 in file "../../Source file/PR25.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;		None               void
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    3
  2718 ;; This function calls:
  2719 ;;		_delay
  2720 ;;		_send_config
  2721 ;; This function is called by:
  2722 ;;		_main
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           
  2727                           ;psect for function _lcd_clr
  2728  0FC2                     _lcd_clr:	
  2729                           
  2730                           ;PR25.c: 393: send_config(0x01);
  2731                           
  2732                           ;incstack = 0
  2733                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2734  0FC2  3001               	movlw	1
  2735  0FC3  120A  118A  20AA  120A  158A  	fcall	_send_config
  2736                           
  2737                           ;PR25.c: 394: delay(350);
  2738  0FC8  3000               	movlw	0
  2739  0FC9  00F3               	movwf	delay@data+3
  2740  0FCA  3000               	movlw	0
  2741  0FCB  00F2               	movwf	delay@data+2
  2742  0FCC  3001               	movlw	1
  2743  0FCD  00F1               	movwf	delay@data+1
  2744  0FCE  305E               	movlw	94
  2745  0FCF  00F0               	movwf	delay@data
  2746  0FD0  120A  158A  27D4   	fcall	_delay
  2747  0FD3  0008               	return
  2748  0FD4                     __end_of_lcd_clr:	
  2749                           
  2750                           	psect	text8
  2751  0116                     __ptext8:	
  2752 ;; *************** function _init *****************
  2753 ;; Defined at:
  2754 ;;		line 268 in file "../../Source file/PR25.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;		None               void
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2768 ;;      Params:         0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0
  2771 ;;      Totals:         0       0       0       0       0
  2772 ;;Total ram usage:        0 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    3
  2775 ;; This function calls:
  2776 ;;		_delay
  2777 ;;		_send_config
  2778 ;; This function is called by:
  2779 ;;		_main
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _init
  2785  0116                     _init:	
  2786                           
  2787                           ;PR25.c: 271: ADCON1 = 0X06;
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2791  0116  3006               	movlw	6
  2792  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2793  0118  1303               	bcf	3,6	;RP1=0, select bank1
  2794  0119  009F               	movwf	31	;volatile
  2795                           
  2796                           ;PR25.c: 274: TRISA = 0b00111100;
  2797  011A  303C               	movlw	60
  2798  011B  0085               	movwf	5	;volatile
  2799                           
  2800                           ;PR25.c: 275: TRISB = 0b00000000;
  2801  011C  0186               	clrf	6	;volatile
  2802                           
  2803                           ;PR25.c: 276: TRISC = 0b00000111;
  2804  011D  3007               	movlw	7
  2805  011E  0087               	movwf	7	;volatile
  2806                           
  2807                           ;PR25.c: 279: send_config(0b00000001);
  2808  011F  3001               	movlw	1
  2809  0120  120A  118A  20AA  120A  118A  	fcall	_send_config
  2810                           
  2811                           ;PR25.c: 280: send_config(0b00000010);
  2812  0125  3002               	movlw	2
  2813  0126  120A  118A  20AA  120A  118A  	fcall	_send_config
  2814                           
  2815                           ;PR25.c: 281: send_config(0b00000110);
  2816  012B  3006               	movlw	6
  2817  012C  120A  118A  20AA  120A  118A  	fcall	_send_config
  2818                           
  2819                           ;PR25.c: 282: send_config(0b00001100);
  2820  0131  300C               	movlw	12
  2821  0132  120A  118A  20AA  120A  118A  	fcall	_send_config
  2822                           
  2823                           ;PR25.c: 283: send_config(0b00111000);
  2824  0137  3038               	movlw	56
  2825  0138  120A  118A  20AA  120A  118A  	fcall	_send_config
  2826                           
  2827                           ;PR25.c: 285: RC4=0;
  2828  013D  1283               	bcf	3,5	;RP0=0, select bank0
  2829  013E  1303               	bcf	3,6	;RP1=0, select bank0
  2830  013F  1207               	bcf	7,4	;volatile
  2831                           
  2832                           ;PR25.c: 286: delay(5000);
  2833  0140  3000               	movlw	0
  2834  0141  00F3               	movwf	delay@data+3
  2835  0142  3000               	movlw	0
  2836  0143  00F2               	movwf	delay@data+2
  2837  0144  3013               	movlw	19
  2838  0145  00F1               	movwf	delay@data+1
  2839  0146  3088               	movlw	136
  2840  0147  00F0               	movwf	delay@data
  2841  0148  120A  158A  27D4   	fcall	_delay
  2842                           
  2843                           ;PR25.c: 287: RC3=0;
  2844  014B  1283               	bcf	3,5	;RP0=0, select bank0
  2845  014C  1303               	bcf	3,6	;RP1=0, select bank0
  2846  014D  1187               	bcf	7,3	;volatile
  2847                           
  2848                           ;PR25.c: 288: RA1=0;
  2849  014E  1085               	bcf	5,1	;volatile
  2850  014F  0008               	return
  2851  0150                     __end_of_init:	
  2852                           
  2853                           	psect	text9
  2854  00AA                     __ptext9:	
  2855 ;; *************** function _send_config *****************
  2856 ;; Defined at:
  2857 ;;		line 299 in file "../../Source file/PR25.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  data            1    wreg     unsigned char 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  data            1    6[COMMON] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;		None               void
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         0       0       0       0       0
  2872 ;;      Locals:         1       0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0
  2874 ;;      Totals:         1       0       0       0       0
  2875 ;;Total ram usage:        1 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    2
  2878 ;; This function calls:
  2879 ;;		_delay
  2880 ;;		_e_pulse
  2881 ;; This function is called by:
  2882 ;;		_init
  2883 ;;		_lcd_goto
  2884 ;;		_lcd_clr
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _send_config
  2890  00AA                     _send_config:	
  2891                           
  2892                           ;incstack = 0
  2893                           ; Regs used in _send_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2894                           ;send_config@data stored from wreg
  2895  00AA  00F6               	movwf	send_config@data
  2896                           
  2897                           ;PR25.c: 301: RA0=0;
  2898  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  2899  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  2900  00AD  1005               	bcf	5,0	;volatile
  2901                           
  2902                           ;PR25.c: 302: PORTB=data;
  2903  00AE  0876               	movf	send_config@data,w
  2904  00AF  0086               	movwf	6	;volatile
  2905                           
  2906                           ;PR25.c: 303: delay(400);
  2907  00B0  3000               	movlw	0
  2908  00B1  00F3               	movwf	delay@data+3
  2909  00B2  3000               	movlw	0
  2910  00B3  00F2               	movwf	delay@data+2
  2911  00B4  3001               	movlw	1
  2912  00B5  00F1               	movwf	delay@data+1
  2913  00B6  3090               	movlw	144
  2914  00B7  00F0               	movwf	delay@data
  2915  00B8  120A  158A  27D4  120A  118A  	fcall	_delay
  2916                           
  2917                           ;PR25.c: 304: e_pulse();
  2918  00BD  120A  118A  20D8   	fcall	_e_pulse
  2919  00C0  0008               	return
  2920  00C1                     __end_of_send_config:	
  2921                           
  2922                           	psect	text10
  2923  00D8                     __ptext10:	
  2924 ;; *************** function _e_pulse *****************
  2925 ;; Defined at:
  2926 ;;		line 369 in file "../../Source file/PR25.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;		None               void
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2940 ;;      Params:         0       0       0       0       0
  2941 ;;      Locals:         0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0
  2943 ;;      Totals:         0       0       0       0       0
  2944 ;;Total ram usage:        0 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    1
  2947 ;; This function calls:
  2948 ;;		_delay
  2949 ;; This function is called by:
  2950 ;;		_send_config
  2951 ;;		_send_char
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _e_pulse
  2957  00D8                     _e_pulse:	
  2958                           
  2959                           ;PR25.c: 371: RC5=1;
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _e_pulse: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2963  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2964  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2965  00DA  1687               	bsf	7,5	;volatile
  2966                           
  2967                           ;PR25.c: 372: delay(300);
  2968  00DB  3000               	movlw	0
  2969  00DC  00F3               	movwf	delay@data+3
  2970  00DD  3000               	movlw	0
  2971  00DE  00F2               	movwf	delay@data+2
  2972  00DF  3001               	movlw	1
  2973  00E0  00F1               	movwf	delay@data+1
  2974  00E1  302C               	movlw	44
  2975  00E2  00F0               	movwf	delay@data
  2976  00E3  120A  158A  27D4  120A  118A  	fcall	_delay
  2977                           
  2978                           ;PR25.c: 373: RC5=0;
  2979  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  2980  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  2981  00EA  1287               	bcf	7,5	;volatile
  2982                           
  2983                           ;PR25.c: 374: delay(300);
  2984  00EB  3000               	movlw	0
  2985  00EC  00F3               	movwf	delay@data+3
  2986  00ED  3000               	movlw	0
  2987  00EE  00F2               	movwf	delay@data+2
  2988  00EF  3001               	movlw	1
  2989  00F0  00F1               	movwf	delay@data+1
  2990  00F1  302C               	movlw	44
  2991  00F2  00F0               	movwf	delay@data
  2992  00F3  120A  158A  27D4   	fcall	_delay
  2993  00F6  0008               	return
  2994  00F7                     __end_of_e_pulse:	
  2995                           
  2996                           	psect	text11
  2997  0FD4                     __ptext11:	
  2998 ;; *************** function _delay *****************
  2999 ;; Defined at:
  3000 ;;		line 293 in file "../../Source file/PR25.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  data            4    0[COMMON] unsigned long 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  i               2    4[COMMON] int 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;		None               void
  3007 ;; Registers used:
  3008 ;;		wreg, btemp+1
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         4       0       0       0       0
  3015 ;;      Locals:         2       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0
  3017 ;;      Totals:         6       0       0       0       0
  3018 ;;Total ram usage:        6 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_main
  3024 ;;		_init
  3025 ;;		_send_config
  3026 ;;		_send_char
  3027 ;;		_e_pulse
  3028 ;;		_lcd_clr
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function _delay
  3034  0FD4                     _delay:	
  3035                           
  3036                           ;PR25.c: 295: int i;
  3037                           ;PR25.c: 296: for( i = data; i>0; i--);
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _delay: [wreg+btemp+1]
  3041  0FD4  0871               	movf	delay@data+1,w
  3042  0FD5  00F5               	movwf	delay@i+1
  3043  0FD6  0870               	movf	delay@data,w
  3044  0FD7  00F4               	movwf	delay@i
  3045  0FD8                     L2:	
  3046  0FD8  0875               	movf	delay@i+1,w
  3047  0FD9  3A80               	xorlw	128
  3048  0FDA  00FF               	movwf	127
  3049  0FDB  3080               	movlw	128
  3050  0FDC  027F               	subwf	127,w
  3051  0FDD  1D03               	skipz
  3052  0FDE  2FE1               	goto	u795
  3053  0FDF  3001               	movlw	1
  3054  0FE0  0274               	subwf	delay@i,w
  3055  0FE1                     u795:	
  3056  0FE1  1C03               	btfss	3,0
  3057  0FE2  0008               	return
  3058  0FE3  30FF               	movlw	255
  3059  0FE4  07F4               	addwf	delay@i,f
  3060  0FE5  1803               	skipnc
  3061  0FE6  0AF5               	incf	delay@i+1,f
  3062  0FE7  30FF               	movlw	255
  3063  0FE8  07F5               	addwf	delay@i+1,f
  3064  0FE9  2FD8               	goto	L2
  3065  0FEA                     __end_of_delay:	
  3066  007E                     btemp	set	126	;btemp
  3067  007E                     wtemp	set	126
  3068  007E                     wtemp0	set	126
  3069  0080                     wtemp1	set	128
  3070  0082                     wtemp2	set	130
  3071  0084                     wtemp3	set	132
  3072  0086                     wtemp4	set	134
  3073  0088                     wtemp5	set	136
  3074  007F                     wtemp6	set	127
  3075  007E                     ttemp	set	126
  3076  007E                     ttemp0	set	126
  3077  0081                     ttemp1	set	129
  3078  0084                     ttemp2	set	132
  3079  0087                     ttemp3	set	135
  3080  007F                     ttemp4	set	127
  3081  007E                     ltemp	set	126
  3082  007E                     ltemp0	set	126
  3083  0082                     ltemp1	set	130
  3084  0086                     ltemp2	set	134
  3085  0080                     ltemp3	set	128


Data Sizes:
    Strings     154
    Constant    0
    Data        6
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      57
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    send_string@s	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_14(CODE[16]), STR_13(CODE[8]), STR_12(CODE[15]), STR_11(CODE[8]), 
		 -> STR_10(CODE[14]), STR_9(CODE[15]), STR_8(CODE[18]), STR_7(CODE[8]), 
		 -> STR_6(CODE[16]), STR_5(CODE[17]), STR_4(CODE[14]), STR_3(CODE[15]), 
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _send_string->_send_char
    _send_dec->___lldiv
    _send_char->_delay
    _lcd_goto->_send_config
    _lcd_clr->_send_config
    _init->_send_config
    _send_config->_delay
    _e_pulse->_delay

Critical Paths under _main in BANK0

    _main->_send_dec

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   13662
                                              5 BANK0     46    46      0
                              _delay
                               _init
                            _lcd_clr
                           _lcd_goto
                           _send_dec
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          2     2      0    1663
                                              7 COMMON     2     2      0
                          _send_char
 ---------------------------------------------------------------------------------
 (1) _send_dec                                             5     0      5    4965
                                              0 BANK0      5     0      5
                            ___lldiv
                            ___llmod
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0    1218
                                              6 COMMON     1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8    1219
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8    1116
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0    1307
                                              7 COMMON     2     2      0
                        _send_config
 ---------------------------------------------------------------------------------
 (1) _lcd_clr                                              0     0      0    1816
                              _delay
                        _send_config
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    1816
                              _delay
                        _send_config
 ---------------------------------------------------------------------------------
 (2) _send_config                                          1     1      0    1218
                                              6 COMMON     1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (3) _e_pulse                                              0     0      0     598
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                6     2      4     598
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _init
     _delay
     _send_config
       _delay
       _e_pulse
         _delay
   _lcd_clr
     _delay
     _send_config
       _delay
       _e_pulse
         _delay
   _lcd_goto
     _send_config
       _delay
       _e_pulse
         _delay
   _send_dec
     ___lldiv
     ___llmod
     _send_char
       _delay
       _e_pulse
         _delay
   _send_string
     _send_char
       _delay
       _e_pulse
         _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     33      39       5       71.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      47      12        0.0%
ABS                  0      0      47       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Jul 13 13:02:13 2015

                      pc 0002              __CFG_CP$OFF 0000                       l70 0503  
                     l54 04F0                       l64 04F9                       l56 04ED  
                     l68 04FB                       l77 0510                       l69 0507  
                     l95 05B4                       l99 05B8                       fsr 0004  
                    l100 05C4                      l101 05C0                      l120 0637  
                    l108 05CD                      l128 0705                      l129 0759  
                    _RA0 0028                      _RA1 0029                      _RA4 002C  
                    _RC1 0039                      _RC2 003A                      _RC3 003B  
                    _RC4 003C                      _RC5 003D             __CFG_CPD$OFF 0000  
                    u825 01B0                      u915 0176                      u845 01BE  
                    u925 0187                      u855 01D3                      u865 01E5  
                    u795 0FE1                      u895 015C                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000          send_config@data 0076  
           __CFG_LVP$OFF 0000                     l1204 0FF5                     l1150 01F1  
                   l1230 027C                     l1214 00F8                     l1310 04C4  
                   l1136 01AC                     l1160 0158                     l1224 023B  
                   l1400 05B2                     l1304 04B0                     l1146 01E4  
                   l1138 01BC                     l1162 0168                     l1170 0193  
                   l1242 02FE                     l1260 03C1                     l1236 02BD  
                   l1166 0186                     l1254 0380                     l1414 05D1  
                   l1342 0514                     l1326 04E4                     l1272 0443  
                   l1248 033F                     l1504 0702                     l1440 0602  
                   l1416 05D5                     l1328 04F7                     l1344 0518  
                   l1266 0402                     l1434 05FD                     l1450 0630  
                   l1362 053E                     l1428 05E9                     l1380 0565  
                   l1356 052A                     l1550 07D0                     l1446 061F  
                   l1390 0589                     l1374 0560                     l1544 07BC  
                   l1472 068F                     l1536 07A9                     l1368 0543  
                   l1392 058E                     l1538 07B3                     l1394 0594  
                   l1386 0581                     l1478 06A3                     l1498 06EE  
                   STR_1 0086                     STR_2 0091                     STR_3 003D  
                   STR_4 0078                     STR_5 001B                     STR_6 003C  
                   STR_7 009B                     STR_8 0009                     STR_9 005B  
                   u1305 057D             __CFG_WRT$OFF 0000                     _main 046D  
                   _init 0116                     btemp 007E             lcd_goto@data 0078  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E             main@database 0044                    ?_main 0070  
                  ?_init 0070             main@convert1 0050             main@convert2 004E  
                  STR_10 006A                    STR_11 009B                    STR_12 004C  
                  STR_13 009B                    STR_14 002C            __CFG_WDTE$OFF 0000  
        __end_of___lldiv 01FA          __end_of___llmod 019C           __CFG_DEBUG$OFF 0000  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087            __CFG_PWRTE$ON 0000          __end_of_e_pulse 00F7  
        __end_of_lcd_clr 0FD4                    _delay 0FD4                    main@a 004B  
                  main@b 004D                    main@i 0052           __CFG_BOREN$OFF 0000  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07D8             __end_of_main 07D8             __end_of_init 0150  
                 ??_main 0025                   ??_init 0077                   ?_delay 0070  
           ?_send_config 0070                   _ADCON1 009F         ___llmod@dividend 0074  
           ?_send_string 0070         __end_of_lcd_goto 1000                ??___lldiv 0078  
              ??___llmod 0078                   delay@i 0074                ??_e_pulse 0076  
              ??_lcd_clr 0077         __end_of_send_dec 046D  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 00A4            __end_of_delay 0FEA  
                ??_delay 0074               __pmaintext 046D       __size_of_send_char 0017  
              ?_lcd_goto 0070               __stringtab 0003     __size_of_send_config 0017  
   __size_of_send_string 001F                ?_send_dec 0020                  ___lldiv 019C  
                ___llmod 0150                  _e_pulse 00D8                  __ptext1 00F7  
                __ptext2 01FA                  __ptext3 00C1                  __ptext4 0150  
                __ptext5 019C                  __ptext6 0FEA                  __ptext7 0FC2  
                __ptext8 0116                  __ptext9 00AA                  _lcd_clr 0FC2  
                main@id1 0049                  main@id2 0045               ??_lcd_goto 0077  
   end_of_initialization 07FC        __end_of_send_char 00D8          ___lldiv@divisor 0070  
             ??_send_dec 007E          ___lldiv@counter 007D            send_char@data 0076  
             main@repeat 0051      start_initialization 07D8          ___llmod@divisor 0070  
        ___llmod@counter 0079              __pdataBANK0 0053                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_lcd_goto 0016        __size_of_send_dec 0273  
               ?___lldiv 0070                 ?___llmod 0070                 ?_e_pulse 0070  
              __pstrings 0003                 ?_lcd_clr 0070            ??_send_config 0076  
         __size_of_delay 0016                delay@data 0070            ??_send_string 0077  
              _send_char 00C1             send_dec@data 0020                main@F1015 0057  
              main@F1017 0053              __stringbase 0008      __end_of_send_config 00C1  
             ?_send_char 0070             send_string@s 0078      __end_of_send_string 0116  
       __size_of___lldiv 005E         __size_of___llmod 004C       __end_of__stringtab 0009  
       __size_of_e_pulse 001F         __size_of_lcd_clr 0012                 __ptext10 00D8  
               __ptext11 0FD4                 _lcd_goto 0FEA            __size_of_main 036B  
          __size_of_init 003A                 _send_dec 01FA          send_dec@num_dig 0024  
               main@data 002A                 main@mode 004C              _send_config 00AA  
            _send_string 00F7         ___lldiv@dividend 0074              ??_send_char 0076  
              stringcode 0003         ___lldiv@quotient 0079                 stringdir 0003  
               stringtab 0003  
