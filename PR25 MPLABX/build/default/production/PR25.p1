Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"36 PR25.c
[v _init `(v ~T0 0 ef ]
"43
[v _lcd_clr `(v ~T0 0 ef ]
"1061 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _RC4 `Vb ~T0 0 e@60 ]
"42 PR25.c
[v _lcd_goto `(v ~T0 0 ef1`uc ]
"44
[v _send_string `(v ~T0 0 ef1`*Cuc ]
"37
[v _delay `(v ~T0 0 ef1`ul ]
"1058 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _RC1 `Vb ~T0 0 e@57 ]
"1059
[v _RC2 `Vb ~T0 0 e@58 ]
"1045
[v _RA4 `Vb ~T0 0 e@44 ]
"1042
[v _RA1 `Vb ~T0 0 e@41 ]
"1060
[v _RC3 `Vb ~T0 0 e@59 ]
"40 PR25.c
[v _send_dec `(v ~T0 0 ef2`ul`uc ]
"873 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _ADCON1 `Vuc ~T0 0 e@159 ]
"598
[v _TRISA `Vuc ~T0 0 e@133 ]
"615
[v _TRISB `Vuc ~T0 0 e@134 ]
"634
[v _TRISC `Vuc ~T0 0 e@135 ]
"38 PR25.c
[v _send_config `(v ~T0 0 ef1`uc ]
"1041 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _RA0 `Vb ~T0 0 e@40 ]
"184
[v _PORTB `Vuc ~T0 0 e@6 ]
"41 PR25.c
[v _e_pulse `(v ~T0 0 ef ]
"1062 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _RC5 `Vb ~T0 0 e@61 ]
[; ;pic16f876a.h: 104: extern volatile unsigned char INDF @ 0x000;
[; ;pic16f876a.h: 106: extern volatile union {
[; ;pic16f876a.h: 107: struct {
[; ;pic16f876a.h: 108: unsigned INDF :8;
[; ;pic16f876a.h: 109: };
[; ;pic16f876a.h: 110: } INDFbits @ 0x000;
[; ;pic16f876a.h: 113: extern volatile unsigned char TMR0 @ 0x001;
[; ;pic16f876a.h: 115: extern volatile union {
[; ;pic16f876a.h: 116: struct {
[; ;pic16f876a.h: 117: unsigned TMR0 :8;
[; ;pic16f876a.h: 118: };
[; ;pic16f876a.h: 119: } TMR0bits @ 0x001;
[; ;pic16f876a.h: 122: extern volatile unsigned char PCL @ 0x002;
[; ;pic16f876a.h: 124: extern volatile union {
[; ;pic16f876a.h: 125: struct {
[; ;pic16f876a.h: 126: unsigned PCL :8;
[; ;pic16f876a.h: 127: };
[; ;pic16f876a.h: 128: } PCLbits @ 0x002;
[; ;pic16f876a.h: 131: extern volatile unsigned char STATUS @ 0x003;
[; ;pic16f876a.h: 133: extern volatile union {
[; ;pic16f876a.h: 134: struct {
[; ;pic16f876a.h: 135: unsigned C :1;
[; ;pic16f876a.h: 136: unsigned DC :1;
[; ;pic16f876a.h: 137: unsigned Z :1;
[; ;pic16f876a.h: 138: unsigned nPD :1;
[; ;pic16f876a.h: 139: unsigned nTO :1;
[; ;pic16f876a.h: 140: unsigned RP :2;
[; ;pic16f876a.h: 141: unsigned IRP :1;
[; ;pic16f876a.h: 142: };
[; ;pic16f876a.h: 143: struct {
[; ;pic16f876a.h: 144: unsigned :5;
[; ;pic16f876a.h: 145: unsigned RP0 :1;
[; ;pic16f876a.h: 146: unsigned RP1 :1;
[; ;pic16f876a.h: 147: };
[; ;pic16f876a.h: 148: struct {
[; ;pic16f876a.h: 149: unsigned CARRY :1;
[; ;pic16f876a.h: 150: };
[; ;pic16f876a.h: 151: struct {
[; ;pic16f876a.h: 152: unsigned :2;
[; ;pic16f876a.h: 153: unsigned ZERO :1;
[; ;pic16f876a.h: 154: };
[; ;pic16f876a.h: 155: } STATUSbits @ 0x003;
[; ;pic16f876a.h: 158: extern volatile unsigned char FSR @ 0x004;
[; ;pic16f876a.h: 160: extern volatile union {
[; ;pic16f876a.h: 161: struct {
[; ;pic16f876a.h: 162: unsigned FSR :8;
[; ;pic16f876a.h: 163: };
[; ;pic16f876a.h: 164: } FSRbits @ 0x004;
[; ;pic16f876a.h: 167: extern volatile unsigned char PORTA @ 0x005;
[; ;pic16f876a.h: 169: extern volatile union {
[; ;pic16f876a.h: 170: struct {
[; ;pic16f876a.h: 171: unsigned RA0 :1;
[; ;pic16f876a.h: 172: unsigned RA1 :1;
[; ;pic16f876a.h: 173: unsigned RA2 :1;
[; ;pic16f876a.h: 174: unsigned RA3 :1;
[; ;pic16f876a.h: 175: unsigned RA4 :1;
[; ;pic16f876a.h: 176: unsigned RA5 :1;
[; ;pic16f876a.h: 177: };
[; ;pic16f876a.h: 178: struct {
[; ;pic16f876a.h: 179: unsigned RA :8;
[; ;pic16f876a.h: 180: };
[; ;pic16f876a.h: 181: } PORTAbits @ 0x005;
[; ;pic16f876a.h: 184: extern volatile unsigned char PORTB @ 0x006;
[; ;pic16f876a.h: 186: extern volatile union {
[; ;pic16f876a.h: 187: struct {
[; ;pic16f876a.h: 188: unsigned RB0 :1;
[; ;pic16f876a.h: 189: unsigned RB1 :1;
[; ;pic16f876a.h: 190: unsigned RB2 :1;
[; ;pic16f876a.h: 191: unsigned RB3 :1;
[; ;pic16f876a.h: 192: unsigned RB4 :1;
[; ;pic16f876a.h: 193: unsigned RB5 :1;
[; ;pic16f876a.h: 194: unsigned RB6 :1;
[; ;pic16f876a.h: 195: unsigned RB7 :1;
[; ;pic16f876a.h: 196: };
[; ;pic16f876a.h: 197: struct {
[; ;pic16f876a.h: 198: unsigned RB :8;
[; ;pic16f876a.h: 199: };
[; ;pic16f876a.h: 200: } PORTBbits @ 0x006;
[; ;pic16f876a.h: 203: extern volatile unsigned char PORTC @ 0x007;
[; ;pic16f876a.h: 205: extern volatile union {
[; ;pic16f876a.h: 206: struct {
[; ;pic16f876a.h: 207: unsigned RC0 :1;
[; ;pic16f876a.h: 208: unsigned RC1 :1;
[; ;pic16f876a.h: 209: unsigned RC2 :1;
[; ;pic16f876a.h: 210: unsigned RC3 :1;
[; ;pic16f876a.h: 211: unsigned RC4 :1;
[; ;pic16f876a.h: 212: unsigned RC5 :1;
[; ;pic16f876a.h: 213: unsigned RC6 :1;
[; ;pic16f876a.h: 214: unsigned RC7 :1;
[; ;pic16f876a.h: 215: };
[; ;pic16f876a.h: 216: struct {
[; ;pic16f876a.h: 217: unsigned RC :8;
[; ;pic16f876a.h: 218: };
[; ;pic16f876a.h: 219: } PORTCbits @ 0x007;
[; ;pic16f876a.h: 222: extern volatile unsigned char PCLATH @ 0x00A;
[; ;pic16f876a.h: 224: extern volatile union {
[; ;pic16f876a.h: 225: struct {
[; ;pic16f876a.h: 226: unsigned PCLATH :5;
[; ;pic16f876a.h: 227: };
[; ;pic16f876a.h: 228: } PCLATHbits @ 0x00A;
[; ;pic16f876a.h: 231: extern volatile unsigned char INTCON @ 0x00B;
[; ;pic16f876a.h: 233: extern volatile union {
[; ;pic16f876a.h: 234: struct {
[; ;pic16f876a.h: 235: unsigned RBIF :1;
[; ;pic16f876a.h: 236: unsigned INTF :1;
[; ;pic16f876a.h: 237: unsigned TMR0IF :1;
[; ;pic16f876a.h: 238: unsigned RBIE :1;
[; ;pic16f876a.h: 239: unsigned INTE :1;
[; ;pic16f876a.h: 240: unsigned TMR0IE :1;
[; ;pic16f876a.h: 241: unsigned PEIE :1;
[; ;pic16f876a.h: 242: unsigned GIE :1;
[; ;pic16f876a.h: 243: };
[; ;pic16f876a.h: 244: struct {
[; ;pic16f876a.h: 245: unsigned :2;
[; ;pic16f876a.h: 246: unsigned T0IF :1;
[; ;pic16f876a.h: 247: unsigned :2;
[; ;pic16f876a.h: 248: unsigned T0IE :1;
[; ;pic16f876a.h: 249: };
[; ;pic16f876a.h: 250: } INTCONbits @ 0x00B;
[; ;pic16f876a.h: 253: extern volatile unsigned char PIR1 @ 0x00C;
[; ;pic16f876a.h: 255: extern volatile union {
[; ;pic16f876a.h: 256: struct {
[; ;pic16f876a.h: 257: unsigned TMR1IF :1;
[; ;pic16f876a.h: 258: unsigned TMR2IF :1;
[; ;pic16f876a.h: 259: unsigned CCP1IF :1;
[; ;pic16f876a.h: 260: unsigned SSPIF :1;
[; ;pic16f876a.h: 261: unsigned TXIF :1;
[; ;pic16f876a.h: 262: unsigned RCIF :1;
[; ;pic16f876a.h: 263: unsigned ADIF :1;
[; ;pic16f876a.h: 264: };
[; ;pic16f876a.h: 265: struct {
[; ;pic16f876a.h: 266: unsigned TMR1IF :1;
[; ;pic16f876a.h: 267: unsigned TMR2IF :1;
[; ;pic16f876a.h: 268: unsigned CCP1IF :1;
[; ;pic16f876a.h: 269: unsigned SSPIF :1;
[; ;pic16f876a.h: 270: unsigned :2;
[; ;pic16f876a.h: 271: unsigned ADIF :1;
[; ;pic16f876a.h: 272: };
[; ;pic16f876a.h: 273: } PIR1bits @ 0x00C;
[; ;pic16f876a.h: 276: extern volatile unsigned char PIR2 @ 0x00D;
[; ;pic16f876a.h: 278: extern volatile union {
[; ;pic16f876a.h: 279: struct {
[; ;pic16f876a.h: 280: unsigned CCP2IF :1;
[; ;pic16f876a.h: 281: unsigned :2;
[; ;pic16f876a.h: 282: unsigned BCLIF :1;
[; ;pic16f876a.h: 283: unsigned EEIF :1;
[; ;pic16f876a.h: 284: unsigned :1;
[; ;pic16f876a.h: 285: unsigned CMIF :1;
[; ;pic16f876a.h: 286: };
[; ;pic16f876a.h: 287: } PIR2bits @ 0x00D;
[; ;pic16f876a.h: 290: extern volatile unsigned short TMR1 @ 0x00E;
[; ;pic16f876a.h: 292: extern volatile union {
[; ;pic16f876a.h: 293: struct {
[; ;pic16f876a.h: 294: unsigned TMR1 :16;
[; ;pic16f876a.h: 295: };
[; ;pic16f876a.h: 296: } TMR1bits @ 0x00E;
[; ;pic16f876a.h: 299: extern volatile unsigned char TMR1L @ 0x00E;
[; ;pic16f876a.h: 301: extern volatile union {
[; ;pic16f876a.h: 302: struct {
[; ;pic16f876a.h: 303: unsigned TMR1L :8;
[; ;pic16f876a.h: 304: };
[; ;pic16f876a.h: 305: } TMR1Lbits @ 0x00E;
[; ;pic16f876a.h: 308: extern volatile unsigned char TMR1H @ 0x00F;
[; ;pic16f876a.h: 310: extern volatile union {
[; ;pic16f876a.h: 311: struct {
[; ;pic16f876a.h: 312: unsigned TMR1H :8;
[; ;pic16f876a.h: 313: };
[; ;pic16f876a.h: 314: } TMR1Hbits @ 0x00F;
[; ;pic16f876a.h: 317: extern volatile unsigned char T1CON @ 0x010;
[; ;pic16f876a.h: 319: extern volatile union {
[; ;pic16f876a.h: 320: struct {
[; ;pic16f876a.h: 321: unsigned TMR1ON :1;
[; ;pic16f876a.h: 322: unsigned TMR1CS :1;
[; ;pic16f876a.h: 323: unsigned nT1SYNC :1;
[; ;pic16f876a.h: 324: unsigned T1OSCEN :1;
[; ;pic16f876a.h: 325: unsigned T1CKPS :2;
[; ;pic16f876a.h: 326: };
[; ;pic16f876a.h: 327: struct {
[; ;pic16f876a.h: 328: unsigned :2;
[; ;pic16f876a.h: 329: unsigned T1SYNC :1;
[; ;pic16f876a.h: 330: unsigned :1;
[; ;pic16f876a.h: 331: unsigned T1CKPS0 :1;
[; ;pic16f876a.h: 332: unsigned T1CKPS1 :1;
[; ;pic16f876a.h: 333: };
[; ;pic16f876a.h: 334: struct {
[; ;pic16f876a.h: 335: unsigned :2;
[; ;pic16f876a.h: 336: unsigned T1INSYNC :1;
[; ;pic16f876a.h: 337: };
[; ;pic16f876a.h: 338: } T1CONbits @ 0x010;
[; ;pic16f876a.h: 341: extern volatile unsigned char TMR2 @ 0x011;
[; ;pic16f876a.h: 343: extern volatile union {
[; ;pic16f876a.h: 344: struct {
[; ;pic16f876a.h: 345: unsigned TMR2 :8;
[; ;pic16f876a.h: 346: };
[; ;pic16f876a.h: 347: } TMR2bits @ 0x011;
[; ;pic16f876a.h: 350: extern volatile unsigned char T2CON @ 0x012;
[; ;pic16f876a.h: 352: extern volatile union {
[; ;pic16f876a.h: 353: struct {
[; ;pic16f876a.h: 354: unsigned T2CKPS :2;
[; ;pic16f876a.h: 355: unsigned TMR2ON :1;
[; ;pic16f876a.h: 356: unsigned TOUTPS :4;
[; ;pic16f876a.h: 357: };
[; ;pic16f876a.h: 358: struct {
[; ;pic16f876a.h: 359: unsigned T2CKPS0 :1;
[; ;pic16f876a.h: 360: unsigned T2CKPS1 :1;
[; ;pic16f876a.h: 361: unsigned :1;
[; ;pic16f876a.h: 362: unsigned TOUTPS0 :1;
[; ;pic16f876a.h: 363: unsigned TOUTPS1 :1;
[; ;pic16f876a.h: 364: unsigned TOUTPS2 :1;
[; ;pic16f876a.h: 365: unsigned TOUTPS3 :1;
[; ;pic16f876a.h: 366: };
[; ;pic16f876a.h: 367: } T2CONbits @ 0x012;
[; ;pic16f876a.h: 370: extern volatile unsigned char SSPBUF @ 0x013;
[; ;pic16f876a.h: 372: extern volatile union {
[; ;pic16f876a.h: 373: struct {
[; ;pic16f876a.h: 374: unsigned SSPBUF :8;
[; ;pic16f876a.h: 375: };
[; ;pic16f876a.h: 376: } SSPBUFbits @ 0x013;
[; ;pic16f876a.h: 379: extern volatile unsigned char SSPCON @ 0x014;
[; ;pic16f876a.h: 381: extern volatile union {
[; ;pic16f876a.h: 382: struct {
[; ;pic16f876a.h: 383: unsigned SSPM :4;
[; ;pic16f876a.h: 384: unsigned CKP :1;
[; ;pic16f876a.h: 385: unsigned SSPEN :1;
[; ;pic16f876a.h: 386: unsigned SSPOV :1;
[; ;pic16f876a.h: 387: unsigned WCOL :1;
[; ;pic16f876a.h: 388: };
[; ;pic16f876a.h: 389: struct {
[; ;pic16f876a.h: 390: unsigned SSPM0 :1;
[; ;pic16f876a.h: 391: unsigned SSPM1 :1;
[; ;pic16f876a.h: 392: unsigned SSPM2 :1;
[; ;pic16f876a.h: 393: unsigned SSPM3 :1;
[; ;pic16f876a.h: 394: };
[; ;pic16f876a.h: 395: } SSPCONbits @ 0x014;
[; ;pic16f876a.h: 398: extern volatile unsigned short CCPR1 @ 0x015;
[; ;pic16f876a.h: 400: extern volatile union {
[; ;pic16f876a.h: 401: struct {
[; ;pic16f876a.h: 402: unsigned CCPR1 :16;
[; ;pic16f876a.h: 403: };
[; ;pic16f876a.h: 404: } CCPR1bits @ 0x015;
[; ;pic16f876a.h: 407: extern volatile unsigned char CCPR1L @ 0x015;
[; ;pic16f876a.h: 409: extern volatile union {
[; ;pic16f876a.h: 410: struct {
[; ;pic16f876a.h: 411: unsigned CCPR1L :8;
[; ;pic16f876a.h: 412: };
[; ;pic16f876a.h: 413: } CCPR1Lbits @ 0x015;
[; ;pic16f876a.h: 416: extern volatile unsigned char CCPR1H @ 0x016;
[; ;pic16f876a.h: 418: extern volatile union {
[; ;pic16f876a.h: 419: struct {
[; ;pic16f876a.h: 420: unsigned CCPR1H :8;
[; ;pic16f876a.h: 421: };
[; ;pic16f876a.h: 422: } CCPR1Hbits @ 0x016;
[; ;pic16f876a.h: 425: extern volatile unsigned char CCP1CON @ 0x017;
[; ;pic16f876a.h: 427: extern volatile union {
[; ;pic16f876a.h: 428: struct {
[; ;pic16f876a.h: 429: unsigned CCP1M :4;
[; ;pic16f876a.h: 430: unsigned CCP1Y :1;
[; ;pic16f876a.h: 431: unsigned CCP1X :1;
[; ;pic16f876a.h: 432: };
[; ;pic16f876a.h: 433: struct {
[; ;pic16f876a.h: 434: unsigned CCP1M0 :1;
[; ;pic16f876a.h: 435: unsigned CCP1M1 :1;
[; ;pic16f876a.h: 436: unsigned CCP1M2 :1;
[; ;pic16f876a.h: 437: unsigned CCP1M3 :1;
[; ;pic16f876a.h: 438: };
[; ;pic16f876a.h: 439: } CCP1CONbits @ 0x017;
[; ;pic16f876a.h: 442: extern volatile unsigned char RCSTA @ 0x018;
[; ;pic16f876a.h: 444: extern volatile union {
[; ;pic16f876a.h: 445: struct {
[; ;pic16f876a.h: 446: unsigned RX9D :1;
[; ;pic16f876a.h: 447: unsigned OERR :1;
[; ;pic16f876a.h: 448: unsigned FERR :1;
[; ;pic16f876a.h: 449: unsigned ADDEN :1;
[; ;pic16f876a.h: 450: unsigned CREN :1;
[; ;pic16f876a.h: 451: unsigned SREN :1;
[; ;pic16f876a.h: 452: unsigned RX9 :1;
[; ;pic16f876a.h: 453: unsigned SPEN :1;
[; ;pic16f876a.h: 454: };
[; ;pic16f876a.h: 455: struct {
[; ;pic16f876a.h: 456: unsigned RCD8 :1;
[; ;pic16f876a.h: 457: unsigned :5;
[; ;pic16f876a.h: 458: unsigned RC9 :1;
[; ;pic16f876a.h: 459: };
[; ;pic16f876a.h: 460: struct {
[; ;pic16f876a.h: 461: unsigned :6;
[; ;pic16f876a.h: 462: unsigned nRC8 :1;
[; ;pic16f876a.h: 463: };
[; ;pic16f876a.h: 464: struct {
[; ;pic16f876a.h: 465: unsigned :6;
[; ;pic16f876a.h: 466: unsigned RC8_9 :1;
[; ;pic16f876a.h: 467: };
[; ;pic16f876a.h: 468: } RCSTAbits @ 0x018;
[; ;pic16f876a.h: 471: extern volatile unsigned char TXREG @ 0x019;
[; ;pic16f876a.h: 473: extern volatile union {
[; ;pic16f876a.h: 474: struct {
[; ;pic16f876a.h: 475: unsigned TXREG :8;
[; ;pic16f876a.h: 476: };
[; ;pic16f876a.h: 477: } TXREGbits @ 0x019;
[; ;pic16f876a.h: 480: extern volatile unsigned char RCREG @ 0x01A;
[; ;pic16f876a.h: 482: extern volatile union {
[; ;pic16f876a.h: 483: struct {
[; ;pic16f876a.h: 484: unsigned RCREG :8;
[; ;pic16f876a.h: 485: };
[; ;pic16f876a.h: 486: } RCREGbits @ 0x01A;
[; ;pic16f876a.h: 489: extern volatile unsigned short CCPR2 @ 0x01B;
[; ;pic16f876a.h: 491: extern volatile union {
[; ;pic16f876a.h: 492: struct {
[; ;pic16f876a.h: 493: unsigned CCPR2 :16;
[; ;pic16f876a.h: 494: };
[; ;pic16f876a.h: 495: } CCPR2bits @ 0x01B;
[; ;pic16f876a.h: 498: extern volatile unsigned char CCPR2L @ 0x01B;
[; ;pic16f876a.h: 500: extern volatile union {
[; ;pic16f876a.h: 501: struct {
[; ;pic16f876a.h: 502: unsigned CCPR2L :8;
[; ;pic16f876a.h: 503: };
[; ;pic16f876a.h: 504: } CCPR2Lbits @ 0x01B;
[; ;pic16f876a.h: 507: extern volatile unsigned char CCPR2H @ 0x01C;
[; ;pic16f876a.h: 509: extern volatile union {
[; ;pic16f876a.h: 510: struct {
[; ;pic16f876a.h: 511: unsigned CCPR2H :8;
[; ;pic16f876a.h: 512: };
[; ;pic16f876a.h: 513: } CCPR2Hbits @ 0x01C;
[; ;pic16f876a.h: 516: extern volatile unsigned char CCP2CON @ 0x01D;
[; ;pic16f876a.h: 518: extern volatile union {
[; ;pic16f876a.h: 519: struct {
[; ;pic16f876a.h: 520: unsigned CCP2M :4;
[; ;pic16f876a.h: 521: unsigned CCP2Y :1;
[; ;pic16f876a.h: 522: unsigned CCP2X :1;
[; ;pic16f876a.h: 523: };
[; ;pic16f876a.h: 524: struct {
[; ;pic16f876a.h: 525: unsigned CCP2M0 :1;
[; ;pic16f876a.h: 526: unsigned CCP2M1 :1;
[; ;pic16f876a.h: 527: unsigned CCP2M2 :1;
[; ;pic16f876a.h: 528: unsigned CCP2M3 :1;
[; ;pic16f876a.h: 529: };
[; ;pic16f876a.h: 530: } CCP2CONbits @ 0x01D;
[; ;pic16f876a.h: 533: extern volatile unsigned char ADRESH @ 0x01E;
[; ;pic16f876a.h: 535: extern volatile union {
[; ;pic16f876a.h: 536: struct {
[; ;pic16f876a.h: 537: unsigned ADRESH :8;
[; ;pic16f876a.h: 538: };
[; ;pic16f876a.h: 539: } ADRESHbits @ 0x01E;
[; ;pic16f876a.h: 542: extern volatile unsigned char ADCON0 @ 0x01F;
[; ;pic16f876a.h: 544: extern volatile union {
[; ;pic16f876a.h: 545: struct {
[; ;pic16f876a.h: 546: unsigned ADON :1;
[; ;pic16f876a.h: 547: unsigned :1;
[; ;pic16f876a.h: 548: unsigned GO_nDONE :1;
[; ;pic16f876a.h: 549: unsigned CHS :3;
[; ;pic16f876a.h: 550: unsigned ADCS :2;
[; ;pic16f876a.h: 551: };
[; ;pic16f876a.h: 552: struct {
[; ;pic16f876a.h: 553: unsigned ADON :1;
[; ;pic16f876a.h: 554: unsigned :1;
[; ;pic16f876a.h: 555: unsigned GO_nDONE :1;
[; ;pic16f876a.h: 556: unsigned CHS :3;
[; ;pic16f876a.h: 557: unsigned ADCS :2;
[; ;pic16f876a.h: 558: };
[; ;pic16f876a.h: 559: struct {
[; ;pic16f876a.h: 560: unsigned :2;
[; ;pic16f876a.h: 561: unsigned GO :1;
[; ;pic16f876a.h: 562: unsigned CHS0 :1;
[; ;pic16f876a.h: 563: unsigned CHS1 :1;
[; ;pic16f876a.h: 564: unsigned CHS2 :1;
[; ;pic16f876a.h: 565: unsigned ADCS0 :1;
[; ;pic16f876a.h: 566: unsigned ADCS1 :1;
[; ;pic16f876a.h: 567: };
[; ;pic16f876a.h: 568: struct {
[; ;pic16f876a.h: 569: unsigned :2;
[; ;pic16f876a.h: 570: unsigned nDONE :1;
[; ;pic16f876a.h: 571: };
[; ;pic16f876a.h: 572: struct {
[; ;pic16f876a.h: 573: unsigned :2;
[; ;pic16f876a.h: 574: unsigned GO_DONE :1;
[; ;pic16f876a.h: 575: };
[; ;pic16f876a.h: 576: } ADCON0bits @ 0x01F;
[; ;pic16f876a.h: 579: extern volatile unsigned char OPTION_REG @ 0x081;
[; ;pic16f876a.h: 581: extern volatile union {
[; ;pic16f876a.h: 582: struct {
[; ;pic16f876a.h: 583: unsigned PS :3;
[; ;pic16f876a.h: 584: unsigned PSA :1;
[; ;pic16f876a.h: 585: unsigned T0SE :1;
[; ;pic16f876a.h: 586: unsigned T0CS :1;
[; ;pic16f876a.h: 587: unsigned INTEDG :1;
[; ;pic16f876a.h: 588: unsigned nRBPU :1;
[; ;pic16f876a.h: 589: };
[; ;pic16f876a.h: 590: struct {
[; ;pic16f876a.h: 591: unsigned PS0 :1;
[; ;pic16f876a.h: 592: unsigned PS1 :1;
[; ;pic16f876a.h: 593: unsigned PS2 :1;
[; ;pic16f876a.h: 594: };
[; ;pic16f876a.h: 595: } OPTION_REGbits @ 0x081;
[; ;pic16f876a.h: 598: extern volatile unsigned char TRISA @ 0x085;
[; ;pic16f876a.h: 600: extern volatile union {
[; ;pic16f876a.h: 601: struct {
[; ;pic16f876a.h: 602: unsigned TRISA0 :1;
[; ;pic16f876a.h: 603: unsigned TRISA1 :1;
[; ;pic16f876a.h: 604: unsigned TRISA2 :1;
[; ;pic16f876a.h: 605: unsigned TRISA3 :1;
[; ;pic16f876a.h: 606: unsigned TRISA4 :1;
[; ;pic16f876a.h: 607: unsigned TRISA5 :1;
[; ;pic16f876a.h: 608: };
[; ;pic16f876a.h: 609: struct {
[; ;pic16f876a.h: 610: unsigned TRISA :8;
[; ;pic16f876a.h: 611: };
[; ;pic16f876a.h: 612: } TRISAbits @ 0x085;
[; ;pic16f876a.h: 615: extern volatile unsigned char TRISB @ 0x086;
[; ;pic16f876a.h: 617: extern volatile union {
[; ;pic16f876a.h: 618: struct {
[; ;pic16f876a.h: 619: unsigned TRISB0 :1;
[; ;pic16f876a.h: 620: unsigned TRISB1 :1;
[; ;pic16f876a.h: 621: unsigned TRISB2 :1;
[; ;pic16f876a.h: 622: unsigned TRISB3 :1;
[; ;pic16f876a.h: 623: unsigned TRISB4 :1;
[; ;pic16f876a.h: 624: unsigned TRISB5 :1;
[; ;pic16f876a.h: 625: unsigned TRISB6 :1;
[; ;pic16f876a.h: 626: unsigned TRISB7 :1;
[; ;pic16f876a.h: 627: };
[; ;pic16f876a.h: 628: struct {
[; ;pic16f876a.h: 629: unsigned TRISB :8;
[; ;pic16f876a.h: 630: };
[; ;pic16f876a.h: 631: } TRISBbits @ 0x086;
[; ;pic16f876a.h: 634: extern volatile unsigned char TRISC @ 0x087;
[; ;pic16f876a.h: 636: extern volatile union {
[; ;pic16f876a.h: 637: struct {
[; ;pic16f876a.h: 638: unsigned TRISC0 :1;
[; ;pic16f876a.h: 639: unsigned TRISC1 :1;
[; ;pic16f876a.h: 640: unsigned TRISC2 :1;
[; ;pic16f876a.h: 641: unsigned TRISC3 :1;
[; ;pic16f876a.h: 642: unsigned TRISC4 :1;
[; ;pic16f876a.h: 643: unsigned TRISC5 :1;
[; ;pic16f876a.h: 644: unsigned TRISC6 :1;
[; ;pic16f876a.h: 645: unsigned TRISC7 :1;
[; ;pic16f876a.h: 646: };
[; ;pic16f876a.h: 647: struct {
[; ;pic16f876a.h: 648: unsigned TRISC :8;
[; ;pic16f876a.h: 649: };
[; ;pic16f876a.h: 650: } TRISCbits @ 0x087;
[; ;pic16f876a.h: 653: extern volatile unsigned char PIE1 @ 0x08C;
[; ;pic16f876a.h: 655: extern volatile union {
[; ;pic16f876a.h: 656: struct {
[; ;pic16f876a.h: 657: unsigned TMR1IE :1;
[; ;pic16f876a.h: 658: unsigned TMR2IE :1;
[; ;pic16f876a.h: 659: unsigned CCP1IE :1;
[; ;pic16f876a.h: 660: unsigned SSPIE :1;
[; ;pic16f876a.h: 661: unsigned TXIE :1;
[; ;pic16f876a.h: 662: unsigned RCIE :1;
[; ;pic16f876a.h: 663: unsigned ADIE :1;
[; ;pic16f876a.h: 664: };
[; ;pic16f876a.h: 665: } PIE1bits @ 0x08C;
[; ;pic16f876a.h: 668: extern volatile unsigned char PIE2 @ 0x08D;
[; ;pic16f876a.h: 670: extern volatile union {
[; ;pic16f876a.h: 671: struct {
[; ;pic16f876a.h: 672: unsigned CCP2IE :1;
[; ;pic16f876a.h: 673: unsigned :2;
[; ;pic16f876a.h: 674: unsigned BCLIE :1;
[; ;pic16f876a.h: 675: unsigned EEIE :1;
[; ;pic16f876a.h: 676: unsigned :1;
[; ;pic16f876a.h: 677: unsigned CMIE :1;
[; ;pic16f876a.h: 678: };
[; ;pic16f876a.h: 679: } PIE2bits @ 0x08D;
[; ;pic16f876a.h: 682: extern volatile unsigned char PCON @ 0x08E;
[; ;pic16f876a.h: 684: extern volatile union {
[; ;pic16f876a.h: 685: struct {
[; ;pic16f876a.h: 686: unsigned nBOR :1;
[; ;pic16f876a.h: 687: unsigned nPOR :1;
[; ;pic16f876a.h: 688: };
[; ;pic16f876a.h: 689: struct {
[; ;pic16f876a.h: 690: unsigned nBO :1;
[; ;pic16f876a.h: 691: };
[; ;pic16f876a.h: 692: } PCONbits @ 0x08E;
[; ;pic16f876a.h: 695: extern volatile unsigned char SSPCON2 @ 0x091;
[; ;pic16f876a.h: 697: extern volatile union {
[; ;pic16f876a.h: 698: struct {
[; ;pic16f876a.h: 699: unsigned SEN :1;
[; ;pic16f876a.h: 700: unsigned RSEN :1;
[; ;pic16f876a.h: 701: unsigned PEN :1;
[; ;pic16f876a.h: 702: unsigned RCEN :1;
[; ;pic16f876a.h: 703: unsigned ACKEN :1;
[; ;pic16f876a.h: 704: unsigned ACKDT :1;
[; ;pic16f876a.h: 705: unsigned ACKSTAT :1;
[; ;pic16f876a.h: 706: unsigned GCEN :1;
[; ;pic16f876a.h: 707: };
[; ;pic16f876a.h: 708: } SSPCON2bits @ 0x091;
[; ;pic16f876a.h: 711: extern volatile unsigned char PR2 @ 0x092;
[; ;pic16f876a.h: 713: extern volatile union {
[; ;pic16f876a.h: 714: struct {
[; ;pic16f876a.h: 715: unsigned PR2 :8;
[; ;pic16f876a.h: 716: };
[; ;pic16f876a.h: 717: } PR2bits @ 0x092;
[; ;pic16f876a.h: 720: extern volatile unsigned char SSPADD @ 0x093;
[; ;pic16f876a.h: 722: extern volatile union {
[; ;pic16f876a.h: 723: struct {
[; ;pic16f876a.h: 724: unsigned SSPADD :8;
[; ;pic16f876a.h: 725: };
[; ;pic16f876a.h: 726: } SSPADDbits @ 0x093;
[; ;pic16f876a.h: 729: extern volatile unsigned char SSPSTAT @ 0x094;
[; ;pic16f876a.h: 731: extern volatile union {
[; ;pic16f876a.h: 732: struct {
[; ;pic16f876a.h: 733: unsigned BF :1;
[; ;pic16f876a.h: 734: unsigned UA :1;
[; ;pic16f876a.h: 735: unsigned R_nW :1;
[; ;pic16f876a.h: 736: unsigned S :1;
[; ;pic16f876a.h: 737: unsigned P :1;
[; ;pic16f876a.h: 738: unsigned D_nA :1;
[; ;pic16f876a.h: 739: unsigned CKE :1;
[; ;pic16f876a.h: 740: unsigned SMP :1;
[; ;pic16f876a.h: 741: };
[; ;pic16f876a.h: 742: struct {
[; ;pic16f876a.h: 743: unsigned BF :1;
[; ;pic16f876a.h: 744: unsigned UA :1;
[; ;pic16f876a.h: 745: unsigned R_nW :1;
[; ;pic16f876a.h: 746: unsigned S :1;
[; ;pic16f876a.h: 747: unsigned P :1;
[; ;pic16f876a.h: 748: unsigned D_nA :1;
[; ;pic16f876a.h: 749: unsigned CKE :1;
[; ;pic16f876a.h: 750: unsigned SMP :1;
[; ;pic16f876a.h: 751: };
[; ;pic16f876a.h: 752: struct {
[; ;pic16f876a.h: 753: unsigned :2;
[; ;pic16f876a.h: 754: unsigned R :1;
[; ;pic16f876a.h: 755: unsigned :2;
[; ;pic16f876a.h: 756: unsigned D :1;
[; ;pic16f876a.h: 757: };
[; ;pic16f876a.h: 758: struct {
[; ;pic16f876a.h: 759: unsigned :2;
[; ;pic16f876a.h: 760: unsigned I2C_READ :1;
[; ;pic16f876a.h: 761: unsigned I2C_START :1;
[; ;pic16f876a.h: 762: unsigned I2C_STOP :1;
[; ;pic16f876a.h: 763: unsigned I2C_DATA :1;
[; ;pic16f876a.h: 764: };
[; ;pic16f876a.h: 765: struct {
[; ;pic16f876a.h: 766: unsigned :2;
[; ;pic16f876a.h: 767: unsigned nW :1;
[; ;pic16f876a.h: 768: unsigned :2;
[; ;pic16f876a.h: 769: unsigned nA :1;
[; ;pic16f876a.h: 770: };
[; ;pic16f876a.h: 771: struct {
[; ;pic16f876a.h: 772: unsigned :2;
[; ;pic16f876a.h: 773: unsigned nWRITE :1;
[; ;pic16f876a.h: 774: unsigned :2;
[; ;pic16f876a.h: 775: unsigned nADDRESS :1;
[; ;pic16f876a.h: 776: };
[; ;pic16f876a.h: 777: struct {
[; ;pic16f876a.h: 778: unsigned :2;
[; ;pic16f876a.h: 779: unsigned R_W :1;
[; ;pic16f876a.h: 780: unsigned :2;
[; ;pic16f876a.h: 781: unsigned D_A :1;
[; ;pic16f876a.h: 782: };
[; ;pic16f876a.h: 783: struct {
[; ;pic16f876a.h: 784: unsigned :2;
[; ;pic16f876a.h: 785: unsigned READ_WRITE :1;
[; ;pic16f876a.h: 786: unsigned :2;
[; ;pic16f876a.h: 787: unsigned DATA_ADDRESS :1;
[; ;pic16f876a.h: 788: };
[; ;pic16f876a.h: 789: } SSPSTATbits @ 0x094;
[; ;pic16f876a.h: 792: extern volatile unsigned char TXSTA @ 0x098;
[; ;pic16f876a.h: 794: extern volatile union {
[; ;pic16f876a.h: 795: struct {
[; ;pic16f876a.h: 796: unsigned TX9D :1;
[; ;pic16f876a.h: 797: unsigned TRMT :1;
[; ;pic16f876a.h: 798: unsigned BRGH :1;
[; ;pic16f876a.h: 799: unsigned :1;
[; ;pic16f876a.h: 800: unsigned SYNC :1;
[; ;pic16f876a.h: 801: unsigned TXEN :1;
[; ;pic16f876a.h: 802: unsigned TX9 :1;
[; ;pic16f876a.h: 803: unsigned CSRC :1;
[; ;pic16f876a.h: 804: };
[; ;pic16f876a.h: 805: struct {
[; ;pic16f876a.h: 806: unsigned TXD8 :1;
[; ;pic16f876a.h: 807: unsigned :5;
[; ;pic16f876a.h: 808: unsigned nTX8 :1;
[; ;pic16f876a.h: 809: };
[; ;pic16f876a.h: 810: struct {
[; ;pic16f876a.h: 811: unsigned :6;
[; ;pic16f876a.h: 812: unsigned TX8_9 :1;
[; ;pic16f876a.h: 813: };
[; ;pic16f876a.h: 814: } TXSTAbits @ 0x098;
[; ;pic16f876a.h: 817: extern volatile unsigned char SPBRG @ 0x099;
[; ;pic16f876a.h: 819: extern volatile union {
[; ;pic16f876a.h: 820: struct {
[; ;pic16f876a.h: 821: unsigned SPBRG :8;
[; ;pic16f876a.h: 822: };
[; ;pic16f876a.h: 823: } SPBRGbits @ 0x099;
[; ;pic16f876a.h: 826: extern volatile unsigned char CMCON @ 0x09C;
[; ;pic16f876a.h: 828: extern volatile union {
[; ;pic16f876a.h: 829: struct {
[; ;pic16f876a.h: 830: unsigned CM :3;
[; ;pic16f876a.h: 831: unsigned CIS :1;
[; ;pic16f876a.h: 832: unsigned C1INV :1;
[; ;pic16f876a.h: 833: unsigned C2INV :1;
[; ;pic16f876a.h: 834: unsigned C1OUT :1;
[; ;pic16f876a.h: 835: unsigned C2OUT :1;
[; ;pic16f876a.h: 836: };
[; ;pic16f876a.h: 837: struct {
[; ;pic16f876a.h: 838: unsigned CM0 :1;
[; ;pic16f876a.h: 839: unsigned CM1 :1;
[; ;pic16f876a.h: 840: unsigned CM2 :1;
[; ;pic16f876a.h: 841: };
[; ;pic16f876a.h: 842: } CMCONbits @ 0x09C;
[; ;pic16f876a.h: 845: extern volatile unsigned char CVRCON @ 0x09D;
[; ;pic16f876a.h: 847: extern volatile union {
[; ;pic16f876a.h: 848: struct {
[; ;pic16f876a.h: 849: unsigned CVR :4;
[; ;pic16f876a.h: 850: unsigned :1;
[; ;pic16f876a.h: 851: unsigned CVRR :1;
[; ;pic16f876a.h: 852: unsigned CVROE :1;
[; ;pic16f876a.h: 853: unsigned CVREN :1;
[; ;pic16f876a.h: 854: };
[; ;pic16f876a.h: 855: struct {
[; ;pic16f876a.h: 856: unsigned CVR0 :1;
[; ;pic16f876a.h: 857: unsigned CVR1 :1;
[; ;pic16f876a.h: 858: unsigned CVR2 :1;
[; ;pic16f876a.h: 859: unsigned CVR3 :1;
[; ;pic16f876a.h: 860: };
[; ;pic16f876a.h: 861: } CVRCONbits @ 0x09D;
[; ;pic16f876a.h: 864: extern volatile unsigned char ADRESL @ 0x09E;
[; ;pic16f876a.h: 866: extern volatile union {
[; ;pic16f876a.h: 867: struct {
[; ;pic16f876a.h: 868: unsigned ADRESL :8;
[; ;pic16f876a.h: 869: };
[; ;pic16f876a.h: 870: } ADRESLbits @ 0x09E;
[; ;pic16f876a.h: 873: extern volatile unsigned char ADCON1 @ 0x09F;
[; ;pic16f876a.h: 875: extern volatile union {
[; ;pic16f876a.h: 876: struct {
[; ;pic16f876a.h: 877: unsigned PCFG :4;
[; ;pic16f876a.h: 878: unsigned :2;
[; ;pic16f876a.h: 879: unsigned ADCS2 :1;
[; ;pic16f876a.h: 880: unsigned ADFM :1;
[; ;pic16f876a.h: 881: };
[; ;pic16f876a.h: 882: struct {
[; ;pic16f876a.h: 883: unsigned PCFG0 :1;
[; ;pic16f876a.h: 884: unsigned PCFG1 :1;
[; ;pic16f876a.h: 885: unsigned PCFG2 :1;
[; ;pic16f876a.h: 886: unsigned PCFG3 :1;
[; ;pic16f876a.h: 887: };
[; ;pic16f876a.h: 888: } ADCON1bits @ 0x09F;
[; ;pic16f876a.h: 891: extern volatile unsigned char EEDATA @ 0x10C;
[; ;pic16f876a.h: 893: extern volatile union {
[; ;pic16f876a.h: 894: struct {
[; ;pic16f876a.h: 895: unsigned EEDATA :8;
[; ;pic16f876a.h: 896: };
[; ;pic16f876a.h: 897: } EEDATAbits @ 0x10C;
[; ;pic16f876a.h: 900: extern volatile unsigned char EEADR @ 0x10D;
[; ;pic16f876a.h: 902: extern volatile union {
[; ;pic16f876a.h: 903: struct {
[; ;pic16f876a.h: 904: unsigned EEADR :8;
[; ;pic16f876a.h: 905: };
[; ;pic16f876a.h: 906: } EEADRbits @ 0x10D;
[; ;pic16f876a.h: 909: extern volatile unsigned char EEDATH @ 0x10E;
[; ;pic16f876a.h: 911: extern volatile union {
[; ;pic16f876a.h: 912: struct {
[; ;pic16f876a.h: 913: unsigned EEDATH :6;
[; ;pic16f876a.h: 914: };
[; ;pic16f876a.h: 915: } EEDATHbits @ 0x10E;
[; ;pic16f876a.h: 918: extern volatile unsigned char EEADRH @ 0x10F;
[; ;pic16f876a.h: 920: extern volatile union {
[; ;pic16f876a.h: 921: struct {
[; ;pic16f876a.h: 922: unsigned EEADRH :5;
[; ;pic16f876a.h: 923: };
[; ;pic16f876a.h: 924: } EEADRHbits @ 0x10F;
[; ;pic16f876a.h: 927: extern volatile unsigned char EECON1 @ 0x18C;
[; ;pic16f876a.h: 929: extern volatile union {
[; ;pic16f876a.h: 930: struct {
[; ;pic16f876a.h: 931: unsigned RD :1;
[; ;pic16f876a.h: 932: unsigned WR :1;
[; ;pic16f876a.h: 933: unsigned WREN :1;
[; ;pic16f876a.h: 934: unsigned WRERR :1;
[; ;pic16f876a.h: 935: unsigned :3;
[; ;pic16f876a.h: 936: unsigned EEPGD :1;
[; ;pic16f876a.h: 937: };
[; ;pic16f876a.h: 938: } EECON1bits @ 0x18C;
[; ;pic16f876a.h: 941: extern volatile unsigned char EECON2 @ 0x18D;
[; ;pic16f876a.h: 943: extern volatile union {
[; ;pic16f876a.h: 944: struct {
[; ;pic16f876a.h: 945: unsigned EECON2 :8;
[; ;pic16f876a.h: 946: };
[; ;pic16f876a.h: 947: } EECON2bits @ 0x18D;
[; ;pic16f876a.h: 953: extern volatile bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f876a.h: 954: extern volatile bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f876a.h: 955: extern volatile bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f876a.h: 956: extern volatile bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f876a.h: 957: extern volatile bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f876a.h: 958: extern volatile bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f876a.h: 959: extern volatile bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f876a.h: 960: extern volatile bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f876a.h: 961: extern volatile bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f876a.h: 962: extern volatile bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f876a.h: 963: extern volatile bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f876a.h: 964: extern volatile bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f876a.h: 965: extern volatile bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f876a.h: 966: extern volatile bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f876a.h: 967: extern volatile bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f876a.h: 968: extern volatile bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f876a.h: 969: extern volatile bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f876a.h: 970: extern volatile bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f876a.h: 971: extern volatile bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f876a.h: 972: extern volatile bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f876a.h: 973: extern volatile bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f876a.h: 974: extern volatile bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f876a.h: 975: extern volatile bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f876a.h: 976: extern volatile bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f876a.h: 977: extern volatile bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f876a.h: 978: extern volatile bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f876a.h: 979: extern volatile bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f876a.h: 980: extern volatile bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f876a.h: 981: extern volatile bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f876a.h: 982: extern volatile bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f876a.h: 983: extern volatile bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f876a.h: 984: extern volatile bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f876a.h: 985: extern volatile bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f876a.h: 986: extern volatile bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f876a.h: 987: extern volatile bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f876a.h: 988: extern volatile bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f876a.h: 989: extern volatile bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f876a.h: 990: extern volatile bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f876a.h: 991: extern volatile bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f876a.h: 992: extern volatile bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f876a.h: 993: extern volatile bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f876a.h: 994: extern volatile bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f876a.h: 995: extern volatile bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f876a.h: 996: extern volatile bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f876a.h: 997: extern volatile bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f876a.h: 998: extern volatile bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f876a.h: 999: extern volatile bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f876a.h: 1000: extern volatile bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f876a.h: 1001: extern volatile bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f876a.h: 1002: extern volatile bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f876a.h: 1003: extern volatile bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f876a.h: 1004: extern volatile bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f876a.h: 1005: extern volatile bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f876a.h: 1006: extern volatile bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f876a.h: 1007: extern volatile bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f876a.h: 1008: extern volatile bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f876a.h: 1009: extern volatile bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1010: extern volatile bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f876a.h: 1011: extern volatile bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1012: extern volatile bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1013: extern volatile bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f876a.h: 1014: extern volatile bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f876a.h: 1015: extern volatile bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f876a.h: 1016: extern volatile bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f876a.h: 1017: extern volatile bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f876a.h: 1018: extern volatile bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f876a.h: 1019: extern volatile bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1020: extern volatile bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1021: extern volatile bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1022: extern volatile bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1023: extern volatile bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1024: extern volatile bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f876a.h: 1025: extern volatile bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f876a.h: 1026: extern volatile bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f876a.h: 1027: extern volatile bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f876a.h: 1028: extern volatile bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f876a.h: 1029: extern volatile bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f876a.h: 1030: extern volatile bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f876a.h: 1031: extern volatile bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f876a.h: 1032: extern volatile bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f876a.h: 1033: extern volatile bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f876a.h: 1034: extern volatile bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f876a.h: 1035: extern volatile bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f876a.h: 1036: extern volatile bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f876a.h: 1037: extern volatile bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f876a.h: 1038: extern volatile bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f876a.h: 1039: extern volatile bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f876a.h: 1040: extern volatile bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f876a.h: 1041: extern volatile bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f876a.h: 1042: extern volatile bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f876a.h: 1043: extern volatile bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f876a.h: 1044: extern volatile bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f876a.h: 1045: extern volatile bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f876a.h: 1046: extern volatile bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f876a.h: 1047: extern volatile bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f876a.h: 1048: extern volatile bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f876a.h: 1049: extern volatile bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f876a.h: 1050: extern volatile bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f876a.h: 1051: extern volatile bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f876a.h: 1052: extern volatile bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f876a.h: 1053: extern volatile bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f876a.h: 1054: extern volatile bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f876a.h: 1055: extern volatile bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f876a.h: 1056: extern volatile bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f876a.h: 1057: extern volatile bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f876a.h: 1058: extern volatile bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f876a.h: 1059: extern volatile bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f876a.h: 1060: extern volatile bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f876a.h: 1061: extern volatile bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f876a.h: 1062: extern volatile bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f876a.h: 1063: extern volatile bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f876a.h: 1064: extern volatile bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f876a.h: 1065: extern volatile bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1066: extern volatile bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1067: extern volatile bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f876a.h: 1068: extern volatile bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f876a.h: 1069: extern volatile bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f876a.h: 1070: extern volatile bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f876a.h: 1071: extern volatile bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f876a.h: 1072: extern volatile bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1073: extern volatile bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f876a.h: 1074: extern volatile bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f876a.h: 1075: extern volatile bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f876a.h: 1076: extern volatile bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1077: extern volatile bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f876a.h: 1078: extern volatile bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1079: extern volatile bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1080: extern volatile bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f876a.h: 1081: extern volatile bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f876a.h: 1082: extern volatile bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f876a.h: 1083: extern volatile bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f876a.h: 1084: extern volatile bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f876a.h: 1085: extern volatile bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f876a.h: 1086: extern volatile bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f876a.h: 1087: extern volatile bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f876a.h: 1088: extern volatile bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f876a.h: 1089: extern volatile bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f876a.h: 1090: extern volatile bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f876a.h: 1091: extern volatile bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f876a.h: 1092: extern volatile bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f876a.h: 1093: extern volatile bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f876a.h: 1094: extern volatile bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f876a.h: 1095: extern volatile bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f876a.h: 1096: extern volatile bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f876a.h: 1097: extern volatile bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f876a.h: 1098: extern volatile bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f876a.h: 1099: extern volatile bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 1100: extern volatile bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f876a.h: 1101: extern volatile bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 1102: extern volatile bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f876a.h: 1103: extern volatile bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f876a.h: 1104: extern volatile bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f876a.h: 1105: extern volatile bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f876a.h: 1106: extern volatile bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f876a.h: 1107: extern volatile bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f876a.h: 1108: extern volatile bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f876a.h: 1109: extern volatile bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f876a.h: 1110: extern volatile bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f876a.h: 1111: extern volatile bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f876a.h: 1112: extern volatile bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f876a.h: 1113: extern volatile bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f876a.h: 1114: extern volatile bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f876a.h: 1115: extern volatile bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f876a.h: 1116: extern volatile bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f876a.h: 1117: extern volatile bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f876a.h: 1118: extern volatile bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f876a.h: 1119: extern volatile bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f876a.h: 1120: extern volatile bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f876a.h: 1121: extern volatile bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f876a.h: 1122: extern volatile bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f876a.h: 1123: extern volatile bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f876a.h: 1124: extern volatile bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f876a.h: 1125: extern volatile bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f876a.h: 1126: extern volatile bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f876a.h: 1127: extern volatile bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f876a.h: 1128: extern volatile bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f876a.h: 1129: extern volatile bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f876a.h: 1130: extern volatile bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f876a.h: 1131: extern volatile bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f876a.h: 1132: extern volatile bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f876a.h: 1133: extern volatile bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f876a.h: 1134: extern volatile bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f876a.h: 1135: extern volatile bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f876a.h: 1136: extern volatile bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f876a.h: 1137: extern volatile bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f876a.h: 1138: extern volatile bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f876a.h: 1139: extern volatile bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f876a.h: 1140: extern volatile bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 1141: extern volatile bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 1142: extern volatile bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f876a.h: 1143: extern volatile bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f876a.h: 1144: extern volatile bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f876a.h: 1145: extern volatile bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f876a.h: 1146: extern volatile bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f876a.h: 1147: extern volatile bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f876a.h: 1148: extern volatile bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f876a.h: 1149: extern volatile bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f876a.h: 1150: extern volatile bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f876a.h: 1151: extern volatile bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f876a.h: 1152: extern volatile bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f876a.h: 1153: extern volatile bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1154: extern volatile bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1155: extern volatile bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f876a.h: 1156: extern volatile bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f876a.h: 1157: extern volatile bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1158: extern volatile bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f876a.h: 1159: extern volatile bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f876a.h: 1160: extern volatile bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f876a.h: 1161: extern volatile bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1162: extern volatile bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 1163: extern volatile bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f876a.h: 1164: extern volatile bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 1165: extern volatile bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1166: extern volatile bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void _nop(void);
[; ;pic.h: 82: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 156: extern void _delay(unsigned long);
"17 PR25.c
[; ;PR25.c: 17: asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x3F32");
[; <" 	psect config,class=CONFIG,delta=2 ;# ">
[; <" 	dw 0x3F32 ;# ">
[; ;PR25.c: 36: void init(void);
[; ;PR25.c: 37: void delay(unsigned long data);
[; ;PR25.c: 38: void send_config(unsigned char data);
[; ;PR25.c: 39: void send_char(unsigned char data);
[; ;PR25.c: 40: void send_dec(unsigned long data,unsigned char num_dig);
[; ;PR25.c: 41: void e_pulse(void);
[; ;PR25.c: 42: void lcd_goto(unsigned char data);
[; ;PR25.c: 43: void lcd_clr(void);
[; ;PR25.c: 44: void send_string(const char *s);
"50
[v _main `(v ~T0 1 ef ]
{
[; ;PR25.c: 49: void main(void)
[; ;PR25.c: 50: {
[e :U _main ]
[f ]
"51
[v _i `uc ~T0 1 a ]
[v _repeat `uc ~T0 1 a ]
[v _a `uc ~T0 1 a ]
[v _b `uc ~T0 1 a ]
[v _database `uc ~T0 1 a ]
"52
[v _data `uc ~T0 -> 26 `i a ]
"53
[v _convert1 `uc ~T0 1 a ]
[; ;PR25.c: 51: unsigned char i, repeat, a, b, database;
[; ;PR25.c: 52: unsigned char data[26];
[; ;PR25.c: 53: unsigned char convert1=0;
[e = _convert1 -> -> 0 `i `uc ]
"54
[v _convert2 `ui ~T0 1 a ]
[; ;PR25.c: 54: unsigned int convert2=0;
[e = _convert2 -> -> 0 `i `ui ]
"55
[v _mode `uc ~T0 1 a ]
[; ;PR25.c: 55: unsigned char mode=0;
[e = _mode -> -> 0 `i `uc ]
"56
[v F1157 `uc ~T0 -> 2 `i s ]
[i F1157
:U ..
-> -> 127 `i `uc
-> -> 0 `i `uc
..
]
[v _id1 `uc ~T0 -> 2 `i a ]
[; ;PR25.c: 56: unsigned char id1[2]={127,0};
[e = _id1 F1157 ]
"57
[v F1159 `ui ~T0 -> 2 `i s ]
[i F1159
:U ..
-> -> 22449 `i `ui
-> -> 0 `i `ui
..
]
[v _id2 `ui ~T0 -> 2 `i a ]
[; ;PR25.c: 57: unsigned int id2[2]={22449,0};
[e = _id2 F1159 ]
[; ;PR25.c: 59: init();
"59
[e ( _init ..  ]
[; ;PR25.c: 60: lcd_clr();
"60
[e ( _lcd_clr ..  ]
[; ;PR25.c: 61: id1[1]=0;
"61
[e = *U + &U _id1 * -> -> -> 1 `i `ui `ux -> -> # *U &U _id1 `ui `ux -> -> 0 `i `uc ]
[; ;PR25.c: 62: id2[1]=0;
"62
[e = *U + &U _id2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _id2 `ui `ux -> -> 0 `i `ui ]
[; ;PR25.c: 63: RC4=1;
"63
[e = _RC4 -> -> 1 `i `b ]
[; ;PR25.c: 64: lcd_goto(0);
"64
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR25.c: 65: send_string (" RFID door");
"65
[e ( _send_string (1 :s 1C ]
[; ;PR25.c: 66: lcd_goto(20);
"66
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR25.c: 67: send_string (" security");
"67
[e ( _send_string (1 :s 2C ]
[; ;PR25.c: 69: for(repeat=12; repeat>0; repeat--)
"69
{
[e = _repeat -> -> 12 `i `uc ]
[e $ > -> _repeat `i -> 0 `i 152  ]
[e $U 153  ]
"70
[e :U 152 ]
[; ;PR25.c: 70: {
{
[; ;PR25.c: 71: delay(1000000);
"71
[e ( _delay (1 -> -> 1000000 `l `ul ]
"72
}
"69
[e -- _repeat -> -> 1 `i `uc ]
[e $ > -> _repeat `i -> 0 `i 152  ]
[e :U 153 ]
"72
}
[; ;PR25.c: 72: }
[; ;PR25.c: 74: while(1)
"74
[e :U 156 ]
[; ;PR25.c: 75: {
"75
{
[; ;PR25.c: 76: convert1=0;
"76
[e = _convert1 -> -> 0 `i `uc ]
[; ;PR25.c: 77: convert2=0;
"77
[e = _convert2 -> -> 0 `i `ui ]
[; ;PR25.c: 79: lcd_clr();
"79
[e ( _lcd_clr ..  ]
[; ;PR25.c: 80: lcd_goto(0);
"80
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR25.c: 81: send_string ("Place your tag");
"81
[e ( _send_string (1 :s 3C ]
[; ;PR25.c: 82: lcd_goto(20);
"82
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR25.c: 83: send_string ("on the reader");
"83
[e ( _send_string (1 :s 4C ]
[; ;PR25.c: 85: while(mode==0)
"85
[e $U 158  ]
[e :U 159 ]
[; ;PR25.c: 86: {
"86
{
[; ;PR25.c: 87: if((RC1==0)||(RC2==0)) mode=1;
"87
[e $ ! || == -> _RC1 `i -> 0 `i == -> _RC2 `i -> 0 `i 161  ]
[e = _mode -> -> 1 `i `uc ]
[e $U 162  ]
"88
[e :U 161 ]
[; ;PR25.c: 88: else if(RA4==0) mode=2;
[e $ ! == -> _RA4 `i -> 0 `i 163  ]
[e = _mode -> -> 2 `i `uc ]
[e :U 163 ]
"89
[e :U 162 ]
}
[e :U 158 ]
"85
[e $ == -> _mode `i -> 0 `i 159  ]
[e :U 160 ]
[; ;PR25.c: 89: }
[; ;PR25.c: 92: while(mode==1)
"92
[e $U 164  ]
[e :U 165 ]
[; ;PR25.c: 93: {
"93
{
[; ;PR25.c: 94: if((RC1==0)&&(RC2==1))
"94
[e $ ! && == -> _RC1 `i -> 0 `i == -> _RC2 `i -> 1 `i 167  ]
[; ;PR25.c: 95: {
"95
{
[; ;PR25.c: 96: data[i]=0;
"96
[e = *U + &U _data * -> _i `ux -> -> # *U &U _data `ui `ux -> -> 0 `i `uc ]
[; ;PR25.c: 97: while((RC1==0)&&(RC2==1));
"97
[e $U 168  ]
[e :U 169 ]
[e :U 168 ]
[e $ && == -> _RC1 `i -> 0 `i == -> _RC2 `i -> 1 `i 169  ]
[e :U 170 ]
"98
}
[; ;PR25.c: 98: }
[e $U 171  ]
"99
[e :U 167 ]
[; ;PR25.c: 99: else if ((RC1==1)&&(RC2==0))
[e $ ! && == -> _RC1 `i -> 1 `i == -> _RC2 `i -> 0 `i 172  ]
[; ;PR25.c: 100: {
"100
{
[; ;PR25.c: 101: data[i]=1;
"101
[e = *U + &U _data * -> _i `ux -> -> # *U &U _data `ui `ux -> -> 1 `i `uc ]
[; ;PR25.c: 102: while((RC1==1)&&(RC2==0));
"102
[e $U 173  ]
[e :U 174 ]
[e :U 173 ]
[e $ && == -> _RC1 `i -> 1 `i == -> _RC2 `i -> 0 `i 174  ]
[e :U 175 ]
"103
}
[e :U 172 ]
"104
[e :U 171 ]
[; ;PR25.c: 103: }
[; ;PR25.c: 104: i+=1;
[e =+ _i -> -> 1 `i `uc ]
[; ;PR25.c: 106: while(i<26)
"106
[e $U 176  ]
[e :U 177 ]
[; ;PR25.c: 107: {
"107
{
[; ;PR25.c: 108: while((RC1==1)&&(RC2==1));
"108
[e $U 179  ]
[e :U 180 ]
[e :U 179 ]
[e $ && == -> _RC1 `i -> 1 `i == -> _RC2 `i -> 1 `i 180  ]
[e :U 181 ]
[; ;PR25.c: 109: if((RC1==0)&&(RC2==1))
"109
[e $ ! && == -> _RC1 `i -> 0 `i == -> _RC2 `i -> 1 `i 182  ]
[; ;PR25.c: 110: {
"110
{
[; ;PR25.c: 111: data[i]=0;
"111
[e = *U + &U _data * -> _i `ux -> -> # *U &U _data `ui `ux -> -> 0 `i `uc ]
[; ;PR25.c: 112: while((RC1==0)&&(RC2==1));
"112
[e $U 183  ]
[e :U 184 ]
[e :U 183 ]
[e $ && == -> _RC1 `i -> 0 `i == -> _RC2 `i -> 1 `i 184  ]
[e :U 185 ]
"113
}
[; ;PR25.c: 113: }
[e $U 186  ]
"114
[e :U 182 ]
[; ;PR25.c: 114: else if ((RC1==1)&&(RC2==0))
[e $ ! && == -> _RC1 `i -> 1 `i == -> _RC2 `i -> 0 `i 187  ]
[; ;PR25.c: 115: {
"115
{
[; ;PR25.c: 116: data[i]=1;
"116
[e = *U + &U _data * -> _i `ux -> -> # *U &U _data `ui `ux -> -> 1 `i `uc ]
[; ;PR25.c: 117: while((RC1==1)&&(RC2==0));
"117
[e $U 188  ]
[e :U 189 ]
[e :U 188 ]
[e $ && == -> _RC1 `i -> 1 `i == -> _RC2 `i -> 0 `i 189  ]
[e :U 190 ]
"118
}
[e :U 187 ]
"119
[e :U 186 ]
[; ;PR25.c: 118: }
[; ;PR25.c: 119: i+=1;
[e =+ _i -> -> 1 `i `uc ]
"120
}
[e :U 176 ]
"106
[e $ < -> _i `i -> 26 `i 177  ]
[e :U 178 ]
[; ;PR25.c: 120: }
[; ;PR25.c: 122: mode=0;
"122
[e = _mode -> -> 0 `i `uc ]
[; ;PR25.c: 124: i=0;
"124
[e = _i -> -> 0 `i `uc ]
[; ;PR25.c: 125: lcd_clr();
"125
[e ( _lcd_clr ..  ]
[; ;PR25.c: 127: for(i=0;i<8;i++)
"127
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 191  ]
[e $U 192  ]
"128
[e :U 191 ]
[; ;PR25.c: 128: {
{
[; ;PR25.c: 129: convert1=(convert1<<1)|data[i+1];
"129
[e = _convert1 -> | << -> _convert1 `i -> 1 `i -> *U + &U _data * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _data `ui `ux `i `uc ]
"130
}
"127
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 191  ]
[e :U 192 ]
"130
}
[; ;PR25.c: 130: }
[; ;PR25.c: 131: for(i=0;i<16;i++)
"131
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 194  ]
[e $U 195  ]
"132
[e :U 194 ]
[; ;PR25.c: 132: {
{
[; ;PR25.c: 133: convert2=(convert2<<1)|data[i+9];
"133
[e = _convert2 | << _convert2 -> 1 `i -> *U + &U _data * -> -> + -> _i `i -> 9 `i `ui `ux -> -> # *U &U _data `ui `ux `ui ]
"134
}
"131
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 194  ]
[e :U 195 ]
"134
}
[; ;PR25.c: 134: }
[; ;PR25.c: 136: for(b=0;b<2;b++)
"136
{
[e = _b -> -> 0 `i `uc ]
[e $ < -> _b `i -> 2 `i 197  ]
[e $U 198  ]
"137
[e :U 197 ]
[; ;PR25.c: 137: {
{
[; ;PR25.c: 138: if((convert1==id1[b])&&(convert2==id2[b])) database=1;
"138
[e $ ! && == -> _convert1 `i -> *U + &U _id1 * -> _b `ux -> -> # *U &U _id1 `ui `ux `i == _convert2 *U + &U _id2 * -> _b `ux -> -> # *U &U _id2 `ui `ux 200  ]
[e = _database -> -> 1 `i `uc ]
[e :U 200 ]
"139
}
"136
[e ++ _b -> -> 1 `i `uc ]
[e $ < -> _b `i -> 2 `i 197  ]
[e :U 198 ]
"139
}
[; ;PR25.c: 139: }
[; ;PR25.c: 140: lcd_clr();
"140
[e ( _lcd_clr ..  ]
"141
}
[e :U 164 ]
"92
[e $ == -> _mode `i -> 1 `i 165  ]
[e :U 166 ]
[; ;PR25.c: 141: }
[; ;PR25.c: 144: while(mode==2)
"144
[e $U 201  ]
[e :U 202 ]
[; ;PR25.c: 145: {
"145
{
[; ;PR25.c: 146: lcd_clr();
"146
[e ( _lcd_clr ..  ]
[; ;PR25.c: 147: lcd_goto(0);
"147
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR25.c: 148: send_string ("    Save mode   ");
"148
[e ( _send_string (1 :s 5C ]
[; ;PR25.c: 149: lcd_goto(20);
"149
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR25.c: 150: send_string (" Place your tag");
"150
[e ( _send_string (1 :s 6C ]
[; ;PR25.c: 152: while(i<26)
"152
[e $U 204  ]
[e :U 205 ]
[; ;PR25.c: 153: {
"153
{
[; ;PR25.c: 154: while((RC1==1)&&(RC2==1));
"154
[e $U 207  ]
[e :U 208 ]
[e :U 207 ]
[e $ && == -> _RC1 `i -> 1 `i == -> _RC2 `i -> 1 `i 208  ]
[e :U 209 ]
[; ;PR25.c: 155: if((RC1==0)&&(RC2==1))
"155
[e $ ! && == -> _RC1 `i -> 0 `i == -> _RC2 `i -> 1 `i 210  ]
[; ;PR25.c: 156: {
"156
{
[; ;PR25.c: 157: data[i]=0;
"157
[e = *U + &U _data * -> _i `ux -> -> # *U &U _data `ui `ux -> -> 0 `i `uc ]
[; ;PR25.c: 158: while((RC1==0)&&(RC2==1));
"158
[e $U 211  ]
[e :U 212 ]
[e :U 211 ]
[e $ && == -> _RC1 `i -> 0 `i == -> _RC2 `i -> 1 `i 212  ]
[e :U 213 ]
"159
}
[; ;PR25.c: 159: }
[e $U 214  ]
"160
[e :U 210 ]
[; ;PR25.c: 160: else if ((RC1==1)&&(RC2==0))
[e $ ! && == -> _RC1 `i -> 1 `i == -> _RC2 `i -> 0 `i 215  ]
[; ;PR25.c: 161: {
"161
{
[; ;PR25.c: 162: data[i]=1;
"162
[e = *U + &U _data * -> _i `ux -> -> # *U &U _data `ui `ux -> -> 1 `i `uc ]
[; ;PR25.c: 163: while((RC1==1)&&(RC2==0));
"163
[e $U 216  ]
[e :U 217 ]
[e :U 216 ]
[e $ && == -> _RC1 `i -> 1 `i == -> _RC2 `i -> 0 `i 217  ]
[e :U 218 ]
"164
}
[e :U 215 ]
"165
[e :U 214 ]
[; ;PR25.c: 164: }
[; ;PR25.c: 165: i+=1;
[e =+ _i -> -> 1 `i `uc ]
"166
}
[e :U 204 ]
"152
[e $ < -> _i `i -> 26 `i 205  ]
[e :U 206 ]
[; ;PR25.c: 166: }
[; ;PR25.c: 168: mode=0;
"168
[e = _mode -> -> 0 `i `uc ]
[; ;PR25.c: 169: i=0;
"169
[e = _i -> -> 0 `i `uc ]
[; ;PR25.c: 170: lcd_clr();
"170
[e ( _lcd_clr ..  ]
[; ;PR25.c: 172: for(i=0;i<8;i++)
"172
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 219  ]
[e $U 220  ]
"173
[e :U 219 ]
[; ;PR25.c: 173: {
{
[; ;PR25.c: 174: convert1=(convert1<<1)|data[i+1];
"174
[e = _convert1 -> | << -> _convert1 `i -> 1 `i -> *U + &U _data * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _data `ui `ux `i `uc ]
"175
}
"172
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 219  ]
[e :U 220 ]
"175
}
[; ;PR25.c: 175: }
[; ;PR25.c: 176: for(i=0;i<16;i++)
"176
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 222  ]
[e $U 223  ]
"177
[e :U 222 ]
[; ;PR25.c: 177: {
{
[; ;PR25.c: 178: convert2=(convert2<<1)|data[i+9];
"178
[e = _convert2 | << _convert2 -> 1 `i -> *U + &U _data * -> -> + -> _i `i -> 9 `i `ui `ux -> -> # *U &U _data `ui `ux `ui ]
"179
}
"176
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 222  ]
[e :U 223 ]
"179
}
[; ;PR25.c: 179: }
[; ;PR25.c: 181: id1[1]=convert1;
"181
[e = *U + &U _id1 * -> -> -> 1 `i `ui `ux -> -> # *U &U _id1 `ui `ux _convert1 ]
[; ;PR25.c: 182: id2[1]=convert2;
"182
[e = *U + &U _id2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _id2 `ui `ux _convert2 ]
[; ;PR25.c: 184: database=2;
"184
[e = _database -> -> 2 `i `uc ]
[; ;PR25.c: 185: lcd_clr();
"185
[e ( _lcd_clr ..  ]
"186
}
[e :U 201 ]
"144
[e $ == -> _mode `i -> 2 `i 202  ]
[e :U 203 ]
[; ;PR25.c: 186: }
[; ;PR25.c: 188: switch(database)
"188
[e $U 226  ]
[; ;PR25.c: 189: {
"189
{
[; ;PR25.c: 190: case 1:
"190
[e :U 227 ]
[; ;PR25.c: 191: RA1=1;
"191
[e = _RA1 -> -> 1 `i `b ]
[; ;PR25.c: 192: RC3=0;
"192
[e = _RC3 -> -> 0 `i `b ]
[; ;PR25.c: 193: lcd_goto(0);
"193
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR25.c: 194: send_string("ID no: ");
"194
[e ( _send_string (1 :s 7C ]
[; ;PR25.c: 195: lcd_goto(7);
"195
[e ( _lcd_goto (1 -> -> 7 `i `uc ]
[; ;PR25.c: 196: send_dec(convert1,3);
"196
[e ( _send_dec (2 , -> _convert1 `ul -> -> 3 `i `uc ]
[; ;PR25.c: 197: lcd_goto(10);
"197
[e ( _lcd_goto (1 -> -> 10 `i `uc ]
[; ;PR25.c: 198: send_dec(convert2,5);
"198
[e ( _send_dec (2 , -> _convert2 `ul -> -> 5 `i `uc ]
[; ;PR25.c: 199: lcd_goto(20);
"199
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR25.c: 200: send_string("User identified. ");
"200
[e ( _send_string (1 :s 8C ]
[; ;PR25.c: 201: for(repeat=12; repeat>0; repeat--)
"201
{
[e = _repeat -> -> 12 `i `uc ]
[e $ > -> _repeat `i -> 0 `i 228  ]
[e $U 229  ]
"202
[e :U 228 ]
[; ;PR25.c: 202: {
{
[; ;PR25.c: 203: delay(1000000);
"203
[e ( _delay (1 -> -> 1000000 `l `ul ]
"204
}
"201
[e -- _repeat -> -> 1 `i `uc ]
[e $ > -> _repeat `i -> 0 `i 228  ]
[e :U 229 ]
"204
}
[; ;PR25.c: 204: }
[; ;PR25.c: 205: lcd_clr();
"205
[e ( _lcd_clr ..  ]
[; ;PR25.c: 206: lcd_goto(0);
"206
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR25.c: 207: send_string("Door lock will");
"207
[e ( _send_string (1 :s 9C ]
[; ;PR25.c: 208: lcd_goto(20);
"208
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR25.c: 209: send_string("be locked in ");
"209
[e ( _send_string (1 :s 10C ]
[; ;PR25.c: 211: for(a=5;a>0;a--)
"211
{
[e = _a -> -> 5 `i `uc ]
[e $ > -> _a `i -> 0 `i 231  ]
[e $U 232  ]
"212
[e :U 231 ]
[; ;PR25.c: 212: {
{
[; ;PR25.c: 213: lcd_goto(34);
"213
[e ( _lcd_goto (1 -> -> 34 `i `uc ]
[; ;PR25.c: 214: send_dec(a, 1);
"214
[e ( _send_dec (2 , -> _a `ul -> -> 1 `i `uc ]
[; ;PR25.c: 215: for(repeat=10; repeat>0; repeat--)
"215
{
[e = _repeat -> -> 10 `i `uc ]
[e $ > -> _repeat `i -> 0 `i 234  ]
[e $U 235  ]
"216
[e :U 234 ]
[; ;PR25.c: 216: {
{
[; ;PR25.c: 217: delay(1000000);
"217
[e ( _delay (1 -> -> 1000000 `l `ul ]
"218
}
"215
[e -- _repeat -> -> 1 `i `uc ]
[e $ > -> _repeat `i -> 0 `i 234  ]
[e :U 235 ]
"218
}
"219
}
"211
[e -- _a -> -> 1 `i `uc ]
[e $ > -> _a `i -> 0 `i 231  ]
[e :U 232 ]
"219
}
[; ;PR25.c: 218: }
[; ;PR25.c: 219: }
[; ;PR25.c: 220: break;
"220
[e $U 225  ]
[; ;PR25.c: 222: case 2:
"222
[e :U 237 ]
[; ;PR25.c: 223: RA1=1;
"223
[e = _RA1 -> -> 1 `i `b ]
[; ;PR25.c: 224: RC3=0;
"224
[e = _RC3 -> -> 0 `i `b ]
[; ;PR25.c: 225: lcd_clr();
"225
[e ( _lcd_clr ..  ]
[; ;PR25.c: 226: lcd_goto(0);
"226
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR25.c: 227: send_string("ID no: ");
"227
[e ( _send_string (1 :s 11C ]
[; ;PR25.c: 228: lcd_goto(7);
"228
[e ( _lcd_goto (1 -> -> 7 `i `uc ]
[; ;PR25.c: 229: send_dec(convert1,3);
"229
[e ( _send_dec (2 , -> _convert1 `ul -> -> 3 `i `uc ]
[; ;PR25.c: 230: lcd_goto(10);
"230
[e ( _lcd_goto (1 -> -> 10 `i `uc ]
[; ;PR25.c: 231: send_dec(convert2,5);
"231
[e ( _send_dec (2 , -> _convert2 `ul -> -> 5 `i `uc ]
[; ;PR25.c: 232: lcd_goto(20);
"232
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR25.c: 233: send_string("User ID saved.");
"233
[e ( _send_string (1 :s 12C ]
[; ;PR25.c: 234: break;
"234
[e $U 225  ]
[; ;PR25.c: 236: default:
"236
[e :U 238 ]
[; ;PR25.c: 237: RA1=0;
"237
[e = _RA1 -> -> 0 `i `b ]
[; ;PR25.c: 238: RC3=1;
"238
[e = _RC3 -> -> 1 `i `b ]
[; ;PR25.c: 239: lcd_goto(0);
"239
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR25.c: 240: send_string("ID no: ");
"240
[e ( _send_string (1 :s 13C ]
[; ;PR25.c: 241: lcd_goto(7);
"241
[e ( _lcd_goto (1 -> -> 7 `i `uc ]
[; ;PR25.c: 242: send_dec(convert1,3);
"242
[e ( _send_dec (2 , -> _convert1 `ul -> -> 3 `i `uc ]
[; ;PR25.c: 243: lcd_goto(10);
"243
[e ( _lcd_goto (1 -> -> 10 `i `uc ]
[; ;PR25.c: 244: send_dec(convert2,5);
"244
[e ( _send_dec (2 , -> _convert2 `ul -> -> 5 `i `uc ]
[; ;PR25.c: 245: lcd_goto(20);
"245
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR25.c: 246: send_string("User not found.");
"246
[e ( _send_string (1 :s 14C ]
[; ;PR25.c: 247: break;
"247
[e $U 225  ]
"248
}
[; ;PR25.c: 248: }
[e $U 225  ]
"188
[e :U 226 ]
[e [\ _database , $ -> -> 1 `i `uc 227
 , $ -> -> 2 `i `uc 237
 238 ]
"248
[e :U 225 ]
[; ;PR25.c: 250: for(repeat=12; repeat>0; repeat--)
"250
{
[e = _repeat -> -> 12 `i `uc ]
[e $ > -> _repeat `i -> 0 `i 239  ]
[e $U 240  ]
"251
[e :U 239 ]
[; ;PR25.c: 251: {
{
[; ;PR25.c: 252: delay(1000000);
"252
[e ( _delay (1 -> -> 1000000 `l `ul ]
"253
}
"250
[e -- _repeat -> -> 1 `i `uc ]
[e $ > -> _repeat `i -> 0 `i 239  ]
[e :U 240 ]
"253
}
[; ;PR25.c: 253: }
[; ;PR25.c: 255: i=0;
"255
[e = _i -> -> 0 `i `uc ]
[; ;PR25.c: 256: RC3=0;
"256
[e = _RC3 -> -> 0 `i `b ]
[; ;PR25.c: 257: database=0;
"257
[e = _database -> -> 0 `i `uc ]
[; ;PR25.c: 258: RA1=0;
"258
[e = _RA1 -> -> 0 `i `b ]
[; ;PR25.c: 259: convert1=0;
"259
[e = _convert1 -> -> 0 `i `uc ]
[; ;PR25.c: 260: convert2=0;
"260
[e = _convert2 -> -> 0 `i `ui ]
"261
}
[e :U 155 ]
"74
[e $U 156  ]
[e :U 157 ]
[; ;PR25.c: 261: }
[; ;PR25.c: 262: }
"262
[e :UE 151 ]
}
"267
[v _init `(v ~T0 1 ef ]
{
[; ;PR25.c: 266: void init()
[; ;PR25.c: 267: {
[e :U _init ]
[f ]
[; ;PR25.c: 269: ADCON1 = 0X06;
"269
[e = _ADCON1 -> -> 6 `i `uc ]
[; ;PR25.c: 272: TRISA = 0b00111100;
"272
[e = _TRISA -> -> 60 `i `uc ]
[; ;PR25.c: 273: TRISB = 0b00000000;
"273
[e = _TRISB -> -> 0 `i `uc ]
[; ;PR25.c: 274: TRISC = 0b00000111;
"274
[e = _TRISC -> -> 7 `i `uc ]
[; ;PR25.c: 277: send_config(0b00000001);
"277
[e ( _send_config (1 -> -> 1 `i `uc ]
[; ;PR25.c: 278: send_config(0b00000010);
"278
[e ( _send_config (1 -> -> 2 `i `uc ]
[; ;PR25.c: 279: send_config(0b00000110);
"279
[e ( _send_config (1 -> -> 6 `i `uc ]
[; ;PR25.c: 280: send_config(0b00001100);
"280
[e ( _send_config (1 -> -> 12 `i `uc ]
[; ;PR25.c: 281: send_config(0b00111000);
"281
[e ( _send_config (1 -> -> 56 `i `uc ]
[; ;PR25.c: 283: RC4=0;
"283
[e = _RC4 -> -> 0 `i `b ]
[; ;PR25.c: 284: delay(5000);
"284
[e ( _delay (1 -> -> -> 5000 `i `l `ul ]
[; ;PR25.c: 285: RC3=0;
"285
[e = _RC3 -> -> 0 `i `b ]
[; ;PR25.c: 286: RA1=0;
"286
[e = _RA1 -> -> 0 `i `b ]
[; ;PR25.c: 287: }
"287
[e :UE 242 ]
}
"292
[v _delay `(v ~T0 1 ef1`ul ]
{
[; ;PR25.c: 291: void delay(unsigned long data)
[; ;PR25.c: 292: {
[e :U _delay ]
[v _data `ul ~T0 1 r1 ]
[f ]
"293
[v _i `i ~T0 1 a ]
[; ;PR25.c: 293: int i;
[; ;PR25.c: 294: for( i = data; i>0; i--);
"294
{
[e = _i -> _data `i ]
[e $ > _i -> 0 `i 244  ]
[e $U 245  ]
[e :U 244 ]
[e -- _i -> 1 `i ]
[e $ > _i -> 0 `i 244  ]
[e :U 245 ]
}
[; ;PR25.c: 295: }
"295
[e :UE 243 ]
}
"298
[v _send_config `(v ~T0 1 ef1`uc ]
{
[; ;PR25.c: 297: void send_config(unsigned char data)
[; ;PR25.c: 298: {
[e :U _send_config ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR25.c: 299: RA0=0;
"299
[e = _RA0 -> -> 0 `i `b ]
[; ;PR25.c: 300: PORTB=data;
"300
[e = _PORTB _data ]
[; ;PR25.c: 301: delay(400);
"301
[e ( _delay (1 -> -> -> 400 `i `l `ul ]
[; ;PR25.c: 302: e_pulse();
"302
[e ( _e_pulse ..  ]
[; ;PR25.c: 303: }
"303
[e :UE 247 ]
}
"306
[v _send_char `(v ~T0 1 ef1`uc ]
{
[; ;PR25.c: 305: void send_char(unsigned char data)
[; ;PR25.c: 306: {
[e :U _send_char ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR25.c: 307: RA0=1;
"307
[e = _RA0 -> -> 1 `i `b ]
[; ;PR25.c: 308: PORTB = data;
"308
[e = _PORTB _data ]
[; ;PR25.c: 309: delay(400);
"309
[e ( _delay (1 -> -> -> 400 `i `l `ul ]
[; ;PR25.c: 310: e_pulse();
"310
[e ( _e_pulse ..  ]
[; ;PR25.c: 311: }
"311
[e :UE 248 ]
}
"314
[v _send_dec `(v ~T0 1 ef2`ul`uc ]
{
[; ;PR25.c: 313: void send_dec(unsigned long data,unsigned char num_dig)
[; ;PR25.c: 314: {
[e :U _send_dec ]
[v _data `ul ~T0 1 r1 ]
[v _num_dig `uc ~T0 1 r2 ]
[f ]
[; ;PR25.c: 315: if(num_dig>=10)
"315
[e $ ! >= -> _num_dig `i -> 10 `i 250  ]
[; ;PR25.c: 316: {
"316
{
[; ;PR25.c: 317: data=data%10000000000;
"317
[e = _data % _data -> -> 1410065408 `l `ul ]
[; ;PR25.c: 318: send_char(data/1000000000+0x30);
"318
[e ( _send_char (1 -> + / _data -> -> 1000000000 `l `ul -> -> -> 48 `i `l `ul `uc ]
"319
}
[e :U 250 ]
[; ;PR25.c: 319: }
[; ;PR25.c: 320: if(num_dig>=9)
"320
[e $ ! >= -> _num_dig `i -> 9 `i 251  ]
[; ;PR25.c: 321: {
"321
{
[; ;PR25.c: 322: data=data%1000000000;
"322
[e = _data % _data -> -> 1000000000 `l `ul ]
[; ;PR25.c: 323: send_char(data/100000000+0x30);
"323
[e ( _send_char (1 -> + / _data -> -> 100000000 `l `ul -> -> -> 48 `i `l `ul `uc ]
"324
}
[e :U 251 ]
[; ;PR25.c: 324: }
[; ;PR25.c: 325: if(num_dig>=8)
"325
[e $ ! >= -> _num_dig `i -> 8 `i 252  ]
[; ;PR25.c: 326: {
"326
{
[; ;PR25.c: 327: data=data%100000000;
"327
[e = _data % _data -> -> 100000000 `l `ul ]
[; ;PR25.c: 328: send_char(data/10000000+0x30);
"328
[e ( _send_char (1 -> + / _data -> -> 10000000 `l `ul -> -> -> 48 `i `l `ul `uc ]
"329
}
[e :U 252 ]
[; ;PR25.c: 329: }
[; ;PR25.c: 330: if(num_dig>=7)
"330
[e $ ! >= -> _num_dig `i -> 7 `i 253  ]
[; ;PR25.c: 331: {
"331
{
[; ;PR25.c: 332: data=data%10000000;
"332
[e = _data % _data -> -> 10000000 `l `ul ]
[; ;PR25.c: 333: send_char(data/1000000+0x30);
"333
[e ( _send_char (1 -> + / _data -> -> 1000000 `l `ul -> -> -> 48 `i `l `ul `uc ]
"334
}
[e :U 253 ]
[; ;PR25.c: 334: }
[; ;PR25.c: 335: if(num_dig>=6)
"335
[e $ ! >= -> _num_dig `i -> 6 `i 254  ]
[; ;PR25.c: 336: {
"336
{
[; ;PR25.c: 337: data=data%1000000;
"337
[e = _data % _data -> -> 1000000 `l `ul ]
[; ;PR25.c: 338: send_char(data/100000+0x30);
"338
[e ( _send_char (1 -> + / _data -> -> 100000 `l `ul -> -> -> 48 `i `l `ul `uc ]
"339
}
[e :U 254 ]
[; ;PR25.c: 339: }
[; ;PR25.c: 340: if(num_dig>=5)
"340
[e $ ! >= -> _num_dig `i -> 5 `i 255  ]
[; ;PR25.c: 341: {
"341
{
[; ;PR25.c: 342: data=data%100000;
"342
[e = _data % _data -> -> 100000 `l `ul ]
[; ;PR25.c: 343: send_char(data/10000+0x30);
"343
[e ( _send_char (1 -> + / _data -> -> -> 10000 `i `l `ul -> -> -> 48 `i `l `ul `uc ]
"344
}
[e :U 255 ]
[; ;PR25.c: 344: }
[; ;PR25.c: 345: if(num_dig>=4)
"345
[e $ ! >= -> _num_dig `i -> 4 `i 256  ]
[; ;PR25.c: 346: {
"346
{
[; ;PR25.c: 347: data=data%10000;
"347
[e = _data % _data -> -> -> 10000 `i `l `ul ]
[; ;PR25.c: 348: send_char(data/1000+0x30);
"348
[e ( _send_char (1 -> + / _data -> -> -> 1000 `i `l `ul -> -> -> 48 `i `l `ul `uc ]
"349
}
[e :U 256 ]
[; ;PR25.c: 349: }
[; ;PR25.c: 350: if(num_dig>=3)
"350
[e $ ! >= -> _num_dig `i -> 3 `i 257  ]
[; ;PR25.c: 351: {
"351
{
[; ;PR25.c: 352: data=data%1000;
"352
[e = _data % _data -> -> -> 1000 `i `l `ul ]
[; ;PR25.c: 353: send_char(data/100+0x30);
"353
[e ( _send_char (1 -> + / _data -> -> -> 100 `i `l `ul -> -> -> 48 `i `l `ul `uc ]
"354
}
[e :U 257 ]
[; ;PR25.c: 354: }
[; ;PR25.c: 355: if(num_dig>=2)
"355
[e $ ! >= -> _num_dig `i -> 2 `i 258  ]
[; ;PR25.c: 356: {
"356
{
[; ;PR25.c: 357: data=data%100;
"357
[e = _data % _data -> -> -> 100 `i `l `ul ]
[; ;PR25.c: 358: send_char(data/10+0x30);
"358
[e ( _send_char (1 -> + / _data -> -> -> 10 `i `l `ul -> -> -> 48 `i `l `ul `uc ]
"359
}
[e :U 258 ]
[; ;PR25.c: 359: }
[; ;PR25.c: 360: if(num_dig>=1)
"360
[e $ ! >= -> _num_dig `i -> 1 `i 259  ]
[; ;PR25.c: 361: {
"361
{
[; ;PR25.c: 362: data=data%10;
"362
[e = _data % _data -> -> -> 10 `i `l `ul ]
[; ;PR25.c: 363: send_char(data+0x30);
"363
[e ( _send_char (1 -> + _data -> -> -> 48 `i `l `ul `uc ]
"364
}
[e :U 259 ]
[; ;PR25.c: 364: }
[; ;PR25.c: 365: }
"365
[e :UE 249 ]
}
"368
[v _e_pulse `(v ~T0 1 ef ]
{
[; ;PR25.c: 367: void e_pulse(void)
[; ;PR25.c: 368: {
[e :U _e_pulse ]
[f ]
[; ;PR25.c: 369: RC5=1;
"369
[e = _RC5 -> -> 1 `i `b ]
[; ;PR25.c: 370: delay(300);
"370
[e ( _delay (1 -> -> -> 300 `i `l `ul ]
[; ;PR25.c: 371: RC5=0;
"371
[e = _RC5 -> -> 0 `i `b ]
[; ;PR25.c: 372: delay(300);
"372
[e ( _delay (1 -> -> -> 300 `i `l `ul ]
[; ;PR25.c: 373: }
"373
[e :UE 260 ]
}
"376
[v _lcd_goto `(v ~T0 1 ef1`uc ]
{
[; ;PR25.c: 375: void lcd_goto(unsigned char data)
[; ;PR25.c: 376: {
[e :U _lcd_goto ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR25.c: 377: if(data<16)
"377
[e $ ! < -> _data `i -> 16 `i 262  ]
[; ;PR25.c: 378: {
"378
{
[; ;PR25.c: 379: send_config(0x80+data);
"379
[e ( _send_config (1 -> + -> 128 `i -> _data `i `uc ]
"380
}
[; ;PR25.c: 380: }
[e $U 263  ]
"381
[e :U 262 ]
[; ;PR25.c: 381: else
[; ;PR25.c: 382: {
"382
{
[; ;PR25.c: 383: data=data-20;
"383
[e = _data -> - -> _data `i -> 20 `i `uc ]
[; ;PR25.c: 384: send_config(0xc0+data);
"384
[e ( _send_config (1 -> + -> 192 `i -> _data `i `uc ]
"385
}
[e :U 263 ]
[; ;PR25.c: 385: }
[; ;PR25.c: 386: }
"386
[e :UE 261 ]
}
"390
[v _lcd_clr `(v ~T0 1 ef ]
{
[; ;PR25.c: 389: void lcd_clr(void)
[; ;PR25.c: 390: {
[e :U _lcd_clr ]
[f ]
[; ;PR25.c: 391: send_config(0x01);
"391
[e ( _send_config (1 -> -> 1 `i `uc ]
[; ;PR25.c: 392: delay(350);
"392
[e ( _delay (1 -> -> -> 350 `i `l `ul ]
[; ;PR25.c: 393: }
"393
[e :UE 264 ]
}
"396
[v _send_string `(v ~T0 1 ef1`*Cuc ]
{
[; ;PR25.c: 395: void send_string(const char *s)
[; ;PR25.c: 396: {
[e :U _send_string ]
[v _s `*Cuc ~T0 1 r1 ]
[f ]
[; ;PR25.c: 397: while (s && *s)send_char (*s++);
"397
[e $U 266  ]
[e :U 267 ]
[e ( _send_char (1 *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e :U 266 ]
[e $ && != _s -> -> 0 `i `*Cuc != -> *U _s `i -> -> -> 0 `i `Cuc `i 267  ]
[e :U 268 ]
[; ;PR25.c: 398: }
"398
[e :UE 265 ]
}
[a 2C 32 115 101 99 117 114 105 116 121 0 ]
[a 1C 32 82 70 73 68 32 100 111 111 114 0 ]
[a 4C 111 110 32 116 104 101 32 114 101 97 100 101 114 0 ]
[a 9C 68 111 111 114 32 108 111 99 107 32 119 105 108 108 0 ]
[a 6C 32 80 108 97 99 101 32 121 111 117 114 32 116 97 103 0 ]
[a 3C 80 108 97 99 101 32 121 111 117 114 32 116 97 103 0 ]
[a 14C 85 115 101 114 32 110 111 116 32 102 111 117 110 100 46 0 ]
[a 12C 85 115 101 114 32 73 68 32 115 97 118 101 100 46 0 ]
[a 10C 98 101 32 108 111 99 107 101 100 32 105 110 32 0 ]
[a 7C 73 68 32 110 111 58 32 0 ]
[a 11C 73 68 32 110 111 58 32 0 ]
[a 13C 73 68 32 110 111 58 32 0 ]
[a 8C 85 115 101 114 32 105 100 101 110 116 105 102 105 101 100 46 32 0 ]
[a 5C 32 32 32 32 83 97 118 101 32 109 111 100 101 32 32 32 0 ]
